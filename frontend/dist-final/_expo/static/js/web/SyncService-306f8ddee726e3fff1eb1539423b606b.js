__d(function(g,r,_i,a,m,_e,_d){"use strict";Object.defineProperty(_e,'__esModule',{value:!0}),Object.defineProperty(_e,"SyncService",{enumerable:!0,get:function(){return s}}),Object.defineProperty(_e,"syncService",{enumerable:!0,get:function(){return c}});var e,t=(function(e){if(e&&e.__esModule)return e;var t={};return e&&Object.keys(e).forEach(function(n){var o=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return e[n]}})}),t.default=e,t})(r(_d[0])),n=r(_d[1]),o=(e=n)&&e.__esModule?e:{default:e},i=r(_d[2]);class s{syncInterval=null;isInitialized=!1;constructor(){this.backendUrl="https://smoothroad.preview.emergentagent.com",console.log('\ud83d\udd17 SyncService backend URL:',this.backendUrl)}async initialize(){if(!this.isInitialized)try{await i.localDB.initialize(),i.localDB.getDatabaseStats&&this.startPeriodicSync(),this.isInitialized=!0,console.log('\u2705 Sync service initialized')}catch(e){console.error('\u274c Sync service initialization error:',e),console.warn('\u26a0\ufe0f Sync service continuing without local database'),this.isInitialized=!0}}startPeriodicSync(){this.syncInterval=setInterval(async()=>{(await t.getNetworkStateAsync()).isConnected&&await this.syncWithServer()},3e4)}async stopPeriodicSync(){this.syncInterval&&(clearInterval(this.syncInterval),this.syncInterval=null)}async syncWithServer(){try{return(await t.getNetworkStateAsync()).isConnected?(console.log('\ud83d\udd04 Starting sync with server...'),await this.uploadSensorData(),await this.downloadUpdatedWarnings(),await o.default.setItem('last_sync_time',(new Date).toISOString()),await i.localDB.cleanupOldData(30),console.log('\u2705 Sync completed successfully'),!0):(console.log('\ud83d\udce1 No internet connection - sync skipped'),!1)}catch(e){return console.error('\u274c Sync error:',e),!1}}async uploadSensorData(){const e=await i.localDB.getUnsyncedSensorData();if(0!==e.length){console.log(`\ud83d\udce4 Uploading ${e.length} sensor data records...`);try{const t=50;for(let n=0;n<e.length;n+=t){const o=e.slice(n,n+t),s=await fetch(`${this.backendUrl}api/sensor-data/batch`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({data:o.map(e=>({latitude:e.latitude,longitude:e.longitude,timestamp:e.timestamp,speed:e.speed,accuracy:e.accuracy,accelerometer:e.accelerometer,road_quality_score:e.roadQuality}))})});if(s.ok){const c=await s.json(),l=o.map(e=>e.id),d=c.inserted_ids||[];await i.localDB.markSensorDataSynced(l,d),console.log(`\u2705 Uploaded batch ${Math.floor(n/t)+1}/${Math.ceil(e.length/t)}`)}else console.error(`\u274c Failed to upload batch: ${s.status}`)}}catch(e){console.error('\u274c Upload sensor data error:',e)}}else console.log('\ud83d\udce4 No unsynced sensor data to upload')}async downloadUpdatedWarnings(){try{const e=await i.localDB.getDownloadedRegions();for(const t of e){const e=await fetch(`${this.backendUrl}api/warnings/region/${t.code}?since=${t.lastSync}`);if(e.ok){const n=await e.json();if(n.length>0){const e=n.map(e=>({serverId:e._id,latitude:e.latitude,longitude:e.longitude,hazardType:e.hazard_type,severity:e.severity,description:e.description,isVerified:e.is_verified,region:t.code,city:e.city||'',country:e.country||'',lastUpdated:e.updated_at||(new Date).toISOString()}));await i.localDB.saveWarnings(e),await i.localDB.updateRegionSyncStatus(t.code,t.name,n.length),console.log(`\ud83d\udce5 Downloaded ${n.length} warnings for ${t.name}`)}}}}catch(e){console.error('\u274c Download warnings error:',e)}}async downloadRegionData(e,n,o){try{if(!(await t.getNetworkStateAsync()).isConnected)throw new Error('No internet connection');console.log(`\ud83d\udce5 Downloading data for region: ${n}...`);const s=await fetch(`${this.backendUrl}api/warnings/region/${e}/full?north=${o.north}&south=${o.south}&east=${o.east}&west=${o.west}`);if(!s.ok)throw new Error(`Failed to download region data: ${s.status}`);const c=await s.json(),l=c.map(t=>({serverId:t._id,latitude:t.latitude,longitude:t.longitude,hazardType:t.hazard_type,severity:t.severity,description:t.description,isVerified:t.is_verified,region:e,city:t.city||'',country:t.country||'',lastUpdated:t.updated_at||(new Date).toISOString()}));return await i.localDB.saveWarnings(l),await i.localDB.updateRegionSyncStatus(e,n,c.length),console.log(`\u2705 Downloaded ${c.length} warnings for ${n}`),!0}catch(e){return console.error(`\u274c Failed to download region ${n}:`,e),!1}}async getAvailableRegions(){try{if(!(await t.getNetworkStateAsync()).isConnected)return[];const e=await fetch(`${this.backendUrl}api/regions/available`);return e.ok?await e.json():[]}catch(e){return console.error('\u274c Failed to get available regions:',e),[]}}async saveOfflineSensorData(e,t,n,o,s,c){const l={latitude:e,longitude:t,timestamp:(new Date).toISOString(),speed:n,accuracy:o,accelerometer:s,roadQuality:c,isSynced:!1};return await i.localDB.saveSensorData(l)}async getNearbyWarningsOffline(e,t,n=1){return await i.localDB.getNearbyWarnings(e,t,n)}async getSyncStatus(){return await i.localDB.getSyncStatus()}async getDatabaseStats(){return await i.localDB.getDatabaseStats()}async forceFullSync(){return console.log('\ud83d\udd04 Forcing full sync...'),await this.syncWithServer()}async clearLocalData(){console.log('\ud83d\uddd1\ufe0f Clearing all local data...')}}const c=new s},779,[781,749,780]);