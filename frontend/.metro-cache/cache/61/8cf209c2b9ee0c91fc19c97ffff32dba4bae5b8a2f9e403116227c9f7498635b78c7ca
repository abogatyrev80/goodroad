{"dependencies":[{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"],"imports":1}},{"name":"./ExpoSQLite","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":38,"index":79}}],"key":"JMBEHx75IUhcsES+gMYZ/XuZotE=","exportNames":["*"],"imports":1}},{"name":"./NativeDatabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":80},"end":{"line":3,"column":54,"index":134}}],"key":"cM0sXe7PyO1BLW+8jY5orQ/nPI0=","exportNames":["*"],"imports":1}},{"name":"./SQLiteSession","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":135},"end":{"line":4,"column":48,"index":183}}],"key":"LHU/jU2mw3wJWz9JoArZGEKMT60=","exportNames":["*"],"imports":1}},{"name":"./SQLiteStatement","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":53,"index":237}}],"key":"Fg1l45pGInPML8KcGatczgkTJMI=","exportNames":["*"],"imports":1}},{"name":"./pathUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":238},"end":{"line":6,"column":49,"index":287}}],"key":"4lTDvlWpJWrPvRfoXTh5A5Zgngw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"SQLiteDatabase\", {\n    enumerable: true,\n    get: function () {\n      return SQLiteDatabase;\n    }\n  });\n  Object.defineProperty(exports, \"defaultDatabaseDirectory\", {\n    enumerable: true,\n    get: function () {\n      return defaultDatabaseDirectory;\n    }\n  });\n  Object.defineProperty(exports, \"bundledExtensions\", {\n    enumerable: true,\n    get: function () {\n      return bundledExtensions;\n    }\n  });\n  exports.openDatabaseAsync = openDatabaseAsync;\n  exports.openDatabaseSync = openDatabaseSync;\n  exports.deserializeDatabaseAsync = deserializeDatabaseAsync;\n  exports.deserializeDatabaseSync = deserializeDatabaseSync;\n  exports.deleteDatabaseAsync = deleteDatabaseAsync;\n  exports.deleteDatabaseSync = deleteDatabaseSync;\n  exports.backupDatabaseAsync = backupDatabaseAsync;\n  exports.backupDatabaseSync = backupDatabaseSync;\n  exports.addDatabaseChangeListener = addDatabaseChangeListener;\n  var _reactNativeWebDistExportsPlatform = require(_dependencyMap[0], \"react-native-web/dist/exports/Platform\");\n  var Platform = _interopDefault(_reactNativeWebDistExportsPlatform);\n  var _ExpoSQLite = require(_dependencyMap[1], \"./ExpoSQLite\");\n  var ExpoSQLite = _interopDefault(_ExpoSQLite);\n  var _NativeDatabase = require(_dependencyMap[2], \"./NativeDatabase\");\n  var _SQLiteSession = require(_dependencyMap[3], \"./SQLiteSession\");\n  var _SQLiteStatement = require(_dependencyMap[4], \"./SQLiteStatement\");\n  var _pathUtils = require(_dependencyMap[5], \"./pathUtils\");\n  /**\n   * A SQLite database.\n   */\n  class SQLiteDatabase {\n    constructor(databasePath, options, nativeDatabase) {\n      this.databasePath = databasePath;\n      this.options = options;\n      this.nativeDatabase = nativeDatabase;\n    }\n    /**\n     * Asynchronous call to return whether the database is currently in a transaction.\n     */\n    isInTransactionAsync() {\n      return this.nativeDatabase.isInTransactionAsync();\n    }\n    /**\n     * Close the database.\n     */\n    closeAsync() {\n      return this.nativeDatabase.closeAsync();\n    }\n    /**\n     * Execute all SQL queries in the supplied string.\n     * > Note: The queries are not escaped for you! Be careful when constructing your queries.\n     *\n     * @param source A string containing all the SQL queries.\n     */\n    execAsync(source) {\n      return this.nativeDatabase.execAsync(source);\n    }\n    /**\n     * [Serialize the database](https://sqlite.org/c3ref/serialize.html) as `Uint8Array`.\n     *\n     * @param databaseName The name of the current attached databases. The default value is `main` which is the default database name.\n     */\n    serializeAsync(databaseName = 'main') {\n      return this.nativeDatabase.serializeAsync(databaseName);\n    }\n    /**\n     * Create a [prepared SQLite statement](https://www.sqlite.org/c3ref/prepare.html).\n     *\n     * @param source A string containing the SQL query.\n     */\n    async prepareAsync(source) {\n      const nativeStatement = new ExpoSQLite.default.NativeStatement();\n      await this.nativeDatabase.prepareAsync(nativeStatement, source);\n      return new _SQLiteStatement.SQLiteStatement(this.nativeDatabase, nativeStatement);\n    }\n    /**\n     * Create a new session for the database.\n     * @see [`sqlite3session_create`](https://www.sqlite.org/session/sqlite3session_create.html)\n     * @param dbName The name of the database to create a session for. The default value is `main`.\n     */\n    async createSessionAsync(dbName = 'main') {\n      const nativeSession = new ExpoSQLite.default.NativeSession();\n      await this.nativeDatabase.createSessionAsync(nativeSession, dbName);\n      return new _SQLiteSession.SQLiteSession(this.nativeDatabase, nativeSession);\n    }\n    /**\n     * Load a SQLite extension.\n     * @param libPath The path to the extension library file.\n     * @param entryPoint The entry point of the extension. If not provided, the default entry point is inferred by [`sqlite3_load_extension`](https://www.sqlite.org/c3ref/load_extension.html).\n     *\n     * @platform android\n     * @platform ios\n     * @platform macos\n     * @platform tvos\n     *\n     * @example\n     * ```ts\n     * // Load `sqlite-vec` from `bundledExtensions`. You need to enable `withSQLiteVecExtension` to include `sqlite-vec`.\n     * const extension = SQLite.bundledExtensions['sqlite-vec'];\n     * await db.loadExtensionAsync(extension.libPath, extension.entryPoint);\n     *\n     * // You can also load a custom extension.\n     * await db.loadExtensionAsync('/path/to/extension');\n     * ```\n     */\n    loadExtensionAsync(libPath, entryPoint) {\n      return this.nativeDatabase.loadExtensionAsync(libPath, entryPoint);\n    }\n    /**\n     * Execute a transaction and automatically commit/rollback based on the `task` result.\n     *\n     * > **Note:** This transaction is not exclusive and can be interrupted by other async queries.\n     *\n     * @example\n     * ```ts\n     * db.withTransactionAsync(async () => {\n     *   await db.execAsync('UPDATE test SET name = \"aaa\"');\n     *\n     *   //\n     *   // We cannot control the order of async/await order, so order of execution is not guaranteed.\n     *   // The following UPDATE query out of transaction may be executed here and break the expectation.\n     *   //\n     *\n     *   const result = await db.getFirstAsync<{ name: string }>('SELECT name FROM Users');\n     *   expect(result?.name).toBe('aaa');\n     * });\n     * db.execAsync('UPDATE test SET name = \"bbb\"');\n     * ```\n     * If you worry about the order of execution, use `withExclusiveTransactionAsync` instead.\n     *\n     * @param task An async function to execute within a transaction.\n     */\n    async withTransactionAsync(task) {\n      try {\n        await this.execAsync('BEGIN');\n        await task();\n        await this.execAsync('COMMIT');\n      } catch (e) {\n        await this.execAsync('ROLLBACK');\n        throw e;\n      }\n    }\n    /**\n     * Execute a transaction and automatically commit/rollback based on the `task` result.\n     *\n     * The transaction may be exclusive.\n     * As long as the transaction is converted into a write transaction,\n     * the other async write queries will abort with `database is locked` error.\n     *\n     * > **Note:** This function is not supported on web.\n     *\n     * @param task An async function to execute within a transaction. Any queries inside the transaction must be executed on the `txn` object.\n     * The `txn` object has the same interfaces as the [`SQLiteDatabase`](#sqlitedatabase) object. You can use `txn` like a [`SQLiteDatabase`](#sqlitedatabase) object.\n     *\n     * @platform android\n     * @platform ios\n     * @platform macos\n     * @platform tvos\n     *\n     * @example\n     * ```ts\n     * db.withExclusiveTransactionAsync(async (txn) => {\n     *   await txn.execAsync('UPDATE test SET name = \"aaa\"');\n     * });\n     * ```\n     */\n    async withExclusiveTransactionAsync(task) {\n      if (Platform.default.OS === 'web') {\n        throw new Error('withExclusiveTransactionAsync is not supported on web');\n      }\n      const transaction = await Transaction.createAsync(this);\n      let error;\n      try {\n        await transaction.execAsync('BEGIN');\n        await task(transaction);\n        await transaction.execAsync('COMMIT');\n      } catch (e) {\n        await transaction.execAsync('ROLLBACK');\n        error = e;\n      } finally {\n        await transaction.closeAsync();\n      }\n      if (error) {\n        throw error;\n      }\n    }\n    /**\n     * Synchronous call to return whether the database is currently in a transaction.\n     */\n    isInTransactionSync() {\n      return this.nativeDatabase.isInTransactionSync();\n    }\n    /**\n     * Close the database.\n     */\n    closeSync() {\n      return this.nativeDatabase.closeSync();\n    }\n    /**\n     * Execute all SQL queries in the supplied string.\n     *\n     * > **Note:** The queries are not escaped for you! Be careful when constructing your queries.\n     *\n     * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n     *\n     * @param source A string containing all the SQL queries.\n     */\n    execSync(source) {\n      return this.nativeDatabase.execSync(source);\n    }\n    /**\n     * [Serialize the database](https://sqlite.org/c3ref/serialize.html) as `Uint8Array`.\n     *\n     * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n     *\n     * @param databaseName The name of the current attached databases. The default value is `main` which is the default database name.\n     */\n    serializeSync(databaseName = 'main') {\n      return this.nativeDatabase.serializeSync(databaseName);\n    }\n    /**\n     * Create a [prepared SQLite statement](https://www.sqlite.org/c3ref/prepare.html).\n     *\n     * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n     *\n     * @param source A string containing the SQL query.\n     */\n    prepareSync(source) {\n      const nativeStatement = new ExpoSQLite.default.NativeStatement();\n      this.nativeDatabase.prepareSync(nativeStatement, source);\n      return new _SQLiteStatement.SQLiteStatement(this.nativeDatabase, nativeStatement);\n    }\n    /**\n     * Create a new session for the database.\n     *\n     * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n     *\n     * @see [`sqlite3session_create`](https://www.sqlite.org/session/sqlite3session_create.html)\n     * @param dbName The name of the database to create a session for. The default value is `main`.\n     */\n    createSessionSync(dbName = 'main') {\n      const nativeSession = new ExpoSQLite.default.NativeSession();\n      this.nativeDatabase.createSessionSync(nativeSession, dbName);\n      return new _SQLiteSession.SQLiteSession(this.nativeDatabase, nativeSession);\n    }\n    /**\n     * Load a SQLite extension.\n     * @param libPath The path to the extension library file.\n     * @param entryPoint The entry point of the extension. If not provided, the default entry point is inferred by [`sqlite3_load_extension`](https://www.sqlite.org/c3ref/load_extension.html).\n     *\n     * @platform android\n     * @platform ios\n     * @platform macos\n     * @platform tvos\n     *\n     * @example\n     * ```ts\n     * // Load `sqlite-vec` from `bundledExtensions`. You need to enable `withSQLiteVecExtension` to include `sqlite-vec`.\n     * const extension = SQLite.bundledExtensions['sqlite-vec'];\n     * db.loadExtensionSync(extension.libPath, extension.entryPoint);\n     *\n     * // You can also load a custom extension.\n     * db.loadExtensionSync('/path/to/extension');\n     * ```\n        */\n    loadExtensionSync(libPath, entryPoint) {\n      this.nativeDatabase.loadExtensionSync(libPath, entryPoint);\n    }\n    /**\n     * Execute a transaction and automatically commit/rollback based on the `task` result.\n     *\n     * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n     *\n     * @param task An async function to execute within a transaction.\n     */\n    withTransactionSync(task) {\n      try {\n        this.execSync('BEGIN');\n        task();\n        this.execSync('COMMIT');\n      } catch (e) {\n        this.execSync('ROLLBACK');\n        throw e;\n      }\n    }\n    async runAsync(source, ...params) {\n      const statement = await this.prepareAsync(source);\n      let result;\n      try {\n        result = await statement.executeAsync(...params);\n      } finally {\n        await statement.finalizeAsync();\n      }\n      return result;\n    }\n    async getFirstAsync(source, ...params) {\n      const statement = await this.prepareAsync(source);\n      let firstRow;\n      try {\n        const result = await statement.executeAsync(...params);\n        firstRow = await result.getFirstAsync();\n      } finally {\n        await statement.finalizeAsync();\n      }\n      return firstRow;\n    }\n    async *getEachAsync(source, ...params) {\n      const statement = await this.prepareAsync(source);\n      try {\n        const result = await statement.executeAsync(...params);\n        for await (const row of result) {\n          yield row;\n        }\n      } finally {\n        await statement.finalizeAsync();\n      }\n    }\n    async getAllAsync(source, ...params) {\n      const statement = await this.prepareAsync(source);\n      let allRows;\n      try {\n        const result = await statement.executeAsync(...params);\n        allRows = await result.getAllAsync();\n      } finally {\n        await statement.finalizeAsync();\n      }\n      return allRows;\n    }\n    runSync(source, ...params) {\n      const statement = this.prepareSync(source);\n      let result;\n      try {\n        result = statement.executeSync(...params);\n      } finally {\n        statement.finalizeSync();\n      }\n      return result;\n    }\n    getFirstSync(source, ...params) {\n      const statement = this.prepareSync(source);\n      let firstRow;\n      try {\n        const result = statement.executeSync(...params);\n        firstRow = result.getFirstSync();\n      } finally {\n        statement.finalizeSync();\n      }\n      return firstRow;\n    }\n    *getEachSync(source, ...params) {\n      const statement = this.prepareSync(source);\n      try {\n        const result = statement.executeSync(...params);\n        for (const row of result) {\n          yield row;\n        }\n      } finally {\n        statement.finalizeSync();\n      }\n    }\n    getAllSync(source, ...params) {\n      const statement = this.prepareSync(source);\n      let allRows;\n      try {\n        const result = statement.executeSync(...params);\n        allRows = result.getAllSync();\n      } finally {\n        statement.finalizeSync();\n      }\n      return allRows;\n    }\n    /**\n     * Synchronize the local database with the remote libSQL server.\n     * This method is only available from libSQL integration.\n     */\n    syncLibSQL() {\n      if (typeof this.nativeDatabase.syncLibSQL !== 'function') {\n        throw new Error('syncLibSQL is not supported in the current environment');\n      }\n      return this.nativeDatabase.syncLibSQL();\n    }\n  }\n  /**\n   * The default directory for SQLite databases.\n   */\n  const defaultDatabaseDirectory = ExpoSQLite.default.defaultDatabaseDirectory;\n  /**\n   * The pre-bundled SQLite extensions.\n   */\n  const bundledExtensions = ExpoSQLite.default.bundledExtensions;\n  /**\n   * Open a database.\n   *\n   * @param databaseName The name of the database file to open.\n   * @param options Open options.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`. This parameter is not supported on web.\n   */\n  async function openDatabaseAsync(databaseName, options, directory) {\n    const openOptions = options ?? {};\n    const databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    await ExpoSQLite.default.ensureDatabasePathExistsAsync(databasePath);\n    const nativeDatabase = new ExpoSQLite.default.NativeDatabase(databasePath, (0, _NativeDatabase.flattenOpenOptions)(openOptions));\n    await nativeDatabase.initAsync();\n    return new SQLiteDatabase(databasePath, openOptions, nativeDatabase);\n  }\n  /**\n   * Open a database.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param databaseName The name of the database file to open.\n   * @param options Open options.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`. This parameter is not supported on web.\n   */\n  function openDatabaseSync(databaseName, options, directory) {\n    const openOptions = options ?? {};\n    const databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    ExpoSQLite.default.ensureDatabasePathExistsSync(databasePath);\n    const nativeDatabase = new ExpoSQLite.default.NativeDatabase(databasePath, (0, _NativeDatabase.flattenOpenOptions)(openOptions));\n    nativeDatabase.initSync();\n    return new SQLiteDatabase(databasePath, openOptions, nativeDatabase);\n  }\n  /**\n   * Given a `Uint8Array` data and [deserialize to memory database](https://sqlite.org/c3ref/deserialize.html).\n   *\n   * @param serializedData The binary array to deserialize from [`SQLiteDatabase.serializeAsync()`](#serializeasyncdatabasename).\n   * @param options Open options.\n   */\n  async function deserializeDatabaseAsync(serializedData, options) {\n    const openOptions = options ?? {};\n    const nativeDatabase = new ExpoSQLite.default.NativeDatabase(':memory:', (0, _NativeDatabase.flattenOpenOptions)(openOptions), serializedData);\n    await nativeDatabase.initAsync();\n    return new SQLiteDatabase(':memory:', openOptions, nativeDatabase);\n  }\n  /**\n   * Given a `Uint8Array` data and [deserialize to memory database](https://sqlite.org/c3ref/deserialize.html).\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param serializedData The binary array to deserialize from [`SQLiteDatabase.serializeSync()`](#serializesyncdatabasename)\n   * @param options Open options.\n   */\n  function deserializeDatabaseSync(serializedData, options) {\n    const openOptions = options ?? {};\n    const nativeDatabase = new ExpoSQLite.default.NativeDatabase(':memory:', (0, _NativeDatabase.flattenOpenOptions)(openOptions), serializedData);\n    nativeDatabase.initSync();\n    return new SQLiteDatabase(':memory:', openOptions, nativeDatabase);\n  }\n  /**\n   * Delete a database file.\n   *\n   * @param databaseName The name of the database file to delete.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`.\n   */\n  async function deleteDatabaseAsync(databaseName, directory) {\n    const databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    return await ExpoSQLite.default.deleteDatabaseAsync(databasePath);\n  }\n  /**\n   * Delete a database file.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param databaseName The name of the database file to delete.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`.\n   */\n  function deleteDatabaseSync(databaseName, directory) {\n    const databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    return ExpoSQLite.default.deleteDatabaseSync(databasePath);\n  }\n  /**\n   * Backup a database to another database.\n   *\n   * @see https://www.sqlite.org/c3ref/backup_finish.html\n   *\n   * @param options - The backup options\n   * @param options.sourceDatabase - The source database to backup from\n   * @param options.sourceDatabaseName - The name of the source database. The default value is `main`\n   * @param options.destDatabase - The destination database to backup to\n   * @param options.destDatabaseName - The name of the destination database. The default value is `m\n   */\n  function backupDatabaseAsync({\n    sourceDatabase,\n    sourceDatabaseName,\n    destDatabase,\n    destDatabaseName\n  }) {\n    return ExpoSQLite.default.backupDatabaseAsync(destDatabase.nativeDatabase, destDatabaseName ?? 'main', sourceDatabase.nativeDatabase, sourceDatabaseName ?? 'main');\n  }\n  /**\n   * Backup a database to another database.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @see https://www.sqlite.org/c3ref/backup_finish.html\n   *\n   * @param options - The backup options\n   * @param options.sourceDatabase - The source database to backup from\n   * @param options.sourceDatabaseName - The name of the source database. The default value is `main`\n   * @param options.destDatabase - The destination database to backup to\n   * @param options.destDatabaseName - The name of the destination database. The default value is `m\n   */\n  function backupDatabaseSync({\n    sourceDatabase,\n    sourceDatabaseName,\n    destDatabase,\n    destDatabaseName\n  }) {\n    return ExpoSQLite.default.backupDatabaseSync(destDatabase.nativeDatabase, destDatabaseName ?? 'main', sourceDatabase.nativeDatabase, sourceDatabaseName ?? 'main');\n  }\n  /**\n   * Add a listener for database changes.\n   * > Note: to enable this feature, you must set [`enableChangeListener` to `true`](#sqliteopenoptions) when opening the database.\n   *\n   * @param listener A function that receives the `databaseName`, `databaseFilePath`, `tableName` and `rowId` of the modified data.\n   * @returns A `Subscription` object that you can call `remove()` on when you would like to unsubscribe the listener.\n   */\n  function addDatabaseChangeListener(listener) {\n    return ExpoSQLite.default.addListener('onDatabaseChange', listener);\n  }\n  /**\n   * A new connection specific used for [`withExclusiveTransactionAsync`](#withexclusivetransactionasynctask).\n   * @hidden not going to pull all the database methods to the document.\n   */\n  class Transaction extends SQLiteDatabase {\n    static async createAsync(db) {\n      const options = {\n        ...db.options,\n        useNewConnection: true\n      };\n      const nativeDatabase = new ExpoSQLite.default.NativeDatabase(db.databasePath, (0, _NativeDatabase.flattenOpenOptions)(options));\n      await nativeDatabase.initAsync();\n      return new Transaction(db.databasePath, options, nativeDatabase);\n    }\n  }\n});","lineCount":555,"map":[[12,2,10,0,"Object"],[12,8,10,0],[12,9,10,0,"defineProperty"],[12,23,10,0],[12,24,10,0,"exports"],[12,31,10,0],[13,4,10,0,"enumerable"],[13,14,10,0],[14,4,10,0,"get"],[14,7,10,0],[14,18,10,0,"get"],[14,19,10,0],[15,6,10,0],[15,13,10,0,"SQLiteDatabase"],[15,27,10,0],[16,4,10,0],[17,2,10,0],[18,2,381,0,"Object"],[18,8,381,0],[18,9,381,0,"defineProperty"],[18,23,381,0],[18,24,381,0,"exports"],[18,31,381,0],[19,4,381,0,"enumerable"],[19,14,381,0],[20,4,381,0,"get"],[20,7,381,0],[20,18,381,0,"get"],[20,19,381,0],[21,6,381,0],[21,13,381,0,"defaultDatabaseDirectory"],[21,37,381,0],[22,4,381,0],[23,2,381,0],[24,2,385,0,"Object"],[24,8,385,0],[24,9,385,0,"defineProperty"],[24,23,385,0],[24,24,385,0,"exports"],[24,31,385,0],[25,4,385,0,"enumerable"],[25,14,385,0],[26,4,385,0,"get"],[26,7,385,0],[26,18,385,0,"get"],[26,19,385,0],[27,6,385,0],[27,13,385,0,"bundledExtensions"],[27,30,385,0],[28,4,385,0],[29,2,385,0],[30,2,393,0,"exports"],[30,9,393,0],[30,10,393,0,"openDatabaseAsync"],[30,27,393,0],[30,30,393,0,"openDatabaseAsync"],[30,47,393,0],[31,2,410,0,"exports"],[31,9,410,0],[31,10,410,0,"openDatabaseSync"],[31,26,410,0],[31,29,410,0,"openDatabaseSync"],[31,45,410,0],[32,2,424,0,"exports"],[32,9,424,0],[32,10,424,0,"deserializeDatabaseAsync"],[32,34,424,0],[32,37,424,0,"deserializeDatabaseAsync"],[32,61,424,0],[33,2,438,0,"exports"],[33,9,438,0],[33,10,438,0,"deserializeDatabaseSync"],[33,33,438,0],[33,36,438,0,"deserializeDatabaseSync"],[33,59,438,0],[34,2,450,0,"exports"],[34,9,450,0],[34,10,450,0,"deleteDatabaseAsync"],[34,29,450,0],[34,32,450,0,"deleteDatabaseAsync"],[34,51,450,0],[35,2,462,0,"exports"],[35,9,462,0],[35,10,462,0,"deleteDatabaseSync"],[35,28,462,0],[35,31,462,0,"deleteDatabaseSync"],[35,49,462,0],[36,2,477,0,"exports"],[36,9,477,0],[36,10,477,0,"backupDatabaseAsync"],[36,29,477,0],[36,32,477,0,"backupDatabaseAsync"],[36,51,477,0],[37,2,493,0,"exports"],[37,9,493,0],[37,10,493,0,"backupDatabaseSync"],[37,28,493,0],[37,31,493,0,"backupDatabaseSync"],[37,49,493,0],[38,2,503,0,"exports"],[38,9,503,0],[38,10,503,0,"addDatabaseChangeListener"],[38,35,503,0],[38,38,503,0,"addDatabaseChangeListener"],[38,63,503,0],[39,2,505,1],[39,6,505,1,"_reactNativeWebDistExportsPlatform"],[39,40,505,1],[39,43,505,1,"require"],[39,50,505,1],[39,51,505,1,"_dependencyMap"],[39,65,505,1],[40,2,505,1],[40,6,505,1,"Platform"],[40,14,505,1],[40,17,505,1,"_interopDefault"],[40,32,505,1],[40,33,505,1,"_reactNativeWebDistExportsPlatform"],[40,67,505,1],[41,2,2,0],[41,6,2,0,"_ExpoSQLite"],[41,17,2,0],[41,20,2,0,"require"],[41,27,2,0],[41,28,2,0,"_dependencyMap"],[41,42,2,0],[42,2,2,0],[42,6,2,0,"ExpoSQLite"],[42,16,2,0],[42,19,2,0,"_interopDefault"],[42,34,2,0],[42,35,2,0,"_ExpoSQLite"],[42,46,2,0],[43,2,3,0],[43,6,3,0,"_NativeDatabase"],[43,21,3,0],[43,24,3,0,"require"],[43,31,3,0],[43,32,3,0,"_dependencyMap"],[43,46,3,0],[44,2,4,0],[44,6,4,0,"_SQLiteSession"],[44,20,4,0],[44,23,4,0,"require"],[44,30,4,0],[44,31,4,0,"_dependencyMap"],[44,45,4,0],[45,2,5,0],[45,6,5,0,"_SQLiteStatement"],[45,22,5,0],[45,25,5,0,"require"],[45,32,5,0],[45,33,5,0,"_dependencyMap"],[45,47,5,0],[46,2,6,0],[46,6,6,0,"_pathUtils"],[46,16,6,0],[46,19,6,0,"require"],[46,26,6,0],[46,27,6,0,"_dependencyMap"],[46,41,6,0],[47,2,7,0],[48,0,8,0],[49,0,9,0],[50,2,10,7],[50,8,10,13,"SQLiteDatabase"],[50,22,10,27],[50,23,10,28],[51,4,14,4,"constructor"],[51,15,14,15,"constructor"],[51,16,14,16,"databasePath"],[51,28,14,28],[51,30,14,30,"options"],[51,37,14,37],[51,39,14,39,"nativeDatabase"],[51,53,14,53],[51,55,14,55],[52,6,15,8],[52,10,15,12],[52,11,15,13,"databasePath"],[52,23,15,25],[52,26,15,28,"databasePath"],[52,38,15,40],[53,6,16,8],[53,10,16,12],[53,11,16,13,"options"],[53,18,16,20],[53,21,16,23,"options"],[53,28,16,30],[54,6,17,8],[54,10,17,12],[54,11,17,13,"nativeDatabase"],[54,25,17,27],[54,28,17,30,"nativeDatabase"],[54,42,17,44],[55,4,18,4],[56,4,19,4],[57,0,20,0],[58,0,21,0],[59,4,22,4,"isInTransactionAsync"],[59,24,22,24,"isInTransactionAsync"],[59,25,22,24],[59,27,22,27],[60,6,23,8],[60,13,23,15],[60,17,23,19],[60,18,23,20,"nativeDatabase"],[60,32,23,34],[60,33,23,35,"isInTransactionAsync"],[60,53,23,55],[60,54,23,56],[60,55,23,57],[61,4,24,4],[62,4,25,4],[63,0,26,0],[64,0,27,0],[65,4,28,4,"closeAsync"],[65,14,28,14,"closeAsync"],[65,15,28,14],[65,17,28,17],[66,6,29,8],[66,13,29,15],[66,17,29,19],[66,18,29,20,"nativeDatabase"],[66,32,29,34],[66,33,29,35,"closeAsync"],[66,43,29,45],[66,44,29,46],[66,45,29,47],[67,4,30,4],[68,4,31,4],[69,0,32,0],[70,0,33,0],[71,0,34,0],[72,0,35,0],[73,0,36,0],[74,4,37,4,"execAsync"],[74,13,37,13,"execAsync"],[74,14,37,14,"source"],[74,20,37,20],[74,22,37,22],[75,6,38,8],[75,13,38,15],[75,17,38,19],[75,18,38,20,"nativeDatabase"],[75,32,38,34],[75,33,38,35,"execAsync"],[75,42,38,44],[75,43,38,45,"source"],[75,49,38,51],[75,50,38,52],[76,4,39,4],[77,4,40,4],[78,0,41,0],[79,0,42,0],[80,0,43,0],[81,0,44,0],[82,4,45,4,"serializeAsync"],[82,18,45,18,"serializeAsync"],[82,19,45,19,"databaseName"],[82,31,45,31],[82,34,45,34],[82,40,45,40],[82,42,45,42],[83,6,46,8],[83,13,46,15],[83,17,46,19],[83,18,46,20,"nativeDatabase"],[83,32,46,34],[83,33,46,35,"serializeAsync"],[83,47,46,49],[83,48,46,50,"databaseName"],[83,60,46,62],[83,61,46,63],[84,4,47,4],[85,4,48,4],[86,0,49,0],[87,0,50,0],[88,0,51,0],[89,0,52,0],[90,4,53,4],[90,10,53,10,"prepareAsync"],[90,22,53,22,"prepareAsync"],[90,23,53,23,"source"],[90,29,53,29],[90,31,53,31],[91,6,54,8],[91,12,54,14,"nativeStatement"],[91,27,54,29],[91,30,54,32],[91,34,54,36,"ExpoSQLite"],[91,44,54,46],[91,45,54,46,"default"],[91,52,54,46],[91,53,54,47,"NativeStatement"],[91,68,54,62],[91,69,54,63],[91,70,54,64],[92,6,55,8],[92,12,55,14],[92,16,55,18],[92,17,55,19,"nativeDatabase"],[92,31,55,33],[92,32,55,34,"prepareAsync"],[92,44,55,46],[92,45,55,47,"nativeStatement"],[92,60,55,62],[92,62,55,64,"source"],[92,68,55,70],[92,69,55,71],[93,6,56,8],[93,13,56,15],[93,17,56,19,"SQLiteStatement"],[93,33,56,34],[93,34,56,34,"SQLiteStatement"],[93,49,56,34],[93,50,56,35],[93,54,56,39],[93,55,56,40,"nativeDatabase"],[93,69,56,54],[93,71,56,56,"nativeStatement"],[93,86,56,71],[93,87,56,72],[94,4,57,4],[95,4,58,4],[96,0,59,0],[97,0,60,0],[98,0,61,0],[99,0,62,0],[100,4,63,4],[100,10,63,10,"createSessionAsync"],[100,28,63,28,"createSessionAsync"],[100,29,63,29,"dbName"],[100,35,63,35],[100,38,63,38],[100,44,63,44],[100,46,63,46],[101,6,64,8],[101,12,64,14,"nativeSession"],[101,25,64,27],[101,28,64,30],[101,32,64,34,"ExpoSQLite"],[101,42,64,44],[101,43,64,44,"default"],[101,50,64,44],[101,51,64,45,"NativeSession"],[101,64,64,58],[101,65,64,59],[101,66,64,60],[102,6,65,8],[102,12,65,14],[102,16,65,18],[102,17,65,19,"nativeDatabase"],[102,31,65,33],[102,32,65,34,"createSessionAsync"],[102,50,65,52],[102,51,65,53,"nativeSession"],[102,64,65,66],[102,66,65,68,"dbName"],[102,72,65,74],[102,73,65,75],[103,6,66,8],[103,13,66,15],[103,17,66,19,"SQLiteSession"],[103,31,66,32],[103,32,66,32,"SQLiteSession"],[103,45,66,32],[103,46,66,33],[103,50,66,37],[103,51,66,38,"nativeDatabase"],[103,65,66,52],[103,67,66,54,"nativeSession"],[103,80,66,67],[103,81,66,68],[104,4,67,4],[105,4,68,4],[106,0,69,0],[107,0,70,0],[108,0,71,0],[109,0,72,0],[110,0,73,0],[111,0,74,0],[112,0,75,0],[113,0,76,0],[114,0,77,0],[115,0,78,0],[116,0,79,0],[117,0,80,0],[118,0,81,0],[119,0,82,0],[120,0,83,0],[121,0,84,0],[122,0,85,0],[123,0,86,0],[124,0,87,0],[125,4,88,4,"loadExtensionAsync"],[125,22,88,22,"loadExtensionAsync"],[125,23,88,23,"libPath"],[125,30,88,30],[125,32,88,32,"entryPoint"],[125,42,88,42],[125,44,88,44],[126,6,89,8],[126,13,89,15],[126,17,89,19],[126,18,89,20,"nativeDatabase"],[126,32,89,34],[126,33,89,35,"loadExtensionAsync"],[126,51,89,53],[126,52,89,54,"libPath"],[126,59,89,61],[126,61,89,63,"entryPoint"],[126,71,89,73],[126,72,89,74],[127,4,90,4],[128,4,91,4],[129,0,92,0],[130,0,93,0],[131,0,94,0],[132,0,95,0],[133,0,96,0],[134,0,97,0],[135,0,98,0],[136,0,99,0],[137,0,100,0],[138,0,101,0],[139,0,102,0],[140,0,103,0],[141,0,104,0],[142,0,105,0],[143,0,106,0],[144,0,107,0],[145,0,108,0],[146,0,109,0],[147,0,110,0],[148,0,111,0],[149,0,112,0],[150,0,113,0],[151,0,114,0],[152,4,115,4],[152,10,115,10,"withTransactionAsync"],[152,30,115,30,"withTransactionAsync"],[152,31,115,31,"task"],[152,35,115,35],[152,37,115,37],[153,6,116,8],[153,10,116,12],[154,8,117,12],[154,14,117,18],[154,18,117,22],[154,19,117,23,"execAsync"],[154,28,117,32],[154,29,117,33],[154,36,117,40],[154,37,117,41],[155,8,118,12],[155,14,118,18,"task"],[155,18,118,22],[155,19,118,23],[155,20,118,24],[156,8,119,12],[156,14,119,18],[156,18,119,22],[156,19,119,23,"execAsync"],[156,28,119,32],[156,29,119,33],[156,37,119,41],[156,38,119,42],[157,6,120,8],[157,7,120,9],[157,8,121,8],[157,15,121,15,"e"],[157,16,121,16],[157,18,121,18],[158,8,122,12],[158,14,122,18],[158,18,122,22],[158,19,122,23,"execAsync"],[158,28,122,32],[158,29,122,33],[158,39,122,43],[158,40,122,44],[159,8,123,12],[159,14,123,18,"e"],[159,15,123,19],[160,6,124,8],[161,4,125,4],[162,4,126,4],[163,0,127,0],[164,0,128,0],[165,0,129,0],[166,0,130,0],[167,0,131,0],[168,0,132,0],[169,0,133,0],[170,0,134,0],[171,0,135,0],[172,0,136,0],[173,0,137,0],[174,0,138,0],[175,0,139,0],[176,0,140,0],[177,0,141,0],[178,0,142,0],[179,0,143,0],[180,0,144,0],[181,0,145,0],[182,0,146,0],[183,0,147,0],[184,0,148,0],[185,0,149,0],[186,4,150,4],[186,10,150,10,"withExclusiveTransactionAsync"],[186,39,150,39,"withExclusiveTransactionAsync"],[186,40,150,40,"task"],[186,44,150,44],[186,46,150,46],[187,6,151,8],[187,10,151,12,"Platform"],[187,18,151,20],[187,19,151,20,"default"],[187,26,151,20],[187,27,151,21,"OS"],[187,29,151,23],[187,34,151,28],[187,39,151,33],[187,41,151,35],[188,8,152,12],[188,14,152,18],[188,18,152,22,"Error"],[188,23,152,27],[188,24,152,28],[188,79,152,83],[188,80,152,84],[189,6,153,8],[190,6,154,8],[190,12,154,14,"transaction"],[190,23,154,25],[190,26,154,28],[190,32,154,34,"Transaction"],[190,43,154,45],[190,44,154,46,"createAsync"],[190,55,154,57],[190,56,154,58],[190,60,154,62],[190,61,154,63],[191,6,155,8],[191,10,155,12,"error"],[191,15,155,17],[192,6,156,8],[192,10,156,12],[193,8,157,12],[193,14,157,18,"transaction"],[193,25,157,29],[193,26,157,30,"execAsync"],[193,35,157,39],[193,36,157,40],[193,43,157,47],[193,44,157,48],[194,8,158,12],[194,14,158,18,"task"],[194,18,158,22],[194,19,158,23,"transaction"],[194,30,158,34],[194,31,158,35],[195,8,159,12],[195,14,159,18,"transaction"],[195,25,159,29],[195,26,159,30,"execAsync"],[195,35,159,39],[195,36,159,40],[195,44,159,48],[195,45,159,49],[196,6,160,8],[196,7,160,9],[196,8,161,8],[196,15,161,15,"e"],[196,16,161,16],[196,18,161,18],[197,8,162,12],[197,14,162,18,"transaction"],[197,25,162,29],[197,26,162,30,"execAsync"],[197,35,162,39],[197,36,162,40],[197,46,162,50],[197,47,162,51],[198,8,163,12,"error"],[198,13,163,17],[198,16,163,20,"e"],[198,17,163,21],[199,6,164,8],[199,7,164,9],[199,16,165,16],[200,8,166,12],[200,14,166,18,"transaction"],[200,25,166,29],[200,26,166,30,"closeAsync"],[200,36,166,40],[200,37,166,41],[200,38,166,42],[201,6,167,8],[202,6,168,8],[202,10,168,12,"error"],[202,15,168,17],[202,17,168,19],[203,8,169,12],[203,14,169,18,"error"],[203,19,169,23],[204,6,170,8],[205,4,171,4],[206,4,172,4],[207,0,173,0],[208,0,174,0],[209,4,175,4,"isInTransactionSync"],[209,23,175,23,"isInTransactionSync"],[209,24,175,23],[209,26,175,26],[210,6,176,8],[210,13,176,15],[210,17,176,19],[210,18,176,20,"nativeDatabase"],[210,32,176,34],[210,33,176,35,"isInTransactionSync"],[210,52,176,54],[210,53,176,55],[210,54,176,56],[211,4,177,4],[212,4,178,4],[213,0,179,0],[214,0,180,0],[215,4,181,4,"closeSync"],[215,13,181,13,"closeSync"],[215,14,181,13],[215,16,181,16],[216,6,182,8],[216,13,182,15],[216,17,182,19],[216,18,182,20,"nativeDatabase"],[216,32,182,34],[216,33,182,35,"closeSync"],[216,42,182,44],[216,43,182,45],[216,44,182,46],[217,4,183,4],[218,4,184,4],[219,0,185,0],[220,0,186,0],[221,0,187,0],[222,0,188,0],[223,0,189,0],[224,0,190,0],[225,0,191,0],[226,0,192,0],[227,4,193,4,"execSync"],[227,12,193,12,"execSync"],[227,13,193,13,"source"],[227,19,193,19],[227,21,193,21],[228,6,194,8],[228,13,194,15],[228,17,194,19],[228,18,194,20,"nativeDatabase"],[228,32,194,34],[228,33,194,35,"execSync"],[228,41,194,43],[228,42,194,44,"source"],[228,48,194,50],[228,49,194,51],[229,4,195,4],[230,4,196,4],[231,0,197,0],[232,0,198,0],[233,0,199,0],[234,0,200,0],[235,0,201,0],[236,0,202,0],[237,4,203,4,"serializeSync"],[237,17,203,17,"serializeSync"],[237,18,203,18,"databaseName"],[237,30,203,30],[237,33,203,33],[237,39,203,39],[237,41,203,41],[238,6,204,8],[238,13,204,15],[238,17,204,19],[238,18,204,20,"nativeDatabase"],[238,32,204,34],[238,33,204,35,"serializeSync"],[238,46,204,48],[238,47,204,49,"databaseName"],[238,59,204,61],[238,60,204,62],[239,4,205,4],[240,4,206,4],[241,0,207,0],[242,0,208,0],[243,0,209,0],[244,0,210,0],[245,0,211,0],[246,0,212,0],[247,4,213,4,"prepareSync"],[247,15,213,15,"prepareSync"],[247,16,213,16,"source"],[247,22,213,22],[247,24,213,24],[248,6,214,8],[248,12,214,14,"nativeStatement"],[248,27,214,29],[248,30,214,32],[248,34,214,36,"ExpoSQLite"],[248,44,214,46],[248,45,214,46,"default"],[248,52,214,46],[248,53,214,47,"NativeStatement"],[248,68,214,62],[248,69,214,63],[248,70,214,64],[249,6,215,8],[249,10,215,12],[249,11,215,13,"nativeDatabase"],[249,25,215,27],[249,26,215,28,"prepareSync"],[249,37,215,39],[249,38,215,40,"nativeStatement"],[249,53,215,55],[249,55,215,57,"source"],[249,61,215,63],[249,62,215,64],[250,6,216,8],[250,13,216,15],[250,17,216,19,"SQLiteStatement"],[250,33,216,34],[250,34,216,34,"SQLiteStatement"],[250,49,216,34],[250,50,216,35],[250,54,216,39],[250,55,216,40,"nativeDatabase"],[250,69,216,54],[250,71,216,56,"nativeStatement"],[250,86,216,71],[250,87,216,72],[251,4,217,4],[252,4,218,4],[253,0,219,0],[254,0,220,0],[255,0,221,0],[256,0,222,0],[257,0,223,0],[258,0,224,0],[259,0,225,0],[260,4,226,4,"createSessionSync"],[260,21,226,21,"createSessionSync"],[260,22,226,22,"dbName"],[260,28,226,28],[260,31,226,31],[260,37,226,37],[260,39,226,39],[261,6,227,8],[261,12,227,14,"nativeSession"],[261,25,227,27],[261,28,227,30],[261,32,227,34,"ExpoSQLite"],[261,42,227,44],[261,43,227,44,"default"],[261,50,227,44],[261,51,227,45,"NativeSession"],[261,64,227,58],[261,65,227,59],[261,66,227,60],[262,6,228,8],[262,10,228,12],[262,11,228,13,"nativeDatabase"],[262,25,228,27],[262,26,228,28,"createSessionSync"],[262,43,228,45],[262,44,228,46,"nativeSession"],[262,57,228,59],[262,59,228,61,"dbName"],[262,65,228,67],[262,66,228,68],[263,6,229,8],[263,13,229,15],[263,17,229,19,"SQLiteSession"],[263,31,229,32],[263,32,229,32,"SQLiteSession"],[263,45,229,32],[263,46,229,33],[263,50,229,37],[263,51,229,38,"nativeDatabase"],[263,65,229,52],[263,67,229,54,"nativeSession"],[263,80,229,67],[263,81,229,68],[264,4,230,4],[265,4,231,4],[266,0,232,0],[267,0,233,0],[268,0,234,0],[269,0,235,0],[270,0,236,0],[271,0,237,0],[272,0,238,0],[273,0,239,0],[274,0,240,0],[275,0,241,0],[276,0,242,0],[277,0,243,0],[278,0,244,0],[279,0,245,0],[280,0,246,0],[281,0,247,0],[282,0,248,0],[283,0,249,0],[284,0,250,0],[285,4,252,4,"loadExtensionSync"],[285,21,252,21,"loadExtensionSync"],[285,22,252,22,"libPath"],[285,29,252,29],[285,31,252,31,"entryPoint"],[285,41,252,41],[285,43,252,43],[286,6,253,8],[286,10,253,12],[286,11,253,13,"nativeDatabase"],[286,25,253,27],[286,26,253,28,"loadExtensionSync"],[286,43,253,45],[286,44,253,46,"libPath"],[286,51,253,53],[286,53,253,55,"entryPoint"],[286,63,253,65],[286,64,253,66],[287,4,254,4],[288,4,255,4],[289,0,256,0],[290,0,257,0],[291,0,258,0],[292,0,259,0],[293,0,260,0],[294,0,261,0],[295,4,262,4,"withTransactionSync"],[295,23,262,23,"withTransactionSync"],[295,24,262,24,"task"],[295,28,262,28],[295,30,262,30],[296,6,263,8],[296,10,263,12],[297,8,264,12],[297,12,264,16],[297,13,264,17,"execSync"],[297,21,264,25],[297,22,264,26],[297,29,264,33],[297,30,264,34],[298,8,265,12,"task"],[298,12,265,16],[298,13,265,17],[298,14,265,18],[299,8,266,12],[299,12,266,16],[299,13,266,17,"execSync"],[299,21,266,25],[299,22,266,26],[299,30,266,34],[299,31,266,35],[300,6,267,8],[300,7,267,9],[300,8,268,8],[300,15,268,15,"e"],[300,16,268,16],[300,18,268,18],[301,8,269,12],[301,12,269,16],[301,13,269,17,"execSync"],[301,21,269,25],[301,22,269,26],[301,32,269,36],[301,33,269,37],[302,8,270,12],[302,14,270,18,"e"],[302,15,270,19],[303,6,271,8],[304,4,272,4],[305,4,273,4],[305,10,273,10,"runAsync"],[305,18,273,18,"runAsync"],[305,19,273,19,"source"],[305,25,273,25],[305,27,273,27],[305,30,273,30,"params"],[305,36,273,36],[305,38,273,38],[306,6,274,8],[306,12,274,14,"statement"],[306,21,274,23],[306,24,274,26],[306,30,274,32],[306,34,274,36],[306,35,274,37,"prepareAsync"],[306,47,274,49],[306,48,274,50,"source"],[306,54,274,56],[306,55,274,57],[307,6,275,8],[307,10,275,12,"result"],[307,16,275,18],[308,6,276,8],[308,10,276,12],[309,8,277,12,"result"],[309,14,277,18],[309,17,277,21],[309,23,277,27,"statement"],[309,32,277,36],[309,33,277,37,"executeAsync"],[309,45,277,49],[309,46,277,50],[309,49,277,53,"params"],[309,55,277,59],[309,56,277,60],[310,6,278,8],[310,7,278,9],[310,16,279,16],[311,8,280,12],[311,14,280,18,"statement"],[311,23,280,27],[311,24,280,28,"finalizeAsync"],[311,37,280,41],[311,38,280,42],[311,39,280,43],[312,6,281,8],[313,6,282,8],[313,13,282,15,"result"],[313,19,282,21],[314,4,283,4],[315,4,284,4],[315,10,284,10,"getFirstAsync"],[315,23,284,23,"getFirstAsync"],[315,24,284,24,"source"],[315,30,284,30],[315,32,284,32],[315,35,284,35,"params"],[315,41,284,41],[315,43,284,43],[316,6,285,8],[316,12,285,14,"statement"],[316,21,285,23],[316,24,285,26],[316,30,285,32],[316,34,285,36],[316,35,285,37,"prepareAsync"],[316,47,285,49],[316,48,285,50,"source"],[316,54,285,56],[316,55,285,57],[317,6,286,8],[317,10,286,12,"firstRow"],[317,18,286,20],[318,6,287,8],[318,10,287,12],[319,8,288,12],[319,14,288,18,"result"],[319,20,288,24],[319,23,288,27],[319,29,288,33,"statement"],[319,38,288,42],[319,39,288,43,"executeAsync"],[319,51,288,55],[319,52,288,56],[319,55,288,59,"params"],[319,61,288,65],[319,62,288,66],[320,8,289,12,"firstRow"],[320,16,289,20],[320,19,289,23],[320,25,289,29,"result"],[320,31,289,35],[320,32,289,36,"getFirstAsync"],[320,45,289,49],[320,46,289,50],[320,47,289,51],[321,6,290,8],[321,7,290,9],[321,16,291,16],[322,8,292,12],[322,14,292,18,"statement"],[322,23,292,27],[322,24,292,28,"finalizeAsync"],[322,37,292,41],[322,38,292,42],[322,39,292,43],[323,6,293,8],[324,6,294,8],[324,13,294,15,"firstRow"],[324,21,294,23],[325,4,295,4],[326,4,296,4],[326,11,296,11,"getEachAsync"],[326,23,296,23,"getEachAsync"],[326,24,296,24,"source"],[326,30,296,30],[326,32,296,32],[326,35,296,35,"params"],[326,41,296,41],[326,43,296,43],[327,6,297,8],[327,12,297,14,"statement"],[327,21,297,23],[327,24,297,26],[327,30,297,32],[327,34,297,36],[327,35,297,37,"prepareAsync"],[327,47,297,49],[327,48,297,50,"source"],[327,54,297,56],[327,55,297,57],[328,6,298,8],[328,10,298,12],[329,8,299,12],[329,14,299,18,"result"],[329,20,299,24],[329,23,299,27],[329,29,299,33,"statement"],[329,38,299,42],[329,39,299,43,"executeAsync"],[329,51,299,55],[329,52,299,56],[329,55,299,59,"params"],[329,61,299,65],[329,62,299,66],[330,8,300,12],[330,19,300,23],[330,25,300,29,"row"],[330,28,300,32],[330,32,300,36,"result"],[330,38,300,42],[330,40,300,44],[331,10,301,16],[331,16,301,22,"row"],[331,19,301,25],[332,8,302,12],[333,6,303,8],[333,7,303,9],[333,16,304,16],[334,8,305,12],[334,14,305,18,"statement"],[334,23,305,27],[334,24,305,28,"finalizeAsync"],[334,37,305,41],[334,38,305,42],[334,39,305,43],[335,6,306,8],[336,4,307,4],[337,4,308,4],[337,10,308,10,"getAllAsync"],[337,21,308,21,"getAllAsync"],[337,22,308,22,"source"],[337,28,308,28],[337,30,308,30],[337,33,308,33,"params"],[337,39,308,39],[337,41,308,41],[338,6,309,8],[338,12,309,14,"statement"],[338,21,309,23],[338,24,309,26],[338,30,309,32],[338,34,309,36],[338,35,309,37,"prepareAsync"],[338,47,309,49],[338,48,309,50,"source"],[338,54,309,56],[338,55,309,57],[339,6,310,8],[339,10,310,12,"allRows"],[339,17,310,19],[340,6,311,8],[340,10,311,12],[341,8,312,12],[341,14,312,18,"result"],[341,20,312,24],[341,23,312,27],[341,29,312,33,"statement"],[341,38,312,42],[341,39,312,43,"executeAsync"],[341,51,312,55],[341,52,312,56],[341,55,312,59,"params"],[341,61,312,65],[341,62,312,66],[342,8,313,12,"allRows"],[342,15,313,19],[342,18,313,22],[342,24,313,28,"result"],[342,30,313,34],[342,31,313,35,"getAllAsync"],[342,42,313,46],[342,43,313,47],[342,44,313,48],[343,6,314,8],[343,7,314,9],[343,16,315,16],[344,8,316,12],[344,14,316,18,"statement"],[344,23,316,27],[344,24,316,28,"finalizeAsync"],[344,37,316,41],[344,38,316,42],[344,39,316,43],[345,6,317,8],[346,6,318,8],[346,13,318,15,"allRows"],[346,20,318,22],[347,4,319,4],[348,4,320,4,"runSync"],[348,11,320,11,"runSync"],[348,12,320,12,"source"],[348,18,320,18],[348,20,320,20],[348,23,320,23,"params"],[348,29,320,29],[348,31,320,31],[349,6,321,8],[349,12,321,14,"statement"],[349,21,321,23],[349,24,321,26],[349,28,321,30],[349,29,321,31,"prepareSync"],[349,40,321,42],[349,41,321,43,"source"],[349,47,321,49],[349,48,321,50],[350,6,322,8],[350,10,322,12,"result"],[350,16,322,18],[351,6,323,8],[351,10,323,12],[352,8,324,12,"result"],[352,14,324,18],[352,17,324,21,"statement"],[352,26,324,30],[352,27,324,31,"executeSync"],[352,38,324,42],[352,39,324,43],[352,42,324,46,"params"],[352,48,324,52],[352,49,324,53],[353,6,325,8],[353,7,325,9],[353,16,326,16],[354,8,327,12,"statement"],[354,17,327,21],[354,18,327,22,"finalizeSync"],[354,30,327,34],[354,31,327,35],[354,32,327,36],[355,6,328,8],[356,6,329,8],[356,13,329,15,"result"],[356,19,329,21],[357,4,330,4],[358,4,331,4,"getFirstSync"],[358,16,331,16,"getFirstSync"],[358,17,331,17,"source"],[358,23,331,23],[358,25,331,25],[358,28,331,28,"params"],[358,34,331,34],[358,36,331,36],[359,6,332,8],[359,12,332,14,"statement"],[359,21,332,23],[359,24,332,26],[359,28,332,30],[359,29,332,31,"prepareSync"],[359,40,332,42],[359,41,332,43,"source"],[359,47,332,49],[359,48,332,50],[360,6,333,8],[360,10,333,12,"firstRow"],[360,18,333,20],[361,6,334,8],[361,10,334,12],[362,8,335,12],[362,14,335,18,"result"],[362,20,335,24],[362,23,335,27,"statement"],[362,32,335,36],[362,33,335,37,"executeSync"],[362,44,335,48],[362,45,335,49],[362,48,335,52,"params"],[362,54,335,58],[362,55,335,59],[363,8,336,12,"firstRow"],[363,16,336,20],[363,19,336,23,"result"],[363,25,336,29],[363,26,336,30,"getFirstSync"],[363,38,336,42],[363,39,336,43],[363,40,336,44],[364,6,337,8],[364,7,337,9],[364,16,338,16],[365,8,339,12,"statement"],[365,17,339,21],[365,18,339,22,"finalizeSync"],[365,30,339,34],[365,31,339,35],[365,32,339,36],[366,6,340,8],[367,6,341,8],[367,13,341,15,"firstRow"],[367,21,341,23],[368,4,342,4],[369,4,343,4],[369,5,343,5,"getEachSync"],[369,16,343,16,"getEachSync"],[369,17,343,17,"source"],[369,23,343,23],[369,25,343,25],[369,28,343,28,"params"],[369,34,343,34],[369,36,343,36],[370,6,344,8],[370,12,344,14,"statement"],[370,21,344,23],[370,24,344,26],[370,28,344,30],[370,29,344,31,"prepareSync"],[370,40,344,42],[370,41,344,43,"source"],[370,47,344,49],[370,48,344,50],[371,6,345,8],[371,10,345,12],[372,8,346,12],[372,14,346,18,"result"],[372,20,346,24],[372,23,346,27,"statement"],[372,32,346,36],[372,33,346,37,"executeSync"],[372,44,346,48],[372,45,346,49],[372,48,346,52,"params"],[372,54,346,58],[372,55,346,59],[373,8,347,12],[373,13,347,17],[373,19,347,23,"row"],[373,22,347,26],[373,26,347,30,"result"],[373,32,347,36],[373,34,347,38],[374,10,348,16],[374,16,348,22,"row"],[374,19,348,25],[375,8,349,12],[376,6,350,8],[376,7,350,9],[376,16,351,16],[377,8,352,12,"statement"],[377,17,352,21],[377,18,352,22,"finalizeSync"],[377,30,352,34],[377,31,352,35],[377,32,352,36],[378,6,353,8],[379,4,354,4],[380,4,355,4,"getAllSync"],[380,14,355,14,"getAllSync"],[380,15,355,15,"source"],[380,21,355,21],[380,23,355,23],[380,26,355,26,"params"],[380,32,355,32],[380,34,355,34],[381,6,356,8],[381,12,356,14,"statement"],[381,21,356,23],[381,24,356,26],[381,28,356,30],[381,29,356,31,"prepareSync"],[381,40,356,42],[381,41,356,43,"source"],[381,47,356,49],[381,48,356,50],[382,6,357,8],[382,10,357,12,"allRows"],[382,17,357,19],[383,6,358,8],[383,10,358,12],[384,8,359,12],[384,14,359,18,"result"],[384,20,359,24],[384,23,359,27,"statement"],[384,32,359,36],[384,33,359,37,"executeSync"],[384,44,359,48],[384,45,359,49],[384,48,359,52,"params"],[384,54,359,58],[384,55,359,59],[385,8,360,12,"allRows"],[385,15,360,19],[385,18,360,22,"result"],[385,24,360,28],[385,25,360,29,"getAllSync"],[385,35,360,39],[385,36,360,40],[385,37,360,41],[386,6,361,8],[386,7,361,9],[386,16,362,16],[387,8,363,12,"statement"],[387,17,363,21],[387,18,363,22,"finalizeSync"],[387,30,363,34],[387,31,363,35],[387,32,363,36],[388,6,364,8],[389,6,365,8],[389,13,365,15,"allRows"],[389,20,365,22],[390,4,366,4],[391,4,367,4],[392,0,368,0],[393,0,369,0],[394,0,370,0],[395,4,371,4,"syncLibSQL"],[395,14,371,14,"syncLibSQL"],[395,15,371,14],[395,17,371,17],[396,6,372,8],[396,10,372,12],[396,17,372,19],[396,21,372,23],[396,22,372,24,"nativeDatabase"],[396,36,372,38],[396,37,372,39,"syncLibSQL"],[396,47,372,49],[396,52,372,54],[396,62,372,64],[396,64,372,66],[397,8,373,12],[397,14,373,18],[397,18,373,22,"Error"],[397,23,373,27],[397,24,373,28],[397,80,373,84],[397,81,373,85],[398,6,374,8],[399,6,375,8],[399,13,375,15],[399,17,375,19],[399,18,375,20,"nativeDatabase"],[399,32,375,34],[399,33,375,35,"syncLibSQL"],[399,43,375,45],[399,44,375,46],[399,45,375,47],[400,4,376,4],[401,2,377,0],[402,2,378,0],[403,0,379,0],[404,0,380,0],[405,2,381,7],[405,8,381,13,"defaultDatabaseDirectory"],[405,32,381,37],[405,35,381,40,"ExpoSQLite"],[405,45,381,50],[405,46,381,50,"default"],[405,53,381,50],[405,54,381,51,"defaultDatabaseDirectory"],[405,78,381,75],[406,2,382,0],[407,0,383,0],[408,0,384,0],[409,2,385,7],[409,8,385,13,"bundledExtensions"],[409,25,385,30],[409,28,385,33,"ExpoSQLite"],[409,38,385,43],[409,39,385,43,"default"],[409,46,385,43],[409,47,385,44,"bundledExtensions"],[409,64,385,61],[410,2,386,0],[411,0,387,0],[412,0,388,0],[413,0,389,0],[414,0,390,0],[415,0,391,0],[416,0,392,0],[417,2,393,7],[417,17,393,22,"openDatabaseAsync"],[417,34,393,39,"openDatabaseAsync"],[417,35,393,40,"databaseName"],[417,47,393,52],[417,49,393,54,"options"],[417,56,393,61],[417,58,393,63,"directory"],[417,67,393,72],[417,69,393,74],[418,4,394,4],[418,10,394,10,"openOptions"],[418,21,394,21],[418,24,394,24,"options"],[418,31,394,31],[418,35,394,35],[418,36,394,36],[418,37,394,37],[419,4,395,4],[419,10,395,10,"databasePath"],[419,22,395,22],[419,25,395,25],[419,29,395,25,"createDatabasePath"],[419,39,395,43],[419,40,395,43,"createDatabasePath"],[419,58,395,43],[419,60,395,44,"databaseName"],[419,72,395,56],[419,74,395,58,"directory"],[419,83,395,67],[419,84,395,68],[420,4,396,4],[420,10,396,10,"ExpoSQLite"],[420,20,396,20],[420,21,396,20,"default"],[420,28,396,20],[420,29,396,21,"ensureDatabasePathExistsAsync"],[420,58,396,50],[420,59,396,51,"databasePath"],[420,71,396,63],[420,72,396,64],[421,4,397,4],[421,10,397,10,"nativeDatabase"],[421,24,397,24],[421,27,397,27],[421,31,397,31,"ExpoSQLite"],[421,41,397,41],[421,42,397,41,"default"],[421,49,397,41],[421,50,397,42,"NativeDatabase"],[421,64,397,56],[421,65,397,57,"databasePath"],[421,77,397,69],[421,79,397,71],[421,83,397,71,"flattenOpenOptions"],[421,98,397,89],[421,99,397,89,"flattenOpenOptions"],[421,117,397,89],[421,119,397,90,"openOptions"],[421,130,397,101],[421,131,397,102],[421,132,397,103],[422,4,398,4],[422,10,398,10,"nativeDatabase"],[422,24,398,24],[422,25,398,25,"initAsync"],[422,34,398,34],[422,35,398,35],[422,36,398,36],[423,4,399,4],[423,11,399,11],[423,15,399,15,"SQLiteDatabase"],[423,29,399,29],[423,30,399,30,"databasePath"],[423,42,399,42],[423,44,399,44,"openOptions"],[423,55,399,55],[423,57,399,57,"nativeDatabase"],[423,71,399,71],[423,72,399,72],[424,2,400,0],[425,2,401,0],[426,0,402,0],[427,0,403,0],[428,0,404,0],[429,0,405,0],[430,0,406,0],[431,0,407,0],[432,0,408,0],[433,0,409,0],[434,2,410,7],[434,11,410,16,"openDatabaseSync"],[434,27,410,32,"openDatabaseSync"],[434,28,410,33,"databaseName"],[434,40,410,45],[434,42,410,47,"options"],[434,49,410,54],[434,51,410,56,"directory"],[434,60,410,65],[434,62,410,67],[435,4,411,4],[435,10,411,10,"openOptions"],[435,21,411,21],[435,24,411,24,"options"],[435,31,411,31],[435,35,411,35],[435,36,411,36],[435,37,411,37],[436,4,412,4],[436,10,412,10,"databasePath"],[436,22,412,22],[436,25,412,25],[436,29,412,25,"createDatabasePath"],[436,39,412,43],[436,40,412,43,"createDatabasePath"],[436,58,412,43],[436,60,412,44,"databaseName"],[436,72,412,56],[436,74,412,58,"directory"],[436,83,412,67],[436,84,412,68],[437,4,413,4,"ExpoSQLite"],[437,14,413,14],[437,15,413,14,"default"],[437,22,413,14],[437,23,413,15,"ensureDatabasePathExistsSync"],[437,51,413,43],[437,52,413,44,"databasePath"],[437,64,413,56],[437,65,413,57],[438,4,414,4],[438,10,414,10,"nativeDatabase"],[438,24,414,24],[438,27,414,27],[438,31,414,31,"ExpoSQLite"],[438,41,414,41],[438,42,414,41,"default"],[438,49,414,41],[438,50,414,42,"NativeDatabase"],[438,64,414,56],[438,65,414,57,"databasePath"],[438,77,414,69],[438,79,414,71],[438,83,414,71,"flattenOpenOptions"],[438,98,414,89],[438,99,414,89,"flattenOpenOptions"],[438,117,414,89],[438,119,414,90,"openOptions"],[438,130,414,101],[438,131,414,102],[438,132,414,103],[439,4,415,4,"nativeDatabase"],[439,18,415,18],[439,19,415,19,"initSync"],[439,27,415,27],[439,28,415,28],[439,29,415,29],[440,4,416,4],[440,11,416,11],[440,15,416,15,"SQLiteDatabase"],[440,29,416,29],[440,30,416,30,"databasePath"],[440,42,416,42],[440,44,416,44,"openOptions"],[440,55,416,55],[440,57,416,57,"nativeDatabase"],[440,71,416,71],[440,72,416,72],[441,2,417,0],[442,2,418,0],[443,0,419,0],[444,0,420,0],[445,0,421,0],[446,0,422,0],[447,0,423,0],[448,2,424,7],[448,17,424,22,"deserializeDatabaseAsync"],[448,41,424,46,"deserializeDatabaseAsync"],[448,42,424,47,"serializedData"],[448,56,424,61],[448,58,424,63,"options"],[448,65,424,70],[448,67,424,72],[449,4,425,4],[449,10,425,10,"openOptions"],[449,21,425,21],[449,24,425,24,"options"],[449,31,425,31],[449,35,425,35],[449,36,425,36],[449,37,425,37],[450,4,426,4],[450,10,426,10,"nativeDatabase"],[450,24,426,24],[450,27,426,27],[450,31,426,31,"ExpoSQLite"],[450,41,426,41],[450,42,426,41,"default"],[450,49,426,41],[450,50,426,42,"NativeDatabase"],[450,64,426,56],[450,65,426,57],[450,75,426,67],[450,77,426,69],[450,81,426,69,"flattenOpenOptions"],[450,96,426,87],[450,97,426,87,"flattenOpenOptions"],[450,115,426,87],[450,117,426,88,"openOptions"],[450,128,426,99],[450,129,426,100],[450,131,426,102,"serializedData"],[450,145,426,116],[450,146,426,117],[451,4,427,4],[451,10,427,10,"nativeDatabase"],[451,24,427,24],[451,25,427,25,"initAsync"],[451,34,427,34],[451,35,427,35],[451,36,427,36],[452,4,428,4],[452,11,428,11],[452,15,428,15,"SQLiteDatabase"],[452,29,428,29],[452,30,428,30],[452,40,428,40],[452,42,428,42,"openOptions"],[452,53,428,53],[452,55,428,55,"nativeDatabase"],[452,69,428,69],[452,70,428,70],[453,2,429,0],[454,2,430,0],[455,0,431,0],[456,0,432,0],[457,0,433,0],[458,0,434,0],[459,0,435,0],[460,0,436,0],[461,0,437,0],[462,2,438,7],[462,11,438,16,"deserializeDatabaseSync"],[462,34,438,39,"deserializeDatabaseSync"],[462,35,438,40,"serializedData"],[462,49,438,54],[462,51,438,56,"options"],[462,58,438,63],[462,60,438,65],[463,4,439,4],[463,10,439,10,"openOptions"],[463,21,439,21],[463,24,439,24,"options"],[463,31,439,31],[463,35,439,35],[463,36,439,36],[463,37,439,37],[464,4,440,4],[464,10,440,10,"nativeDatabase"],[464,24,440,24],[464,27,440,27],[464,31,440,31,"ExpoSQLite"],[464,41,440,41],[464,42,440,41,"default"],[464,49,440,41],[464,50,440,42,"NativeDatabase"],[464,64,440,56],[464,65,440,57],[464,75,440,67],[464,77,440,69],[464,81,440,69,"flattenOpenOptions"],[464,96,440,87],[464,97,440,87,"flattenOpenOptions"],[464,115,440,87],[464,117,440,88,"openOptions"],[464,128,440,99],[464,129,440,100],[464,131,440,102,"serializedData"],[464,145,440,116],[464,146,440,117],[465,4,441,4,"nativeDatabase"],[465,18,441,18],[465,19,441,19,"initSync"],[465,27,441,27],[465,28,441,28],[465,29,441,29],[466,4,442,4],[466,11,442,11],[466,15,442,15,"SQLiteDatabase"],[466,29,442,29],[466,30,442,30],[466,40,442,40],[466,42,442,42,"openOptions"],[466,53,442,53],[466,55,442,55,"nativeDatabase"],[466,69,442,69],[466,70,442,70],[467,2,443,0],[468,2,444,0],[469,0,445,0],[470,0,446,0],[471,0,447,0],[472,0,448,0],[473,0,449,0],[474,2,450,7],[474,17,450,22,"deleteDatabaseAsync"],[474,36,450,41,"deleteDatabaseAsync"],[474,37,450,42,"databaseName"],[474,49,450,54],[474,51,450,56,"directory"],[474,60,450,65],[474,62,450,67],[475,4,451,4],[475,10,451,10,"databasePath"],[475,22,451,22],[475,25,451,25],[475,29,451,25,"createDatabasePath"],[475,39,451,43],[475,40,451,43,"createDatabasePath"],[475,58,451,43],[475,60,451,44,"databaseName"],[475,72,451,56],[475,74,451,58,"directory"],[475,83,451,67],[475,84,451,68],[476,4,452,4],[476,11,452,11],[476,17,452,17,"ExpoSQLite"],[476,27,452,27],[476,28,452,27,"default"],[476,35,452,27],[476,36,452,28,"deleteDatabaseAsync"],[476,55,452,47],[476,56,452,48,"databasePath"],[476,68,452,60],[476,69,452,61],[477,2,453,0],[478,2,454,0],[479,0,455,0],[480,0,456,0],[481,0,457,0],[482,0,458,0],[483,0,459,0],[484,0,460,0],[485,0,461,0],[486,2,462,7],[486,11,462,16,"deleteDatabaseSync"],[486,29,462,34,"deleteDatabaseSync"],[486,30,462,35,"databaseName"],[486,42,462,47],[486,44,462,49,"directory"],[486,53,462,58],[486,55,462,60],[487,4,463,4],[487,10,463,10,"databasePath"],[487,22,463,22],[487,25,463,25],[487,29,463,25,"createDatabasePath"],[487,39,463,43],[487,40,463,43,"createDatabasePath"],[487,58,463,43],[487,60,463,44,"databaseName"],[487,72,463,56],[487,74,463,58,"directory"],[487,83,463,67],[487,84,463,68],[488,4,464,4],[488,11,464,11,"ExpoSQLite"],[488,21,464,21],[488,22,464,21,"default"],[488,29,464,21],[488,30,464,22,"deleteDatabaseSync"],[488,48,464,40],[488,49,464,41,"databasePath"],[488,61,464,53],[488,62,464,54],[489,2,465,0],[490,2,466,0],[491,0,467,0],[492,0,468,0],[493,0,469,0],[494,0,470,0],[495,0,471,0],[496,0,472,0],[497,0,473,0],[498,0,474,0],[499,0,475,0],[500,0,476,0],[501,2,477,7],[501,11,477,16,"backupDatabaseAsync"],[501,30,477,35,"backupDatabaseAsync"],[501,31,477,36],[502,4,477,38,"sourceDatabase"],[502,18,477,52],[503,4,477,54,"sourceDatabaseName"],[503,22,477,72],[504,4,477,74,"destDatabase"],[504,16,477,86],[505,4,477,88,"destDatabaseName"],[506,2,477,106],[506,3,477,107],[506,5,477,109],[507,4,478,4],[507,11,478,11,"ExpoSQLite"],[507,21,478,21],[507,22,478,21,"default"],[507,29,478,21],[507,30,478,22,"backupDatabaseAsync"],[507,49,478,41],[507,50,478,42,"destDatabase"],[507,62,478,54],[507,63,478,55,"nativeDatabase"],[507,77,478,69],[507,79,478,71,"destDatabaseName"],[507,95,478,87],[507,99,478,91],[507,105,478,97],[507,107,478,99,"sourceDatabase"],[507,121,478,113],[507,122,478,114,"nativeDatabase"],[507,136,478,128],[507,138,478,130,"sourceDatabaseName"],[507,156,478,148],[507,160,478,152],[507,166,478,158],[507,167,478,159],[508,2,479,0],[509,2,480,0],[510,0,481,0],[511,0,482,0],[512,0,483,0],[513,0,484,0],[514,0,485,0],[515,0,486,0],[516,0,487,0],[517,0,488,0],[518,0,489,0],[519,0,490,0],[520,0,491,0],[521,0,492,0],[522,2,493,7],[522,11,493,16,"backupDatabaseSync"],[522,29,493,34,"backupDatabaseSync"],[522,30,493,35],[523,4,493,37,"sourceDatabase"],[523,18,493,51],[524,4,493,53,"sourceDatabaseName"],[524,22,493,71],[525,4,493,73,"destDatabase"],[525,16,493,85],[526,4,493,87,"destDatabaseName"],[527,2,493,105],[527,3,493,106],[527,5,493,108],[528,4,494,4],[528,11,494,11,"ExpoSQLite"],[528,21,494,21],[528,22,494,21,"default"],[528,29,494,21],[528,30,494,22,"backupDatabaseSync"],[528,48,494,40],[528,49,494,41,"destDatabase"],[528,61,494,53],[528,62,494,54,"nativeDatabase"],[528,76,494,68],[528,78,494,70,"destDatabaseName"],[528,94,494,86],[528,98,494,90],[528,104,494,96],[528,106,494,98,"sourceDatabase"],[528,120,494,112],[528,121,494,113,"nativeDatabase"],[528,135,494,127],[528,137,494,129,"sourceDatabaseName"],[528,155,494,147],[528,159,494,151],[528,165,494,157],[528,166,494,158],[529,2,495,0],[530,2,496,0],[531,0,497,0],[532,0,498,0],[533,0,499,0],[534,0,500,0],[535,0,501,0],[536,0,502,0],[537,2,503,7],[537,11,503,16,"addDatabaseChangeListener"],[537,36,503,41,"addDatabaseChangeListener"],[537,37,503,42,"listener"],[537,45,503,50],[537,47,503,52],[538,4,504,4],[538,11,504,11,"ExpoSQLite"],[538,21,504,21],[538,22,504,21,"default"],[538,29,504,21],[538,30,504,22,"addListener"],[538,41,504,33],[538,42,504,34],[538,60,504,52],[538,62,504,54,"listener"],[538,70,504,62],[538,71,504,63],[539,2,505,0],[540,2,506,0],[541,0,507,0],[542,0,508,0],[543,0,509,0],[544,2,510,0],[544,8,510,6,"Transaction"],[544,19,510,17],[544,28,510,26,"SQLiteDatabase"],[544,42,510,40],[544,43,510,41],[545,4,511,4],[545,17,511,17,"createAsync"],[545,28,511,28,"createAsync"],[545,29,511,29,"db"],[545,31,511,31],[545,33,511,33],[546,6,512,8],[546,12,512,14,"options"],[546,19,512,21],[546,22,512,24],[547,8,512,26],[547,11,512,29,"db"],[547,13,512,31],[547,14,512,32,"options"],[547,21,512,39],[548,8,512,41,"useNewConnection"],[548,24,512,57],[548,26,512,59],[549,6,512,64],[549,7,512,65],[550,6,513,8],[550,12,513,14,"nativeDatabase"],[550,26,513,28],[550,29,513,31],[550,33,513,35,"ExpoSQLite"],[550,43,513,45],[550,44,513,45,"default"],[550,51,513,45],[550,52,513,46,"NativeDatabase"],[550,66,513,60],[550,67,513,61,"db"],[550,69,513,63],[550,70,513,64,"databasePath"],[550,82,513,76],[550,84,513,78],[550,88,513,78,"flattenOpenOptions"],[550,103,513,96],[550,104,513,96,"flattenOpenOptions"],[550,122,513,96],[550,124,513,97,"options"],[550,131,513,104],[550,132,513,105],[550,133,513,106],[551,6,514,8],[551,12,514,14,"nativeDatabase"],[551,26,514,28],[551,27,514,29,"initAsync"],[551,36,514,38],[551,37,514,39],[551,38,514,40],[552,6,515,8],[552,13,515,15],[552,17,515,19,"Transaction"],[552,28,515,30],[552,29,515,31,"db"],[552,31,515,33],[552,32,515,34,"databasePath"],[552,44,515,46],[552,46,515,48,"options"],[552,53,515,55],[552,55,515,57,"nativeDatabase"],[552,69,515,71],[552,70,515,72],[553,4,516,4],[554,2,517,0],[555,0,517,1],[555,3]],"functionMap":{"names":["<global>","SQLiteDatabase","constructor","isInTransactionAsync","closeAsync","execAsync","serializeAsync","prepareAsync","createSessionAsync","loadExtensionAsync","withTransactionAsync","withExclusiveTransactionAsync","isInTransactionSync","closeSync","execSync","serializeSync","prepareSync","createSessionSync","loadExtensionSync","withTransactionSync","runAsync","getFirstAsync","getEachAsync","getAllAsync","runSync","getFirstSync","getEachSync","getAllSync","syncLibSQL","openDatabaseAsync","openDatabaseSync","deserializeDatabaseAsync","deserializeDatabaseSync","deleteDatabaseAsync","deleteDatabaseSync","backupDatabaseAsync","backupDatabaseSync","addDatabaseChangeListener","Transaction","Transaction.createAsync"],"mappings":"AAA;OCS;ICI;KDI;IEI;KFE;IGI;KHE;IIO;KJE;IKM;KLE;IMM;KNI;IOM;KPI;IQqB;KRE;ISyB;KTU;IUyB;KVqB;IWI;KXE;IYI;KZE;IaU;KbE;IcQ;KdE;IeQ;KfI;IgBS;KhBI;IiBsB;KjBE;IkBQ;KlBU;ImBC;KnBU;IoBC;KpBW;IqBC;KrBW;IsBC;KtBW;IuBC;KvBU;IwBC;KxBW;IyBC;KzBW;I0BC;K1BW;I2BK;K3BK;CDC;O6BgB;C7BO;O8BU;C9BO;O+BO;C/BK;OgCS;ChCK;OiCO;CjCG;OkCS;ClCG;OmCY;CnCE;OoCc;CpCE;OqCQ;CrCE;AsCK;ICC;KDK;CtCC"},"hasCjsExports":false},"type":"js/module"}]}