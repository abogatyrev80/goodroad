{"dependencies":[{"name":"./createMMKV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":42,"index":57}}],"key":"LQHVMmXsS9EO1RglWHbwhXkOzxU=","exportNames":["*"],"imports":1}},{"name":"./createMMKV.mock","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":58},"end":{"line":4,"column":51,"index":109}}],"key":"JRhJrfC5sOng6iGgqYiw99drmmw=","exportNames":["*"],"imports":1}},{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":110},"end":{"line":5,"column":43,"index":153}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc=","exportNames":["*"],"imports":1}},{"name":"./MemoryWarningListener","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":154},"end":{"line":6,"column":67,"index":221}}],"key":"IO3e20pQoHZuPu887JFPluoo4go=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"MMKV\", {\n    enumerable: true,\n    get: function () {\n      return MMKV;\n    }\n  });\n  var _createMMKV = require(_dependencyMap[0], \"./createMMKV\");\n  var _createMMKVMock = require(_dependencyMap[1], \"./createMMKV.mock\");\n  var _PlatformChecker = require(_dependencyMap[2], \"./PlatformChecker\");\n  var _MemoryWarningListener = require(_dependencyMap[3], \"./MemoryWarningListener\");\n  const onValueChangedListeners = new Map();\n\n  /**\n   * A single MMKV instance.\n   */\n  class MMKV {\n    /**\n     * Creates a new MMKV instance with the given Configuration.\n     * If no custom `id` is supplied, `'mmkv.default'` will be used.\n     */\n    constructor(configuration = {\n      id: 'mmkv.default'\n    }) {\n      this.id = configuration.id;\n      this.nativeInstance = (0, _PlatformChecker.isTest)() ? (0, _createMMKVMock.createMockMMKV)() : (0, _createMMKV.createMMKV)(configuration);\n      this.functionCache = {};\n      (0, _MemoryWarningListener.addMemoryWarningListener)(this);\n    }\n    get onValueChangedListeners() {\n      if (!onValueChangedListeners.has(this.id)) {\n        onValueChangedListeners.set(this.id, []);\n      }\n      return onValueChangedListeners.get(this.id);\n    }\n    getFunctionFromCache(functionName) {\n      if (this.functionCache[functionName] == null) {\n        this.functionCache[functionName] = this.nativeInstance[functionName];\n      }\n      return this.functionCache[functionName];\n    }\n    onValuesChanged(keys) {\n      if (this.onValueChangedListeners.length === 0) return;\n      for (const key of keys) {\n        for (const listener of this.onValueChangedListeners) {\n          listener(key);\n        }\n      }\n    }\n    get size() {\n      return this.nativeInstance.size;\n    }\n    get isReadOnly() {\n      return this.nativeInstance.isReadOnly;\n    }\n    set(key, value) {\n      const func = this.getFunctionFromCache('set');\n      func(key, value);\n      this.onValuesChanged([key]);\n    }\n    getBoolean(key) {\n      const func = this.getFunctionFromCache('getBoolean');\n      return func(key);\n    }\n    getString(key) {\n      const func = this.getFunctionFromCache('getString');\n      return func(key);\n    }\n    getNumber(key) {\n      const func = this.getFunctionFromCache('getNumber');\n      return func(key);\n    }\n    getBuffer(key) {\n      const func = this.getFunctionFromCache('getBuffer');\n      return func(key);\n    }\n    contains(key) {\n      const func = this.getFunctionFromCache('contains');\n      return func(key);\n    }\n    delete(key) {\n      const func = this.getFunctionFromCache('delete');\n      func(key);\n      this.onValuesChanged([key]);\n    }\n    getAllKeys() {\n      const func = this.getFunctionFromCache('getAllKeys');\n      return func();\n    }\n    clearAll() {\n      const keys = this.getAllKeys();\n      const func = this.getFunctionFromCache('clearAll');\n      func();\n      this.onValuesChanged(keys);\n    }\n    recrypt(key) {\n      const func = this.getFunctionFromCache('recrypt');\n      return func(key);\n    }\n    trim() {\n      const func = this.getFunctionFromCache('trim');\n      func();\n    }\n    toString() {\n      return `MMKV (${this.id}): [${this.getAllKeys().join(', ')}]`;\n    }\n    toJSON() {\n      return {\n        [this.id]: this.getAllKeys()\n      };\n    }\n    addOnValueChangedListener(onValueChanged) {\n      this.onValueChangedListeners.push(onValueChanged);\n      return {\n        remove: () => {\n          const index = this.onValueChangedListeners.indexOf(onValueChanged);\n          if (index !== -1) {\n            this.onValueChangedListeners.splice(index, 1);\n          }\n        }\n      };\n    }\n  }\n});","lineCount":129,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,12,0,"Object"],[7,8,12,0],[7,9,12,0,"defineProperty"],[7,23,12,0],[7,24,12,0,"exports"],[7,31,12,0],[8,4,12,0,"enumerable"],[8,14,12,0],[9,4,12,0,"get"],[9,7,12,0],[9,18,12,0,"get"],[9,19,12,0],[10,6,12,0],[10,13,12,0,"MMKV"],[10,17,12,0],[11,4,12,0],[12,2,12,0],[13,2,3,0],[13,6,3,0,"_createMMKV"],[13,17,3,0],[13,20,3,0,"require"],[13,27,3,0],[13,28,3,0,"_dependencyMap"],[13,42,3,0],[14,2,4,0],[14,6,4,0,"_createMMKVMock"],[14,21,4,0],[14,24,4,0,"require"],[14,31,4,0],[14,32,4,0,"_dependencyMap"],[14,46,4,0],[15,2,5,0],[15,6,5,0,"_PlatformChecker"],[15,22,5,0],[15,25,5,0,"require"],[15,32,5,0],[15,33,5,0,"_dependencyMap"],[15,47,5,0],[16,2,6,0],[16,6,6,0,"_MemoryWarningListener"],[16,28,6,0],[16,31,6,0,"require"],[16,38,6,0],[16,39,6,0,"_dependencyMap"],[16,53,6,0],[17,2,7,0],[17,8,7,6,"onValueChangedListeners"],[17,31,7,29],[17,34,7,32],[17,38,7,36,"Map"],[17,41,7,39],[17,42,7,40],[17,43,7,41],[19,2,9,0],[20,0,10,0],[21,0,11,0],[22,2,12,7],[22,8,12,13,"MMKV"],[22,12,12,17],[22,13,12,18],[23,4,13,2],[24,0,14,0],[25,0,15,0],[26,0,16,0],[27,4,17,2,"constructor"],[27,15,17,13,"constructor"],[27,16,17,14,"configuration"],[27,29,17,27],[27,32,17,30],[28,6,18,4,"id"],[28,8,18,6],[28,10,18,8],[29,4,19,2],[29,5,19,3],[29,7,19,5],[30,6,20,4],[30,10,20,8],[30,11,20,9,"id"],[30,13,20,11],[30,16,20,14,"configuration"],[30,29,20,27],[30,30,20,28,"id"],[30,32,20,30],[31,6,21,4],[31,10,21,8],[31,11,21,9,"nativeInstance"],[31,25,21,23],[31,28,21,26],[31,32,21,26,"isTest"],[31,48,21,32],[31,49,21,32,"isTest"],[31,55,21,32],[31,57,21,33],[31,58,21,34],[31,61,21,37],[31,65,21,37,"createMockMMKV"],[31,80,21,51],[31,81,21,51,"createMockMMKV"],[31,95,21,51],[31,97,21,52],[31,98,21,53],[31,101,21,56],[31,105,21,56,"createMMKV"],[31,116,21,66],[31,117,21,66,"createMMKV"],[31,127,21,66],[31,129,21,67,"configuration"],[31,142,21,80],[31,143,21,81],[32,6,22,4],[32,10,22,8],[32,11,22,9,"functionCache"],[32,24,22,22],[32,27,22,25],[32,28,22,26],[32,29,22,27],[33,6,23,4],[33,10,23,4,"addMemoryWarningListener"],[33,32,23,28],[33,33,23,28,"addMemoryWarningListener"],[33,57,23,28],[33,59,23,29],[33,63,23,33],[33,64,23,34],[34,4,24,2],[35,4,25,2],[35,8,25,6,"onValueChangedListeners"],[35,31,25,29,"onValueChangedListeners"],[35,32,25,29],[35,34,25,32],[36,6,26,4],[36,10,26,8],[36,11,26,9,"onValueChangedListeners"],[36,34,26,32],[36,35,26,33,"has"],[36,38,26,36],[36,39,26,37],[36,43,26,41],[36,44,26,42,"id"],[36,46,26,44],[36,47,26,45],[36,49,26,47],[37,8,27,6,"onValueChangedListeners"],[37,31,27,29],[37,32,27,30,"set"],[37,35,27,33],[37,36,27,34],[37,40,27,38],[37,41,27,39,"id"],[37,43,27,41],[37,45,27,43],[37,47,27,45],[37,48,27,46],[38,6,28,4],[39,6,29,4],[39,13,29,11,"onValueChangedListeners"],[39,36,29,34],[39,37,29,35,"get"],[39,40,29,38],[39,41,29,39],[39,45,29,43],[39,46,29,44,"id"],[39,48,29,46],[39,49,29,47],[40,4,30,2],[41,4,31,2,"getFunctionFromCache"],[41,24,31,22,"getFunctionFromCache"],[41,25,31,23,"functionName"],[41,37,31,35],[41,39,31,37],[42,6,32,4],[42,10,32,8],[42,14,32,12],[42,15,32,13,"functionCache"],[42,28,32,26],[42,29,32,27,"functionName"],[42,41,32,39],[42,42,32,40],[42,46,32,44],[42,50,32,48],[42,52,32,50],[43,8,33,6],[43,12,33,10],[43,13,33,11,"functionCache"],[43,26,33,24],[43,27,33,25,"functionName"],[43,39,33,37],[43,40,33,38],[43,43,33,41],[43,47,33,45],[43,48,33,46,"nativeInstance"],[43,62,33,60],[43,63,33,61,"functionName"],[43,75,33,73],[43,76,33,74],[44,6,34,4],[45,6,35,4],[45,13,35,11],[45,17,35,15],[45,18,35,16,"functionCache"],[45,31,35,29],[45,32,35,30,"functionName"],[45,44,35,42],[45,45,35,43],[46,4,36,2],[47,4,37,2,"onValuesChanged"],[47,19,37,17,"onValuesChanged"],[47,20,37,18,"keys"],[47,24,37,22],[47,26,37,24],[48,6,38,4],[48,10,38,8],[48,14,38,12],[48,15,38,13,"onValueChangedListeners"],[48,38,38,36],[48,39,38,37,"length"],[48,45,38,43],[48,50,38,48],[48,51,38,49],[48,53,38,51],[49,6,39,4],[49,11,39,9],[49,17,39,15,"key"],[49,20,39,18],[49,24,39,22,"keys"],[49,28,39,26],[49,30,39,28],[50,8,40,6],[50,13,40,11],[50,19,40,17,"listener"],[50,27,40,25],[50,31,40,29],[50,35,40,33],[50,36,40,34,"onValueChangedListeners"],[50,59,40,57],[50,61,40,59],[51,10,41,8,"listener"],[51,18,41,16],[51,19,41,17,"key"],[51,22,41,20],[51,23,41,21],[52,8,42,6],[53,6,43,4],[54,4,44,2],[55,4,45,2],[55,8,45,6,"size"],[55,12,45,10,"size"],[55,13,45,10],[55,15,45,13],[56,6,46,4],[56,13,46,11],[56,17,46,15],[56,18,46,16,"nativeInstance"],[56,32,46,30],[56,33,46,31,"size"],[56,37,46,35],[57,4,47,2],[58,4,48,2],[58,8,48,6,"isReadOnly"],[58,18,48,16,"isReadOnly"],[58,19,48,16],[58,21,48,19],[59,6,49,4],[59,13,49,11],[59,17,49,15],[59,18,49,16,"nativeInstance"],[59,32,49,30],[59,33,49,31,"isReadOnly"],[59,43,49,41],[60,4,50,2],[61,4,51,2,"set"],[61,7,51,5,"set"],[61,8,51,6,"key"],[61,11,51,9],[61,13,51,11,"value"],[61,18,51,16],[61,20,51,18],[62,6,52,4],[62,12,52,10,"func"],[62,16,52,14],[62,19,52,17],[62,23,52,21],[62,24,52,22,"getFunctionFromCache"],[62,44,52,42],[62,45,52,43],[62,50,52,48],[62,51,52,49],[63,6,53,4,"func"],[63,10,53,8],[63,11,53,9,"key"],[63,14,53,12],[63,16,53,14,"value"],[63,21,53,19],[63,22,53,20],[64,6,54,4],[64,10,54,8],[64,11,54,9,"onValuesChanged"],[64,26,54,24],[64,27,54,25],[64,28,54,26,"key"],[64,31,54,29],[64,32,54,30],[64,33,54,31],[65,4,55,2],[66,4,56,2,"getBoolean"],[66,14,56,12,"getBoolean"],[66,15,56,13,"key"],[66,18,56,16],[66,20,56,18],[67,6,57,4],[67,12,57,10,"func"],[67,16,57,14],[67,19,57,17],[67,23,57,21],[67,24,57,22,"getFunctionFromCache"],[67,44,57,42],[67,45,57,43],[67,57,57,55],[67,58,57,56],[68,6,58,4],[68,13,58,11,"func"],[68,17,58,15],[68,18,58,16,"key"],[68,21,58,19],[68,22,58,20],[69,4,59,2],[70,4,60,2,"getString"],[70,13,60,11,"getString"],[70,14,60,12,"key"],[70,17,60,15],[70,19,60,17],[71,6,61,4],[71,12,61,10,"func"],[71,16,61,14],[71,19,61,17],[71,23,61,21],[71,24,61,22,"getFunctionFromCache"],[71,44,61,42],[71,45,61,43],[71,56,61,54],[71,57,61,55],[72,6,62,4],[72,13,62,11,"func"],[72,17,62,15],[72,18,62,16,"key"],[72,21,62,19],[72,22,62,20],[73,4,63,2],[74,4,64,2,"getNumber"],[74,13,64,11,"getNumber"],[74,14,64,12,"key"],[74,17,64,15],[74,19,64,17],[75,6,65,4],[75,12,65,10,"func"],[75,16,65,14],[75,19,65,17],[75,23,65,21],[75,24,65,22,"getFunctionFromCache"],[75,44,65,42],[75,45,65,43],[75,56,65,54],[75,57,65,55],[76,6,66,4],[76,13,66,11,"func"],[76,17,66,15],[76,18,66,16,"key"],[76,21,66,19],[76,22,66,20],[77,4,67,2],[78,4,68,2,"getBuffer"],[78,13,68,11,"getBuffer"],[78,14,68,12,"key"],[78,17,68,15],[78,19,68,17],[79,6,69,4],[79,12,69,10,"func"],[79,16,69,14],[79,19,69,17],[79,23,69,21],[79,24,69,22,"getFunctionFromCache"],[79,44,69,42],[79,45,69,43],[79,56,69,54],[79,57,69,55],[80,6,70,4],[80,13,70,11,"func"],[80,17,70,15],[80,18,70,16,"key"],[80,21,70,19],[80,22,70,20],[81,4,71,2],[82,4,72,2,"contains"],[82,12,72,10,"contains"],[82,13,72,11,"key"],[82,16,72,14],[82,18,72,16],[83,6,73,4],[83,12,73,10,"func"],[83,16,73,14],[83,19,73,17],[83,23,73,21],[83,24,73,22,"getFunctionFromCache"],[83,44,73,42],[83,45,73,43],[83,55,73,53],[83,56,73,54],[84,6,74,4],[84,13,74,11,"func"],[84,17,74,15],[84,18,74,16,"key"],[84,21,74,19],[84,22,74,20],[85,4,75,2],[86,4,76,2,"delete"],[86,10,76,8,"delete"],[86,11,76,9,"key"],[86,14,76,12],[86,16,76,14],[87,6,77,4],[87,12,77,10,"func"],[87,16,77,14],[87,19,77,17],[87,23,77,21],[87,24,77,22,"getFunctionFromCache"],[87,44,77,42],[87,45,77,43],[87,53,77,51],[87,54,77,52],[88,6,78,4,"func"],[88,10,78,8],[88,11,78,9,"key"],[88,14,78,12],[88,15,78,13],[89,6,79,4],[89,10,79,8],[89,11,79,9,"onValuesChanged"],[89,26,79,24],[89,27,79,25],[89,28,79,26,"key"],[89,31,79,29],[89,32,79,30],[89,33,79,31],[90,4,80,2],[91,4,81,2,"getAllKeys"],[91,14,81,12,"getAllKeys"],[91,15,81,12],[91,17,81,15],[92,6,82,4],[92,12,82,10,"func"],[92,16,82,14],[92,19,82,17],[92,23,82,21],[92,24,82,22,"getFunctionFromCache"],[92,44,82,42],[92,45,82,43],[92,57,82,55],[92,58,82,56],[93,6,83,4],[93,13,83,11,"func"],[93,17,83,15],[93,18,83,16],[93,19,83,17],[94,4,84,2],[95,4,85,2,"clearAll"],[95,12,85,10,"clearAll"],[95,13,85,10],[95,15,85,13],[96,6,86,4],[96,12,86,10,"keys"],[96,16,86,14],[96,19,86,17],[96,23,86,21],[96,24,86,22,"getAllKeys"],[96,34,86,32],[96,35,86,33],[96,36,86,34],[97,6,87,4],[97,12,87,10,"func"],[97,16,87,14],[97,19,87,17],[97,23,87,21],[97,24,87,22,"getFunctionFromCache"],[97,44,87,42],[97,45,87,43],[97,55,87,53],[97,56,87,54],[98,6,88,4,"func"],[98,10,88,8],[98,11,88,9],[98,12,88,10],[99,6,89,4],[99,10,89,8],[99,11,89,9,"onValuesChanged"],[99,26,89,24],[99,27,89,25,"keys"],[99,31,89,29],[99,32,89,30],[100,4,90,2],[101,4,91,2,"recrypt"],[101,11,91,9,"recrypt"],[101,12,91,10,"key"],[101,15,91,13],[101,17,91,15],[102,6,92,4],[102,12,92,10,"func"],[102,16,92,14],[102,19,92,17],[102,23,92,21],[102,24,92,22,"getFunctionFromCache"],[102,44,92,42],[102,45,92,43],[102,54,92,52],[102,55,92,53],[103,6,93,4],[103,13,93,11,"func"],[103,17,93,15],[103,18,93,16,"key"],[103,21,93,19],[103,22,93,20],[104,4,94,2],[105,4,95,2,"trim"],[105,8,95,6,"trim"],[105,9,95,6],[105,11,95,9],[106,6,96,4],[106,12,96,10,"func"],[106,16,96,14],[106,19,96,17],[106,23,96,21],[106,24,96,22,"getFunctionFromCache"],[106,44,96,42],[106,45,96,43],[106,51,96,49],[106,52,96,50],[107,6,97,4,"func"],[107,10,97,8],[107,11,97,9],[107,12,97,10],[108,4,98,2],[109,4,99,2,"toString"],[109,12,99,10,"toString"],[109,13,99,10],[109,15,99,13],[110,6,100,4],[110,13,100,11],[110,22,100,20],[110,26,100,24],[110,27,100,25,"id"],[110,29,100,27],[110,36,100,34],[110,40,100,38],[110,41,100,39,"getAllKeys"],[110,51,100,49],[110,52,100,50],[110,53,100,51],[110,54,100,52,"join"],[110,58,100,56],[110,59,100,57],[110,63,100,61],[110,64,100,62],[110,67,100,65],[111,4,101,2],[112,4,102,2,"toJSON"],[112,10,102,8,"toJSON"],[112,11,102,8],[112,13,102,11],[113,6,103,4],[113,13,103,11],[114,8,104,6],[114,9,104,7],[114,13,104,11],[114,14,104,12,"id"],[114,16,104,14],[114,19,104,17],[114,23,104,21],[114,24,104,22,"getAllKeys"],[114,34,104,32],[114,35,104,33],[115,6,105,4],[115,7,105,5],[116,4,106,2],[117,4,107,2,"addOnValueChangedListener"],[117,29,107,27,"addOnValueChangedListener"],[117,30,107,28,"onValueChanged"],[117,44,107,42],[117,46,107,44],[118,6,108,4],[118,10,108,8],[118,11,108,9,"onValueChangedListeners"],[118,34,108,32],[118,35,108,33,"push"],[118,39,108,37],[118,40,108,38,"onValueChanged"],[118,54,108,52],[118,55,108,53],[119,6,109,4],[119,13,109,11],[120,8,110,6,"remove"],[120,14,110,12],[120,16,110,14,"remove"],[120,17,110,14],[120,22,110,20],[121,10,111,8],[121,16,111,14,"index"],[121,21,111,19],[121,24,111,22],[121,28,111,26],[121,29,111,27,"onValueChangedListeners"],[121,52,111,50],[121,53,111,51,"indexOf"],[121,60,111,58],[121,61,111,59,"onValueChanged"],[121,75,111,73],[121,76,111,74],[122,10,112,8],[122,14,112,12,"index"],[122,19,112,17],[122,24,112,22],[122,25,112,23],[122,26,112,24],[122,28,112,26],[123,12,113,10],[123,16,113,14],[123,17,113,15,"onValueChangedListeners"],[123,40,113,38],[123,41,113,39,"splice"],[123,47,113,45],[123,48,113,46,"index"],[123,53,113,51],[123,55,113,53],[123,56,113,54],[123,57,113,55],[124,10,114,8],[125,8,115,6],[126,6,116,4],[126,7,116,5],[127,4,117,2],[128,2,118,0],[129,0,118,1],[129,3]],"functionMap":{"names":["<global>","MMKV","constructor","get__onValueChangedListeners","getFunctionFromCache","onValuesChanged","get__size","get__isReadOnly","set","getBoolean","getString","getNumber","getBuffer","contains","_delete","getAllKeys","clearAll","recrypt","trim","toString","toJSON","addOnValueChangedListener","remove"],"mappings":"AAA;OCW;ECK;GDO;EEC;GFK;EGC;GHK;EIC;GJO;EKC;GLE;EMC;GNE;EOC;GPI;EQC;GRG;ESC;GTG;EUC;GVG;EWC;GXG;EYC;GZG;EaC;GbI;EcC;GdG;EeC;GfK;EgBC;GhBG;EiBC;GjBG;EkBC;GlBE;EmBC;GnBI;EoBC;cCG;ODK;GpBE;CDC"},"hasCjsExports":false},"type":"js/module"}]}