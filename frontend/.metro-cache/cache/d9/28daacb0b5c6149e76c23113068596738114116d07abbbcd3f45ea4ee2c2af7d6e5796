{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":74,"index":89}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./MMKV","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":90},"end":{"line":4,"column":30,"index":120}}],"key":"zsqLD+ndfCbLd9bUBNNVv1kLmhE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useMMKV = useMMKV;\n  Object.defineProperty(exports, \"useMMKVString\", {\n    enumerable: true,\n    get: function () {\n      return useMMKVString;\n    }\n  });\n  Object.defineProperty(exports, \"useMMKVNumber\", {\n    enumerable: true,\n    get: function () {\n      return useMMKVNumber;\n    }\n  });\n  Object.defineProperty(exports, \"useMMKVBoolean\", {\n    enumerable: true,\n    get: function () {\n      return useMMKVBoolean;\n    }\n  });\n  Object.defineProperty(exports, \"useMMKVBuffer\", {\n    enumerable: true,\n    get: function () {\n      return useMMKVBuffer;\n    }\n  });\n  exports.useMMKVObject = useMMKVObject;\n  exports.useMMKVListener = useMMKVListener;\n  var _react = require(_dependencyMap[0], \"react\");\n  var _MMKV = require(_dependencyMap[1], \"./MMKV\");\n  function isConfigurationEqual(left, right) {\n    if (left == null || right == null) return left == null && right == null;\n    return left.encryptionKey === right.encryptionKey && left.id === right.id && left.path === right.path && left.mode === right.mode;\n  }\n  let defaultInstance = null;\n  function getDefaultInstance() {\n    if (defaultInstance == null) {\n      defaultInstance = new _MMKV.MMKV();\n    }\n    return defaultInstance;\n  }\n\n  /**\n   * Use the default, shared MMKV instance.\n   */\n\n  /**\n   * Use a custom MMKV instance with the given configuration.\n   * @param configuration The configuration to initialize the MMKV instance with. Does not have to be memoized.\n   */\n\n  function useMMKV(configuration) {\n    const instance = (0, _react.useRef)();\n    const lastConfiguration = (0, _react.useRef)();\n    if (configuration == null) return getDefaultInstance();\n    if (instance.current == null || !isConfigurationEqual(lastConfiguration.current, configuration)) {\n      lastConfiguration.current = configuration;\n      instance.current = new _MMKV.MMKV(configuration);\n    }\n    return instance.current;\n  }\n  function createMMKVHook(getter) {\n    return (key, instance) => {\n      const mmkv = instance ?? getDefaultInstance();\n      const [bump, setBump] = (0, _react.useState)(0);\n      const value = (0, _react.useMemo)(() => {\n        // bump is here as an additional outside dependency, so this useMemo\n        // re-computes the value each time bump changes, effectively acting as a hint\n        // that the outside value (storage) has changed. setting bump refreshes this value.\n        bump;\n        return getter(mmkv, key);\n      }, [mmkv, key, bump]);\n\n      // update value by user set\n      const set = (0, _react.useCallback)(v => {\n        const newValue = typeof v === 'function' ? v(getter(mmkv, key)) : v;\n        switch (typeof newValue) {\n          case 'number':\n          case 'string':\n          case 'boolean':\n            mmkv.set(key, newValue);\n            break;\n          case 'undefined':\n            mmkv.delete(key);\n            break;\n          case 'object':\n            if (newValue instanceof ArrayBuffer) {\n              mmkv.set(key, newValue);\n              break;\n            } else {\n              throw new Error(`MMKV: Type object (${newValue}) is not supported!`);\n            }\n          default:\n            throw new Error(`MMKV: Type ${typeof newValue} is not supported!`);\n        }\n      }, [key, mmkv]);\n\n      // update value if it changes somewhere else (second hook, same key)\n      (0, _react.useEffect)(() => {\n        const listener = mmkv.addOnValueChangedListener(changedKey => {\n          if (changedKey === key) {\n            setBump(b => b + 1);\n          }\n        });\n        return () => listener.remove();\n      }, [key, mmkv]);\n      return [value, set];\n    };\n  }\n\n  /**\n   * Use the string value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [username, setUsername] = useMMKVString(\"user.name\")\n   * ```\n   */\n  const useMMKVString = createMMKVHook((instance, key) => instance.getString(key));\n\n  /**\n   * Use the number value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [age, setAge] = useMMKVNumber(\"user.age\")\n   * ```\n   */\n  const useMMKVNumber = createMMKVHook((instance, key) => instance.getNumber(key));\n  /**\n   * Use the boolean value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [isPremiumAccount, setIsPremiumAccount] = useMMKVBoolean(\"user.isPremium\")\n   * ```\n   */\n  const useMMKVBoolean = createMMKVHook((instance, key) => instance.getBoolean(key));\n  /**\n   * Use the buffer value (unsigned 8-bit (0-255)) of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * @example\n   * ```ts\n   * const [privateKey, setPrivateKey] = useMMKVBuffer(\"user.privateKey\")\n   * ```\n   */\n  const useMMKVBuffer = createMMKVHook((instance, key) => instance.getBuffer(key));\n  /**\n   * Use an object value of the given `key` from the given MMKV storage instance.\n   *\n   * If no instance is provided, a shared default instance will be used.\n   *\n   * The object will be serialized using `JSON`.\n   *\n   * @example\n   * ```ts\n   * const [user, setUser] = useMMKVObject<User>(\"user\")\n   * ```\n   */\n  function useMMKVObject(key, instance) {\n    const [json, setJson] = useMMKVString(key, instance);\n    const value = (0, _react.useMemo)(() => {\n      if (json == null) return undefined;\n      return JSON.parse(json);\n    }, [json]);\n    const setValue = (0, _react.useCallback)(v => {\n      if (v instanceof Function) {\n        setJson(currentJson => {\n          const currentValue = currentJson != null ? JSON.parse(currentJson) : undefined;\n          const newValue = v(currentValue);\n          // Store the Object as a serialized Value or clear the value\n          return newValue != null ? JSON.stringify(newValue) : undefined;\n        });\n      } else {\n        // Store the Object as a serialized Value or clear the value\n        const newValue = v != null ? JSON.stringify(v) : undefined;\n        setJson(newValue);\n      }\n    }, [setJson]);\n    return [value, setValue];\n  }\n\n  /**\n   * Listen for changes in the given MMKV storage instance.\n   * If no instance is passed, the default instance will be used.\n   * @param valueChangedListener The function to call whenever a value inside the storage instance changes\n   * @param instance The instance to listen to changes to (or the default instance)\n   *\n   * @example\n   * ```ts\n   * useMMKVListener((key) => {\n   *   console.log(`Value for \"${key}\" changed!`)\n   * })\n   * ```\n   */\n  function useMMKVListener(valueChangedListener, instance) {\n    const ref = (0, _react.useRef)(valueChangedListener);\n    ref.current = valueChangedListener;\n    const mmkv = instance ?? getDefaultInstance();\n    (0, _react.useEffect)(() => {\n      const listener = mmkv.addOnValueChangedListener(changedKey => {\n        ref.current(changedKey);\n      });\n      return () => listener.remove();\n    }, [mmkv]);\n  }\n});","lineCount":220,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,26,0,"exports"],[7,9,26,0],[7,10,26,0,"useMMKV"],[7,17,26,0],[7,20,26,0,"useMMKV"],[7,27,26,0],[8,2,95,0,"Object"],[8,8,95,0],[8,9,95,0,"defineProperty"],[8,23,95,0],[8,24,95,0,"exports"],[8,31,95,0],[9,4,95,0,"enumerable"],[9,14,95,0],[10,4,95,0,"get"],[10,7,95,0],[10,18,95,0,"get"],[10,19,95,0],[11,6,95,0],[11,13,95,0,"useMMKVString"],[11,26,95,0],[12,4,95,0],[13,2,95,0],[14,2,107,0,"Object"],[14,8,107,0],[14,9,107,0,"defineProperty"],[14,23,107,0],[14,24,107,0,"exports"],[14,31,107,0],[15,4,107,0,"enumerable"],[15,14,107,0],[16,4,107,0,"get"],[16,7,107,0],[16,18,107,0,"get"],[16,19,107,0],[17,6,107,0],[17,13,107,0,"useMMKVNumber"],[17,26,107,0],[18,4,107,0],[19,2,107,0],[20,2,118,0,"Object"],[20,8,118,0],[20,9,118,0,"defineProperty"],[20,23,118,0],[20,24,118,0,"exports"],[20,31,118,0],[21,4,118,0,"enumerable"],[21,14,118,0],[22,4,118,0,"get"],[22,7,118,0],[22,18,118,0,"get"],[22,19,118,0],[23,6,118,0],[23,13,118,0,"useMMKVBoolean"],[23,27,118,0],[24,4,118,0],[25,2,118,0],[26,2,129,0,"Object"],[26,8,129,0],[26,9,129,0,"defineProperty"],[26,23,129,0],[26,24,129,0,"exports"],[26,31,129,0],[27,4,129,0,"enumerable"],[27,14,129,0],[28,4,129,0,"get"],[28,7,129,0],[28,18,129,0,"get"],[28,19,129,0],[29,6,129,0],[29,13,129,0,"useMMKVBuffer"],[29,26,129,0],[30,4,129,0],[31,2,129,0],[32,2,142,0,"exports"],[32,9,142,0],[32,10,142,0,"useMMKVObject"],[32,23,142,0],[32,26,142,0,"useMMKVObject"],[32,39,142,0],[33,2,178,0,"exports"],[33,9,178,0],[33,10,178,0,"useMMKVListener"],[33,25,178,0],[33,28,178,0,"useMMKVListener"],[33,43,178,0],[34,2,3,0],[34,6,3,0,"_react"],[34,12,3,0],[34,15,3,0,"require"],[34,22,3,0],[34,23,3,0,"_dependencyMap"],[34,37,3,0],[35,2,4,0],[35,6,4,0,"_MMKV"],[35,11,4,0],[35,14,4,0,"require"],[35,21,4,0],[35,22,4,0,"_dependencyMap"],[35,36,4,0],[36,2,5,0],[36,11,5,9,"isConfigurationEqual"],[36,31,5,29,"isConfigurationEqual"],[36,32,5,30,"left"],[36,36,5,34],[36,38,5,36,"right"],[36,43,5,41],[36,45,5,43],[37,4,6,2],[37,8,6,6,"left"],[37,12,6,10],[37,16,6,14],[37,20,6,18],[37,24,6,22,"right"],[37,29,6,27],[37,33,6,31],[37,37,6,35],[37,39,6,37],[37,46,6,44,"left"],[37,50,6,48],[37,54,6,52],[37,58,6,56],[37,62,6,60,"right"],[37,67,6,65],[37,71,6,69],[37,75,6,73],[38,4,7,2],[38,11,7,9,"left"],[38,15,7,13],[38,16,7,14,"encryptionKey"],[38,29,7,27],[38,34,7,32,"right"],[38,39,7,37],[38,40,7,38,"encryptionKey"],[38,53,7,51],[38,57,7,55,"left"],[38,61,7,59],[38,62,7,60,"id"],[38,64,7,62],[38,69,7,67,"right"],[38,74,7,72],[38,75,7,73,"id"],[38,77,7,75],[38,81,7,79,"left"],[38,85,7,83],[38,86,7,84,"path"],[38,90,7,88],[38,95,7,93,"right"],[38,100,7,98],[38,101,7,99,"path"],[38,105,7,103],[38,109,7,107,"left"],[38,113,7,111],[38,114,7,112,"mode"],[38,118,7,116],[38,123,7,121,"right"],[38,128,7,126],[38,129,7,127,"mode"],[38,133,7,131],[39,2,8,0],[40,2,9,0],[40,6,9,4,"defaultInstance"],[40,21,9,19],[40,24,9,22],[40,28,9,26],[41,2,10,0],[41,11,10,9,"getDefaultInstance"],[41,29,10,27,"getDefaultInstance"],[41,30,10,27],[41,32,10,30],[42,4,11,2],[42,8,11,6,"defaultInstance"],[42,23,11,21],[42,27,11,25],[42,31,11,29],[42,33,11,31],[43,6,12,4,"defaultInstance"],[43,21,12,19],[43,24,12,22],[43,28,12,26,"MMKV"],[43,33,12,30],[43,34,12,30,"MMKV"],[43,38,12,30],[43,39,12,31],[43,40,12,32],[44,4,13,2],[45,4,14,2],[45,11,14,9,"defaultInstance"],[45,26,14,24],[46,2,15,0],[48,2,17,0],[49,0,18,0],[50,0,19,0],[52,2,21,0],[53,0,22,0],[54,0,23,0],[55,0,24,0],[57,2,26,7],[57,11,26,16,"useMMKV"],[57,18,26,23,"useMMKV"],[57,19,26,24,"configuration"],[57,32,26,37],[57,34,26,39],[58,4,27,2],[58,10,27,8,"instance"],[58,18,27,16],[58,21,27,19],[58,25,27,19,"useRef"],[58,31,27,25],[58,32,27,25,"useRef"],[58,38,27,25],[58,40,27,26],[58,41,27,27],[59,4,28,2],[59,10,28,8,"lastConfiguration"],[59,27,28,25],[59,30,28,28],[59,34,28,28,"useRef"],[59,40,28,34],[59,41,28,34,"useRef"],[59,47,28,34],[59,49,28,35],[59,50,28,36],[60,4,29,2],[60,8,29,6,"configuration"],[60,21,29,19],[60,25,29,23],[60,29,29,27],[60,31,29,29],[60,38,29,36,"getDefaultInstance"],[60,56,29,54],[60,57,29,55],[60,58,29,56],[61,4,30,2],[61,8,30,6,"instance"],[61,16,30,14],[61,17,30,15,"current"],[61,24,30,22],[61,28,30,26],[61,32,30,30],[61,36,30,34],[61,37,30,35,"isConfigurationEqual"],[61,57,30,55],[61,58,30,56,"lastConfiguration"],[61,75,30,73],[61,76,30,74,"current"],[61,83,30,81],[61,85,30,83,"configuration"],[61,98,30,96],[61,99,30,97],[61,101,30,99],[62,6,31,4,"lastConfiguration"],[62,23,31,21],[62,24,31,22,"current"],[62,31,31,29],[62,34,31,32,"configuration"],[62,47,31,45],[63,6,32,4,"instance"],[63,14,32,12],[63,15,32,13,"current"],[63,22,32,20],[63,25,32,23],[63,29,32,27,"MMKV"],[63,34,32,31],[63,35,32,31,"MMKV"],[63,39,32,31],[63,40,32,32,"configuration"],[63,53,32,45],[63,54,32,46],[64,4,33,2],[65,4,34,2],[65,11,34,9,"instance"],[65,19,34,17],[65,20,34,18,"current"],[65,27,34,25],[66,2,35,0],[67,2,36,0],[67,11,36,9,"createMMKVHook"],[67,25,36,23,"createMMKVHook"],[67,26,36,24,"getter"],[67,32,36,30],[67,34,36,32],[68,4,37,2],[68,11,37,9],[68,12,37,10,"key"],[68,15,37,13],[68,17,37,15,"instance"],[68,25,37,23],[68,30,37,28],[69,6,38,4],[69,12,38,10,"mmkv"],[69,16,38,14],[69,19,38,17,"instance"],[69,27,38,25],[69,31,38,29,"getDefaultInstance"],[69,49,38,47],[69,50,38,48],[69,51,38,49],[70,6,39,4],[70,12,39,10],[70,13,39,11,"bump"],[70,17,39,15],[70,19,39,17,"setBump"],[70,26,39,24],[70,27,39,25],[70,30,39,28],[70,34,39,28,"useState"],[70,40,39,36],[70,41,39,36,"useState"],[70,49,39,36],[70,51,39,37],[70,52,39,38],[70,53,39,39],[71,6,40,4],[71,12,40,10,"value"],[71,17,40,15],[71,20,40,18],[71,24,40,18,"useMemo"],[71,30,40,25],[71,31,40,25,"useMemo"],[71,38,40,25],[71,40,40,26],[71,46,40,32],[72,8,41,6],[73,8,42,6],[74,8,43,6],[75,8,44,6,"bump"],[75,12,44,10],[76,8,45,6],[76,15,45,13,"getter"],[76,21,45,19],[76,22,45,20,"mmkv"],[76,26,45,24],[76,28,45,26,"key"],[76,31,45,29],[76,32,45,30],[77,6,46,4],[77,7,46,5],[77,9,46,7],[77,10,46,8,"mmkv"],[77,14,46,12],[77,16,46,14,"key"],[77,19,46,17],[77,21,46,19,"bump"],[77,25,46,23],[77,26,46,24],[77,27,46,25],[79,6,48,4],[80,6,49,4],[80,12,49,10,"set"],[80,15,49,13],[80,18,49,16],[80,22,49,16,"useCallback"],[80,28,49,27],[80,29,49,27,"useCallback"],[80,40,49,27],[80,42,49,28,"v"],[80,43,49,29],[80,47,49,33],[81,8,50,6],[81,14,50,12,"newValue"],[81,22,50,20],[81,25,50,23],[81,32,50,30,"v"],[81,33,50,31],[81,38,50,36],[81,48,50,46],[81,51,50,49,"v"],[81,52,50,50],[81,53,50,51,"getter"],[81,59,50,57],[81,60,50,58,"mmkv"],[81,64,50,62],[81,66,50,64,"key"],[81,69,50,67],[81,70,50,68],[81,71,50,69],[81,74,50,72,"v"],[81,75,50,73],[82,8,51,6],[82,16,51,14],[82,23,51,21,"newValue"],[82,31,51,29],[83,10,52,8],[83,15,52,13],[83,23,52,21],[84,10,53,8],[84,15,53,13],[84,23,53,21],[85,10,54,8],[85,15,54,13],[85,24,54,22],[86,12,55,10,"mmkv"],[86,16,55,14],[86,17,55,15,"set"],[86,20,55,18],[86,21,55,19,"key"],[86,24,55,22],[86,26,55,24,"newValue"],[86,34,55,32],[86,35,55,33],[87,12,56,10],[88,10,57,8],[88,15,57,13],[88,26,57,24],[89,12,58,10,"mmkv"],[89,16,58,14],[89,17,58,15,"delete"],[89,23,58,21],[89,24,58,22,"key"],[89,27,58,25],[89,28,58,26],[90,12,59,10],[91,10,60,8],[91,15,60,13],[91,23,60,21],[92,12,61,10],[92,16,61,14,"newValue"],[92,24,61,22],[92,36,61,34,"ArrayBuffer"],[92,47,61,45],[92,49,61,47],[93,14,62,12,"mmkv"],[93,18,62,16],[93,19,62,17,"set"],[93,22,62,20],[93,23,62,21,"key"],[93,26,62,24],[93,28,62,26,"newValue"],[93,36,62,34],[93,37,62,35],[94,14,63,12],[95,12,64,10],[95,13,64,11],[95,19,64,17],[96,14,65,12],[96,20,65,18],[96,24,65,22,"Error"],[96,29,65,27],[96,30,65,28],[96,52,65,50,"newValue"],[96,60,65,58],[96,81,65,79],[96,82,65,80],[97,12,66,10],[98,10,67,8],[99,12,68,10],[99,18,68,16],[99,22,68,20,"Error"],[99,27,68,25],[99,28,68,26],[99,42,68,40],[99,49,68,47,"newValue"],[99,57,68,55],[99,77,68,75],[99,78,68,76],[100,8,69,6],[101,6,70,4],[101,7,70,5],[101,9,70,7],[101,10,70,8,"key"],[101,13,70,11],[101,15,70,13,"mmkv"],[101,19,70,17],[101,20,70,18],[101,21,70,19],[103,6,72,4],[104,6,73,4],[104,10,73,4,"useEffect"],[104,16,73,13],[104,17,73,13,"useEffect"],[104,26,73,13],[104,28,73,14],[104,34,73,20],[105,8,74,6],[105,14,74,12,"listener"],[105,22,74,20],[105,25,74,23,"mmkv"],[105,29,74,27],[105,30,74,28,"addOnValueChangedListener"],[105,55,74,53],[105,56,74,54,"changedKey"],[105,66,74,64],[105,70,74,68],[106,10,75,8],[106,14,75,12,"changedKey"],[106,24,75,22],[106,29,75,27,"key"],[106,32,75,30],[106,34,75,32],[107,12,76,10,"setBump"],[107,19,76,17],[107,20,76,18,"b"],[107,21,76,19],[107,25,76,23,"b"],[107,26,76,24],[107,29,76,27],[107,30,76,28],[107,31,76,29],[108,10,77,8],[109,8,78,6],[109,9,78,7],[109,10,78,8],[110,8,79,6],[110,15,79,13],[110,21,79,19,"listener"],[110,29,79,27],[110,30,79,28,"remove"],[110,36,79,34],[110,37,79,35],[110,38,79,36],[111,6,80,4],[111,7,80,5],[111,9,80,7],[111,10,80,8,"key"],[111,13,80,11],[111,15,80,13,"mmkv"],[111,19,80,17],[111,20,80,18],[111,21,80,19],[112,6,81,4],[112,13,81,11],[112,14,81,12,"value"],[112,19,81,17],[112,21,81,19,"set"],[112,24,81,22],[112,25,81,23],[113,4,82,2],[113,5,82,3],[114,2,83,0],[116,2,85,0],[117,0,86,0],[118,0,87,0],[119,0,88,0],[120,0,89,0],[121,0,90,0],[122,0,91,0],[123,0,92,0],[124,0,93,0],[125,0,94,0],[126,2,95,7],[126,8,95,13,"useMMKVString"],[126,21,95,26],[126,24,95,29,"createMMKVHook"],[126,38,95,43],[126,39,95,44],[126,40,95,45,"instance"],[126,48,95,53],[126,50,95,55,"key"],[126,53,95,58],[126,58,95,63,"instance"],[126,66,95,71],[126,67,95,72,"getString"],[126,76,95,81],[126,77,95,82,"key"],[126,80,95,85],[126,81,95,86],[126,82,95,87],[128,2,97,0],[129,0,98,0],[130,0,99,0],[131,0,100,0],[132,0,101,0],[133,0,102,0],[134,0,103,0],[135,0,104,0],[136,0,105,0],[137,0,106,0],[138,2,107,7],[138,8,107,13,"useMMKVNumber"],[138,21,107,26],[138,24,107,29,"createMMKVHook"],[138,38,107,43],[138,39,107,44],[138,40,107,45,"instance"],[138,48,107,53],[138,50,107,55,"key"],[138,53,107,58],[138,58,107,63,"instance"],[138,66,107,71],[138,67,107,72,"getNumber"],[138,76,107,81],[138,77,107,82,"key"],[138,80,107,85],[138,81,107,86],[138,82,107,87],[139,2,108,0],[140,0,109,0],[141,0,110,0],[142,0,111,0],[143,0,112,0],[144,0,113,0],[145,0,114,0],[146,0,115,0],[147,0,116,0],[148,0,117,0],[149,2,118,7],[149,8,118,13,"useMMKVBoolean"],[149,22,118,27],[149,25,118,30,"createMMKVHook"],[149,39,118,44],[149,40,118,45],[149,41,118,46,"instance"],[149,49,118,54],[149,51,118,56,"key"],[149,54,118,59],[149,59,118,64,"instance"],[149,67,118,72],[149,68,118,73,"getBoolean"],[149,78,118,83],[149,79,118,84,"key"],[149,82,118,87],[149,83,118,88],[149,84,118,89],[150,2,119,0],[151,0,120,0],[152,0,121,0],[153,0,122,0],[154,0,123,0],[155,0,124,0],[156,0,125,0],[157,0,126,0],[158,0,127,0],[159,0,128,0],[160,2,129,7],[160,8,129,13,"useMMKVBuffer"],[160,21,129,26],[160,24,129,29,"createMMKVHook"],[160,38,129,43],[160,39,129,44],[160,40,129,45,"instance"],[160,48,129,53],[160,50,129,55,"key"],[160,53,129,58],[160,58,129,63,"instance"],[160,66,129,71],[160,67,129,72,"getBuffer"],[160,76,129,81],[160,77,129,82,"key"],[160,80,129,85],[160,81,129,86],[160,82,129,87],[161,2,130,0],[162,0,131,0],[163,0,132,0],[164,0,133,0],[165,0,134,0],[166,0,135,0],[167,0,136,0],[168,0,137,0],[169,0,138,0],[170,0,139,0],[171,0,140,0],[172,0,141,0],[173,2,142,7],[173,11,142,16,"useMMKVObject"],[173,24,142,29,"useMMKVObject"],[173,25,142,30,"key"],[173,28,142,33],[173,30,142,35,"instance"],[173,38,142,43],[173,40,142,45],[174,4,143,2],[174,10,143,8],[174,11,143,9,"json"],[174,15,143,13],[174,17,143,15,"setJson"],[174,24,143,22],[174,25,143,23],[174,28,143,26,"useMMKVString"],[174,41,143,39],[174,42,143,40,"key"],[174,45,143,43],[174,47,143,45,"instance"],[174,55,143,53],[174,56,143,54],[175,4,144,2],[175,10,144,8,"value"],[175,15,144,13],[175,18,144,16],[175,22,144,16,"useMemo"],[175,28,144,23],[175,29,144,23,"useMemo"],[175,36,144,23],[175,38,144,24],[175,44,144,30],[176,6,145,4],[176,10,145,8,"json"],[176,14,145,12],[176,18,145,16],[176,22,145,20],[176,24,145,22],[176,31,145,29,"undefined"],[176,40,145,38],[177,6,146,4],[177,13,146,11,"JSON"],[177,17,146,15],[177,18,146,16,"parse"],[177,23,146,21],[177,24,146,22,"json"],[177,28,146,26],[177,29,146,27],[178,4,147,2],[178,5,147,3],[178,7,147,5],[178,8,147,6,"json"],[178,12,147,10],[178,13,147,11],[178,14,147,12],[179,4,148,2],[179,10,148,8,"setValue"],[179,18,148,16],[179,21,148,19],[179,25,148,19,"useCallback"],[179,31,148,30],[179,32,148,30,"useCallback"],[179,43,148,30],[179,45,148,31,"v"],[179,46,148,32],[179,50,148,36],[180,6,149,4],[180,10,149,8,"v"],[180,11,149,9],[180,23,149,21,"Function"],[180,31,149,29],[180,33,149,31],[181,8,150,6,"setJson"],[181,15,150,13],[181,16,150,14,"currentJson"],[181,27,150,25],[181,31,150,29],[182,10,151,8],[182,16,151,14,"currentValue"],[182,28,151,26],[182,31,151,29,"currentJson"],[182,42,151,40],[182,46,151,44],[182,50,151,48],[182,53,151,51,"JSON"],[182,57,151,55],[182,58,151,56,"parse"],[182,63,151,61],[182,64,151,62,"currentJson"],[182,75,151,73],[182,76,151,74],[182,79,151,77,"undefined"],[182,88,151,86],[183,10,152,8],[183,16,152,14,"newValue"],[183,24,152,22],[183,27,152,25,"v"],[183,28,152,26],[183,29,152,27,"currentValue"],[183,41,152,39],[183,42,152,40],[184,10,153,8],[185,10,154,8],[185,17,154,15,"newValue"],[185,25,154,23],[185,29,154,27],[185,33,154,31],[185,36,154,34,"JSON"],[185,40,154,38],[185,41,154,39,"stringify"],[185,50,154,48],[185,51,154,49,"newValue"],[185,59,154,57],[185,60,154,58],[185,63,154,61,"undefined"],[185,72,154,70],[186,8,155,6],[186,9,155,7],[186,10,155,8],[187,6,156,4],[187,7,156,5],[187,13,156,11],[188,8,157,6],[189,8,158,6],[189,14,158,12,"newValue"],[189,22,158,20],[189,25,158,23,"v"],[189,26,158,24],[189,30,158,28],[189,34,158,32],[189,37,158,35,"JSON"],[189,41,158,39],[189,42,158,40,"stringify"],[189,51,158,49],[189,52,158,50,"v"],[189,53,158,51],[189,54,158,52],[189,57,158,55,"undefined"],[189,66,158,64],[190,8,159,6,"setJson"],[190,15,159,13],[190,16,159,14,"newValue"],[190,24,159,22],[190,25,159,23],[191,6,160,4],[192,4,161,2],[192,5,161,3],[192,7,161,5],[192,8,161,6,"setJson"],[192,15,161,13],[192,16,161,14],[192,17,161,15],[193,4,162,2],[193,11,162,9],[193,12,162,10,"value"],[193,17,162,15],[193,19,162,17,"setValue"],[193,27,162,25],[193,28,162,26],[194,2,163,0],[196,2,165,0],[197,0,166,0],[198,0,167,0],[199,0,168,0],[200,0,169,0],[201,0,170,0],[202,0,171,0],[203,0,172,0],[204,0,173,0],[205,0,174,0],[206,0,175,0],[207,0,176,0],[208,0,177,0],[209,2,178,7],[209,11,178,16,"useMMKVListener"],[209,26,178,31,"useMMKVListener"],[209,27,178,32,"valueChangedListener"],[209,47,178,52],[209,49,178,54,"instance"],[209,57,178,62],[209,59,178,64],[210,4,179,2],[210,10,179,8,"ref"],[210,13,179,11],[210,16,179,14],[210,20,179,14,"useRef"],[210,26,179,20],[210,27,179,20,"useRef"],[210,33,179,20],[210,35,179,21,"valueChangedListener"],[210,55,179,41],[210,56,179,42],[211,4,180,2,"ref"],[211,7,180,5],[211,8,180,6,"current"],[211,15,180,13],[211,18,180,16,"valueChangedListener"],[211,38,180,36],[212,4,181,2],[212,10,181,8,"mmkv"],[212,14,181,12],[212,17,181,15,"instance"],[212,25,181,23],[212,29,181,27,"getDefaultInstance"],[212,47,181,45],[212,48,181,46],[212,49,181,47],[213,4,182,2],[213,8,182,2,"useEffect"],[213,14,182,11],[213,15,182,11,"useEffect"],[213,24,182,11],[213,26,182,12],[213,32,182,18],[214,6,183,4],[214,12,183,10,"listener"],[214,20,183,18],[214,23,183,21,"mmkv"],[214,27,183,25],[214,28,183,26,"addOnValueChangedListener"],[214,53,183,51],[214,54,183,52,"changedKey"],[214,64,183,62],[214,68,183,66],[215,8,184,6,"ref"],[215,11,184,9],[215,12,184,10,"current"],[215,19,184,17],[215,20,184,18,"changedKey"],[215,30,184,28],[215,31,184,29],[216,6,185,4],[216,7,185,5],[216,8,185,6],[217,6,186,4],[217,13,186,11],[217,19,186,17,"listener"],[217,27,186,25],[217,28,186,26,"remove"],[217,34,186,32],[217,35,186,33],[217,36,186,34],[218,4,187,2],[218,5,187,3],[218,7,187,5],[218,8,187,6,"mmkv"],[218,12,187,10],[218,13,187,11],[218,14,187,12],[219,2,188,0],[220,0,188,1],[220,3]],"functionMap":{"names":["<global>","isConfigurationEqual","getDefaultInstance","useMMKV","createMMKVHook","<anonymous>","useMemo$argument_0","set","useEffect$argument_0","mmkv.addOnValueChangedListener$argument_0","setBump$argument_0","createMMKVHook$argument_0","useMMKVObject","setValue","setJson$argument_0","useMMKVListener"],"mappings":"AAA;ACI;CDG;AEE;CFK;OGW;CHS;AIC;SCC;0BCG;KDM;4BEG;KFqB;cGG;sDCC;kBCE,UD;ODE;aHC,uBG;KHC;GDE;CJC;4CWY,0CX;4CWY,0CX;6CWW,2CX;4CWW,0CX;OYa;wBNE;GMG;+BCC;cCE;ODK;GDM;CZE;Oee;YPI;oDCC;KDE;WHC,uBG;GOC;CfC"},"hasCjsExports":false},"type":"js/module"}]}