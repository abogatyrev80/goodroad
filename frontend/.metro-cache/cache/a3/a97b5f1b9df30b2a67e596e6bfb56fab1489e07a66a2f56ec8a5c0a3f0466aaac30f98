{"dependencies":[{"name":"./paramUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":72,"index":72}}],"key":"tb4oH+tQUIXtH3axmDsviTFXpzk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"SQLiteStatement\", {\n    enumerable: true,\n    get: function () {\n      return SQLiteStatement;\n    }\n  });\n  var _paramUtils = require(_dependencyMap[0], \"./paramUtils\");\n  /**\n   * A prepared statement returned by [`SQLiteDatabase.prepareAsync()`](#prepareasyncsource) or [`SQLiteDatabase.prepareSync()`](#preparesyncsource) that can be binded with parameters and executed.\n   */\n  class SQLiteStatement {\n    constructor(nativeDatabase, nativeStatement) {\n      this.nativeDatabase = nativeDatabase;\n      this.nativeStatement = nativeStatement;\n    }\n    async executeAsync(...params) {\n      const {\n        lastInsertRowId,\n        changes,\n        firstRowValues\n      } = await this.nativeStatement.runAsync(this.nativeDatabase, ...(0, _paramUtils.normalizeParams)(...params));\n      return createSQLiteExecuteAsyncResult(this.nativeDatabase, this.nativeStatement, firstRowValues, {\n        rawResult: false,\n        lastInsertRowId,\n        changes\n      });\n    }\n    async executeForRawResultAsync(...params) {\n      const {\n        lastInsertRowId,\n        changes,\n        firstRowValues\n      } = await this.nativeStatement.runAsync(this.nativeDatabase, ...(0, _paramUtils.normalizeParams)(...params));\n      return createSQLiteExecuteAsyncResult(this.nativeDatabase, this.nativeStatement, firstRowValues, {\n        rawResult: true,\n        lastInsertRowId,\n        changes\n      });\n    }\n    /**\n     * Get the column names of the prepared statement.\n     */\n    getColumnNamesAsync() {\n      return this.nativeStatement.getColumnNamesAsync();\n    }\n    /**\n     * Finalize the prepared statement. This will call the [`sqlite3_finalize()`](https://www.sqlite.org/c3ref/finalize.html) C function under the hood.\n     *\n     * Attempting to access a finalized statement will result in an error.\n     * > **Note:** While `expo-sqlite` will automatically finalize any orphaned prepared statements upon closing the database, it is considered best practice\n     * > to manually finalize prepared statements as soon as they are no longer needed. This helps to prevent resource leaks.\n     * > You can use the `try...finally` statement to ensure that prepared statements are finalized even if an error occurs.\n     */\n    async finalizeAsync() {\n      await this.nativeStatement.finalizeAsync(this.nativeDatabase);\n    }\n    executeSync(...params) {\n      const {\n        lastInsertRowId,\n        changes,\n        firstRowValues\n      } = this.nativeStatement.runSync(this.nativeDatabase, ...(0, _paramUtils.normalizeParams)(...params));\n      return createSQLiteExecuteSyncResult(this.nativeDatabase, this.nativeStatement, firstRowValues, {\n        rawResult: false,\n        lastInsertRowId,\n        changes\n      });\n    }\n    executeForRawResultSync(...params) {\n      const {\n        lastInsertRowId,\n        changes,\n        firstRowValues\n      } = this.nativeStatement.runSync(this.nativeDatabase, ...(0, _paramUtils.normalizeParams)(...params));\n      return createSQLiteExecuteSyncResult(this.nativeDatabase, this.nativeStatement, firstRowValues, {\n        rawResult: true,\n        lastInsertRowId,\n        changes\n      });\n    }\n    /**\n     * Get the column names of the prepared statement.\n     */\n    getColumnNamesSync() {\n      return this.nativeStatement.getColumnNamesSync();\n    }\n    /**\n     * Finalize the prepared statement. This will call the [`sqlite3_finalize()`](https://www.sqlite.org/c3ref/finalize.html) C function under the hood.\n     *\n     * Attempting to access a finalized statement will result in an error.\n     *\n     * > **Note:** While `expo-sqlite` will automatically finalize any orphaned prepared statements upon closing the database, it is considered best practice\n     * > to manually finalize prepared statements as soon as they are no longer needed. This helps to prevent resource leaks.\n     * > You can use the `try...finally` statement to ensure that prepared statements are finalized even if an error occurs.\n     */\n    finalizeSync() {\n      this.nativeStatement.finalizeSync(this.nativeDatabase);\n    }\n  }\n  /**\n   * Create the `SQLiteExecuteAsyncResult` instance.\n   *\n   * NOTE: Since Hermes does not support the `Symbol.asyncIterator` feature, we have to use an AsyncGenerator to implement the `AsyncIterableIterator` interface.\n   * This is done by `Object.defineProperties` to add the properties to the AsyncGenerator.\n   */\n  async function createSQLiteExecuteAsyncResult(database, statement, firstRowValues, options) {\n    const instance = new SQLiteExecuteAsyncResultImpl(database, statement, firstRowValues, options);\n    const generator = instance.generatorAsync();\n    Object.defineProperties(generator, {\n      lastInsertRowId: {\n        value: options.lastInsertRowId,\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      changes: {\n        value: options.changes,\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      getFirstAsync: {\n        value: instance.getFirstAsync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      getAllAsync: {\n        value: instance.getAllAsync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      resetAsync: {\n        value: instance.resetAsync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      }\n    });\n    return generator;\n  }\n  /**\n   * Create the `SQLiteExecuteSyncResult` instance.\n   */\n  function createSQLiteExecuteSyncResult(database, statement, firstRowValues, options) {\n    const instance = new SQLiteExecuteSyncResultImpl(database, statement, firstRowValues, options);\n    const generator = instance.generatorSync();\n    Object.defineProperties(generator, {\n      lastInsertRowId: {\n        value: options.lastInsertRowId,\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      changes: {\n        value: options.changes,\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      getFirstSync: {\n        value: instance.getFirstSync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      getAllSync: {\n        value: instance.getAllSync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      },\n      resetSync: {\n        value: instance.resetSync.bind(instance),\n        enumerable: true,\n        writable: false,\n        configurable: true\n      }\n    });\n    return generator;\n  }\n  class SQLiteExecuteAsyncResultImpl {\n    columnNames = null;\n    isStepCalled = false;\n    constructor(database, statement, firstRowValues, options) {\n      this.database = database;\n      this.statement = statement;\n      this.firstRowValues = firstRowValues;\n      this.options = options;\n    }\n    async getFirstAsync() {\n      if (this.isStepCalled) {\n        throw new Error('The SQLite cursor has been shifted and is unable to retrieve the first row without being reset. Invoke `resetAsync()` to reset the cursor first if you want to retrieve the first row.');\n      }\n      this.isStepCalled = true;\n      const columnNames = await this.getColumnNamesAsync();\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues != null) {\n        return composeRowIfNeeded(this.options.rawResult, columnNames, firstRowValues);\n      }\n      const firstRow = await this.statement.stepAsync(this.database);\n      return firstRow != null ? composeRowIfNeeded(this.options.rawResult, columnNames, firstRow) : null;\n    }\n    async getAllAsync() {\n      if (this.isStepCalled) {\n        throw new Error('The SQLite cursor has been shifted and is unable to retrieve all rows without being reset. Invoke `resetAsync()` to reset the cursor first if you want to retrieve all rows.');\n      }\n      this.isStepCalled = true;\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues == null) {\n        // If the first row is empty, this SQL query may be a write operation. We should not call `statement.getAllAsync()` to write again.\n        return [];\n      }\n      const columnNames = await this.getColumnNamesAsync();\n      const allRows = await this.statement.getAllAsync(this.database);\n      if (firstRowValues != null && firstRowValues.length > 0) {\n        return composeRowsIfNeeded(this.options.rawResult, columnNames, [firstRowValues, ...allRows]);\n      }\n      return composeRowsIfNeeded(this.options.rawResult, columnNames, allRows);\n    }\n    async *generatorAsync() {\n      this.isStepCalled = true;\n      const columnNames = await this.getColumnNamesAsync();\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues != null) {\n        yield composeRowIfNeeded(this.options.rawResult, columnNames, firstRowValues);\n      }\n      let result;\n      do {\n        result = await this.statement.stepAsync(this.database);\n        if (result != null) {\n          yield composeRowIfNeeded(this.options.rawResult, columnNames, result);\n        }\n      } while (result != null);\n    }\n    resetAsync() {\n      const result = this.statement.resetAsync(this.database);\n      this.isStepCalled = false;\n      return result;\n    }\n    popFirstRowValues() {\n      if (this.firstRowValues != null) {\n        const firstRowValues = this.firstRowValues;\n        this.firstRowValues = null;\n        return firstRowValues.length > 0 ? firstRowValues : null;\n      }\n      return null;\n    }\n    async getColumnNamesAsync() {\n      if (this.columnNames == null) {\n        this.columnNames = await this.statement.getColumnNamesAsync();\n      }\n      return this.columnNames;\n    }\n  }\n  class SQLiteExecuteSyncResultImpl {\n    columnNames = null;\n    isStepCalled = false;\n    constructor(database, statement, firstRowValues, options) {\n      this.database = database;\n      this.statement = statement;\n      this.firstRowValues = firstRowValues;\n      this.options = options;\n    }\n    getFirstSync() {\n      if (this.isStepCalled) {\n        throw new Error('The SQLite cursor has been shifted and is unable to retrieve the first row without being reset. Invoke `resetSync()` to reset the cursor first if you want to retrieve the first row.');\n      }\n      const columnNames = this.getColumnNamesSync();\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues != null) {\n        return composeRowIfNeeded(this.options.rawResult, columnNames, firstRowValues);\n      }\n      const firstRow = this.statement.stepSync(this.database);\n      return firstRow != null ? composeRowIfNeeded(this.options.rawResult, columnNames, firstRow) : null;\n    }\n    getAllSync() {\n      if (this.isStepCalled) {\n        throw new Error('The SQLite cursor has been shifted and is unable to retrieve all rows without being reset. Invoke `resetSync()` to reset the cursor first if you want to retrieve all rows.');\n      }\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues == null) {\n        // If the first row is empty, this SQL query may be a write operation. We should not call `statement.getAllAsync()` to write again.\n        return [];\n      }\n      const columnNames = this.getColumnNamesSync();\n      const allRows = this.statement.getAllSync(this.database);\n      if (firstRowValues != null && firstRowValues.length > 0) {\n        return composeRowsIfNeeded(this.options.rawResult, columnNames, [firstRowValues, ...allRows]);\n      }\n      return composeRowsIfNeeded(this.options.rawResult, columnNames, allRows);\n    }\n    *generatorSync() {\n      const columnNames = this.getColumnNamesSync();\n      const firstRowValues = this.popFirstRowValues();\n      if (firstRowValues != null) {\n        yield composeRowIfNeeded(this.options.rawResult, columnNames, firstRowValues);\n      }\n      let result;\n      do {\n        result = this.statement.stepSync(this.database);\n        if (result != null) {\n          yield composeRowIfNeeded(this.options.rawResult, columnNames, result);\n        }\n      } while (result != null);\n    }\n    resetSync() {\n      const result = this.statement.resetSync(this.database);\n      this.isStepCalled = false;\n      return result;\n    }\n    popFirstRowValues() {\n      if (this.firstRowValues != null) {\n        const firstRowValues = this.firstRowValues;\n        this.firstRowValues = null;\n        return firstRowValues.length > 0 ? firstRowValues : null;\n      }\n      return null;\n    }\n    getColumnNamesSync() {\n      if (this.columnNames == null) {\n        this.columnNames = this.statement.getColumnNamesSync();\n      }\n      return this.columnNames;\n    }\n  }\n  function composeRowIfNeeded(rawResult, columnNames, columnValues) {\n    return rawResult ? columnValues // T would be a ValuesOf<> from caller\n    : (0, _paramUtils.composeRow)(columnNames, columnValues);\n  }\n  function composeRowsIfNeeded(rawResult, columnNames, columnValuesList) {\n    return rawResult ? columnValuesList // T[] would be a ValuesOf<>[] from caller\n    : (0, _paramUtils.composeRows)(columnNames, columnValuesList);\n  }\n  //#endregion\n});","lineCount":343,"map":[[7,2,5,0,"Object"],[7,8,5,0],[7,9,5,0,"defineProperty"],[7,23,5,0],[7,24,5,0,"exports"],[7,31,5,0],[8,4,5,0,"enumerable"],[8,14,5,0],[9,4,5,0,"get"],[9,7,5,0],[9,18,5,0,"get"],[9,19,5,0],[10,6,5,0],[10,13,5,0,"SQLiteStatement"],[10,28,5,0],[11,4,5,0],[12,2,5,0],[13,2,1,0],[13,6,1,0,"_paramUtils"],[13,17,1,0],[13,20,1,0,"require"],[13,27,1,0],[13,28,1,0,"_dependencyMap"],[13,42,1,0],[14,2,2,0],[15,0,3,0],[16,0,4,0],[17,2,5,7],[17,8,5,13,"SQLiteStatement"],[17,23,5,28],[17,24,5,29],[18,4,8,4,"constructor"],[18,15,8,15,"constructor"],[18,16,8,16,"nativeDatabase"],[18,30,8,30],[18,32,8,32,"nativeStatement"],[18,47,8,47],[18,49,8,49],[19,6,9,8],[19,10,9,12],[19,11,9,13,"nativeDatabase"],[19,25,9,27],[19,28,9,30,"nativeDatabase"],[19,42,9,44],[20,6,10,8],[20,10,10,12],[20,11,10,13,"nativeStatement"],[20,26,10,28],[20,29,10,31,"nativeStatement"],[20,44,10,46],[21,4,11,4],[22,4,12,4],[22,10,12,10,"executeAsync"],[22,22,12,22,"executeAsync"],[22,23,12,23],[22,26,12,26,"params"],[22,32,12,32],[22,34,12,34],[23,6,13,8],[23,12,13,14],[24,8,13,16,"lastInsertRowId"],[24,23,13,31],[25,8,13,33,"changes"],[25,15,13,40],[26,8,13,42,"firstRowValues"],[27,6,13,57],[27,7,13,58],[27,10,13,61],[27,16,13,67],[27,20,13,71],[27,21,13,72,"nativeStatement"],[27,36,13,87],[27,37,13,88,"runAsync"],[27,45,13,96],[27,46,13,97],[27,50,13,101],[27,51,13,102,"nativeDatabase"],[27,65,13,116],[27,67,13,118],[27,70,13,121],[27,74,13,121,"normalizeParams"],[27,85,13,136],[27,86,13,136,"normalizeParams"],[27,101,13,136],[27,103,13,137],[27,106,13,140,"params"],[27,112,13,146],[27,113,13,147],[27,114,13,148],[28,6,14,8],[28,13,14,15,"createSQLiteExecuteAsyncResult"],[28,43,14,45],[28,44,14,46],[28,48,14,50],[28,49,14,51,"nativeDatabase"],[28,63,14,65],[28,65,14,67],[28,69,14,71],[28,70,14,72,"nativeStatement"],[28,85,14,87],[28,87,14,89,"firstRowValues"],[28,101,14,103],[28,103,14,105],[29,8,15,12,"rawResult"],[29,17,15,21],[29,19,15,23],[29,24,15,28],[30,8,16,12,"lastInsertRowId"],[30,23,16,27],[31,8,17,12,"changes"],[32,6,18,8],[32,7,18,9],[32,8,18,10],[33,4,19,4],[34,4,20,4],[34,10,20,10,"executeForRawResultAsync"],[34,34,20,34,"executeForRawResultAsync"],[34,35,20,35],[34,38,20,38,"params"],[34,44,20,44],[34,46,20,46],[35,6,21,8],[35,12,21,14],[36,8,21,16,"lastInsertRowId"],[36,23,21,31],[37,8,21,33,"changes"],[37,15,21,40],[38,8,21,42,"firstRowValues"],[39,6,21,57],[39,7,21,58],[39,10,21,61],[39,16,21,67],[39,20,21,71],[39,21,21,72,"nativeStatement"],[39,36,21,87],[39,37,21,88,"runAsync"],[39,45,21,96],[39,46,21,97],[39,50,21,101],[39,51,21,102,"nativeDatabase"],[39,65,21,116],[39,67,21,118],[39,70,21,121],[39,74,21,121,"normalizeParams"],[39,85,21,136],[39,86,21,136,"normalizeParams"],[39,101,21,136],[39,103,21,137],[39,106,21,140,"params"],[39,112,21,146],[39,113,21,147],[39,114,21,148],[40,6,22,8],[40,13,22,15,"createSQLiteExecuteAsyncResult"],[40,43,22,45],[40,44,22,46],[40,48,22,50],[40,49,22,51,"nativeDatabase"],[40,63,22,65],[40,65,22,67],[40,69,22,71],[40,70,22,72,"nativeStatement"],[40,85,22,87],[40,87,22,89,"firstRowValues"],[40,101,22,103],[40,103,22,105],[41,8,23,12,"rawResult"],[41,17,23,21],[41,19,23,23],[41,23,23,27],[42,8,24,12,"lastInsertRowId"],[42,23,24,27],[43,8,25,12,"changes"],[44,6,26,8],[44,7,26,9],[44,8,26,10],[45,4,27,4],[46,4,28,4],[47,0,29,0],[48,0,30,0],[49,4,31,4,"getColumnNamesAsync"],[49,23,31,23,"getColumnNamesAsync"],[49,24,31,23],[49,26,31,26],[50,6,32,8],[50,13,32,15],[50,17,32,19],[50,18,32,20,"nativeStatement"],[50,33,32,35],[50,34,32,36,"getColumnNamesAsync"],[50,53,32,55],[50,54,32,56],[50,55,32,57],[51,4,33,4],[52,4,34,4],[53,0,35,0],[54,0,36,0],[55,0,37,0],[56,0,38,0],[57,0,39,0],[58,0,40,0],[59,0,41,0],[60,4,42,4],[60,10,42,10,"finalizeAsync"],[60,23,42,23,"finalizeAsync"],[60,24,42,23],[60,26,42,26],[61,6,43,8],[61,12,43,14],[61,16,43,18],[61,17,43,19,"nativeStatement"],[61,32,43,34],[61,33,43,35,"finalizeAsync"],[61,46,43,48],[61,47,43,49],[61,51,43,53],[61,52,43,54,"nativeDatabase"],[61,66,43,68],[61,67,43,69],[62,4,44,4],[63,4,45,4,"executeSync"],[63,15,45,15,"executeSync"],[63,16,45,16],[63,19,45,19,"params"],[63,25,45,25],[63,27,45,27],[64,6,46,8],[64,12,46,14],[65,8,46,16,"lastInsertRowId"],[65,23,46,31],[66,8,46,33,"changes"],[66,15,46,40],[67,8,46,42,"firstRowValues"],[68,6,46,57],[68,7,46,58],[68,10,46,61],[68,14,46,65],[68,15,46,66,"nativeStatement"],[68,30,46,81],[68,31,46,82,"runSync"],[68,38,46,89],[68,39,46,90],[68,43,46,94],[68,44,46,95,"nativeDatabase"],[68,58,46,109],[68,60,46,111],[68,63,46,114],[68,67,46,114,"normalizeParams"],[68,78,46,129],[68,79,46,129,"normalizeParams"],[68,94,46,129],[68,96,46,130],[68,99,46,133,"params"],[68,105,46,139],[68,106,46,140],[68,107,46,141],[69,6,47,8],[69,13,47,15,"createSQLiteExecuteSyncResult"],[69,42,47,44],[69,43,47,45],[69,47,47,49],[69,48,47,50,"nativeDatabase"],[69,62,47,64],[69,64,47,66],[69,68,47,70],[69,69,47,71,"nativeStatement"],[69,84,47,86],[69,86,47,88,"firstRowValues"],[69,100,47,102],[69,102,47,104],[70,8,48,12,"rawResult"],[70,17,48,21],[70,19,48,23],[70,24,48,28],[71,8,49,12,"lastInsertRowId"],[71,23,49,27],[72,8,50,12,"changes"],[73,6,51,8],[73,7,51,9],[73,8,51,10],[74,4,52,4],[75,4,53,4,"executeForRawResultSync"],[75,27,53,27,"executeForRawResultSync"],[75,28,53,28],[75,31,53,31,"params"],[75,37,53,37],[75,39,53,39],[76,6,54,8],[76,12,54,14],[77,8,54,16,"lastInsertRowId"],[77,23,54,31],[78,8,54,33,"changes"],[78,15,54,40],[79,8,54,42,"firstRowValues"],[80,6,54,57],[80,7,54,58],[80,10,54,61],[80,14,54,65],[80,15,54,66,"nativeStatement"],[80,30,54,81],[80,31,54,82,"runSync"],[80,38,54,89],[80,39,54,90],[80,43,54,94],[80,44,54,95,"nativeDatabase"],[80,58,54,109],[80,60,54,111],[80,63,54,114],[80,67,54,114,"normalizeParams"],[80,78,54,129],[80,79,54,129,"normalizeParams"],[80,94,54,129],[80,96,54,130],[80,99,54,133,"params"],[80,105,54,139],[80,106,54,140],[80,107,54,141],[81,6,55,8],[81,13,55,15,"createSQLiteExecuteSyncResult"],[81,42,55,44],[81,43,55,45],[81,47,55,49],[81,48,55,50,"nativeDatabase"],[81,62,55,64],[81,64,55,66],[81,68,55,70],[81,69,55,71,"nativeStatement"],[81,84,55,86],[81,86,55,88,"firstRowValues"],[81,100,55,102],[81,102,55,104],[82,8,56,12,"rawResult"],[82,17,56,21],[82,19,56,23],[82,23,56,27],[83,8,57,12,"lastInsertRowId"],[83,23,57,27],[84,8,58,12,"changes"],[85,6,59,8],[85,7,59,9],[85,8,59,10],[86,4,60,4],[87,4,61,4],[88,0,62,0],[89,0,63,0],[90,4,64,4,"getColumnNamesSync"],[90,22,64,22,"getColumnNamesSync"],[90,23,64,22],[90,25,64,25],[91,6,65,8],[91,13,65,15],[91,17,65,19],[91,18,65,20,"nativeStatement"],[91,33,65,35],[91,34,65,36,"getColumnNamesSync"],[91,52,65,54],[91,53,65,55],[91,54,65,56],[92,4,66,4],[93,4,67,4],[94,0,68,0],[95,0,69,0],[96,0,70,0],[97,0,71,0],[98,0,72,0],[99,0,73,0],[100,0,74,0],[101,0,75,0],[102,4,76,4,"finalizeSync"],[102,16,76,16,"finalizeSync"],[102,17,76,16],[102,19,76,19],[103,6,77,8],[103,10,77,12],[103,11,77,13,"nativeStatement"],[103,26,77,28],[103,27,77,29,"finalizeSync"],[103,39,77,41],[103,40,77,42],[103,44,77,46],[103,45,77,47,"nativeDatabase"],[103,59,77,61],[103,60,77,62],[104,4,78,4],[105,2,79,0],[106,2,80,0],[107,0,81,0],[108,0,82,0],[109,0,83,0],[110,0,84,0],[111,0,85,0],[112,2,86,0],[112,17,86,15,"createSQLiteExecuteAsyncResult"],[112,47,86,45,"createSQLiteExecuteAsyncResult"],[112,48,86,46,"database"],[112,56,86,54],[112,58,86,56,"statement"],[112,67,86,65],[112,69,86,67,"firstRowValues"],[112,83,86,81],[112,85,86,83,"options"],[112,92,86,90],[112,94,86,92],[113,4,87,4],[113,10,87,10,"instance"],[113,18,87,18],[113,21,87,21],[113,25,87,25,"SQLiteExecuteAsyncResultImpl"],[113,53,87,53],[113,54,87,54,"database"],[113,62,87,62],[113,64,87,64,"statement"],[113,73,87,73],[113,75,87,75,"firstRowValues"],[113,89,87,89],[113,91,87,91,"options"],[113,98,87,98],[113,99,87,99],[114,4,88,4],[114,10,88,10,"generator"],[114,19,88,19],[114,22,88,22,"instance"],[114,30,88,30],[114,31,88,31,"generatorAsync"],[114,45,88,45],[114,46,88,46],[114,47,88,47],[115,4,89,4,"Object"],[115,10,89,10],[115,11,89,11,"defineProperties"],[115,27,89,27],[115,28,89,28,"generator"],[115,37,89,37],[115,39,89,39],[116,6,90,8,"lastInsertRowId"],[116,21,90,23],[116,23,90,25],[117,8,91,12,"value"],[117,13,91,17],[117,15,91,19,"options"],[117,22,91,26],[117,23,91,27,"lastInsertRowId"],[117,38,91,42],[118,8,92,12,"enumerable"],[118,18,92,22],[118,20,92,24],[118,24,92,28],[119,8,93,12,"writable"],[119,16,93,20],[119,18,93,22],[119,23,93,27],[120,8,94,12,"configurable"],[120,20,94,24],[120,22,94,26],[121,6,95,8],[121,7,95,9],[122,6,96,8,"changes"],[122,13,96,15],[122,15,96,17],[123,8,96,19,"value"],[123,13,96,24],[123,15,96,26,"options"],[123,22,96,33],[123,23,96,34,"changes"],[123,30,96,41],[124,8,96,43,"enumerable"],[124,18,96,53],[124,20,96,55],[124,24,96,59],[125,8,96,61,"writable"],[125,16,96,69],[125,18,96,71],[125,23,96,76],[126,8,96,78,"configurable"],[126,20,96,90],[126,22,96,92],[127,6,96,97],[127,7,96,98],[128,6,97,8,"getFirstAsync"],[128,19,97,21],[128,21,97,23],[129,8,98,12,"value"],[129,13,98,17],[129,15,98,19,"instance"],[129,23,98,27],[129,24,98,28,"getFirstAsync"],[129,37,98,41],[129,38,98,42,"bind"],[129,42,98,46],[129,43,98,47,"instance"],[129,51,98,55],[129,52,98,56],[130,8,99,12,"enumerable"],[130,18,99,22],[130,20,99,24],[130,24,99,28],[131,8,100,12,"writable"],[131,16,100,20],[131,18,100,22],[131,23,100,27],[132,8,101,12,"configurable"],[132,20,101,24],[132,22,101,26],[133,6,102,8],[133,7,102,9],[134,6,103,8,"getAllAsync"],[134,17,103,19],[134,19,103,21],[135,8,104,12,"value"],[135,13,104,17],[135,15,104,19,"instance"],[135,23,104,27],[135,24,104,28,"getAllAsync"],[135,35,104,39],[135,36,104,40,"bind"],[135,40,104,44],[135,41,104,45,"instance"],[135,49,104,53],[135,50,104,54],[136,8,105,12,"enumerable"],[136,18,105,22],[136,20,105,24],[136,24,105,28],[137,8,106,12,"writable"],[137,16,106,20],[137,18,106,22],[137,23,106,27],[138,8,107,12,"configurable"],[138,20,107,24],[138,22,107,26],[139,6,108,8],[139,7,108,9],[140,6,109,8,"resetAsync"],[140,16,109,18],[140,18,109,20],[141,8,110,12,"value"],[141,13,110,17],[141,15,110,19,"instance"],[141,23,110,27],[141,24,110,28,"resetAsync"],[141,34,110,38],[141,35,110,39,"bind"],[141,39,110,43],[141,40,110,44,"instance"],[141,48,110,52],[141,49,110,53],[142,8,111,12,"enumerable"],[142,18,111,22],[142,20,111,24],[142,24,111,28],[143,8,112,12,"writable"],[143,16,112,20],[143,18,112,22],[143,23,112,27],[144,8,113,12,"configurable"],[144,20,113,24],[144,22,113,26],[145,6,114,8],[146,4,115,4],[146,5,115,5],[146,6,115,6],[147,4,116,4],[147,11,116,11,"generator"],[147,20,116,20],[148,2,117,0],[149,2,118,0],[150,0,119,0],[151,0,120,0],[152,2,121,0],[152,11,121,9,"createSQLiteExecuteSyncResult"],[152,40,121,38,"createSQLiteExecuteSyncResult"],[152,41,121,39,"database"],[152,49,121,47],[152,51,121,49,"statement"],[152,60,121,58],[152,62,121,60,"firstRowValues"],[152,76,121,74],[152,78,121,76,"options"],[152,85,121,83],[152,87,121,85],[153,4,122,4],[153,10,122,10,"instance"],[153,18,122,18],[153,21,122,21],[153,25,122,25,"SQLiteExecuteSyncResultImpl"],[153,52,122,52],[153,53,122,53,"database"],[153,61,122,61],[153,63,122,63,"statement"],[153,72,122,72],[153,74,122,74,"firstRowValues"],[153,88,122,88],[153,90,122,90,"options"],[153,97,122,97],[153,98,122,98],[154,4,123,4],[154,10,123,10,"generator"],[154,19,123,19],[154,22,123,22,"instance"],[154,30,123,30],[154,31,123,31,"generatorSync"],[154,44,123,44],[154,45,123,45],[154,46,123,46],[155,4,124,4,"Object"],[155,10,124,10],[155,11,124,11,"defineProperties"],[155,27,124,27],[155,28,124,28,"generator"],[155,37,124,37],[155,39,124,39],[156,6,125,8,"lastInsertRowId"],[156,21,125,23],[156,23,125,25],[157,8,126,12,"value"],[157,13,126,17],[157,15,126,19,"options"],[157,22,126,26],[157,23,126,27,"lastInsertRowId"],[157,38,126,42],[158,8,127,12,"enumerable"],[158,18,127,22],[158,20,127,24],[158,24,127,28],[159,8,128,12,"writable"],[159,16,128,20],[159,18,128,22],[159,23,128,27],[160,8,129,12,"configurable"],[160,20,129,24],[160,22,129,26],[161,6,130,8],[161,7,130,9],[162,6,131,8,"changes"],[162,13,131,15],[162,15,131,17],[163,8,131,19,"value"],[163,13,131,24],[163,15,131,26,"options"],[163,22,131,33],[163,23,131,34,"changes"],[163,30,131,41],[164,8,131,43,"enumerable"],[164,18,131,53],[164,20,131,55],[164,24,131,59],[165,8,131,61,"writable"],[165,16,131,69],[165,18,131,71],[165,23,131,76],[166,8,131,78,"configurable"],[166,20,131,90],[166,22,131,92],[167,6,131,97],[167,7,131,98],[168,6,132,8,"getFirstSync"],[168,18,132,20],[168,20,132,22],[169,8,133,12,"value"],[169,13,133,17],[169,15,133,19,"instance"],[169,23,133,27],[169,24,133,28,"getFirstSync"],[169,36,133,40],[169,37,133,41,"bind"],[169,41,133,45],[169,42,133,46,"instance"],[169,50,133,54],[169,51,133,55],[170,8,134,12,"enumerable"],[170,18,134,22],[170,20,134,24],[170,24,134,28],[171,8,135,12,"writable"],[171,16,135,20],[171,18,135,22],[171,23,135,27],[172,8,136,12,"configurable"],[172,20,136,24],[172,22,136,26],[173,6,137,8],[173,7,137,9],[174,6,138,8,"getAllSync"],[174,16,138,18],[174,18,138,20],[175,8,139,12,"value"],[175,13,139,17],[175,15,139,19,"instance"],[175,23,139,27],[175,24,139,28,"getAllSync"],[175,34,139,38],[175,35,139,39,"bind"],[175,39,139,43],[175,40,139,44,"instance"],[175,48,139,52],[175,49,139,53],[176,8,140,12,"enumerable"],[176,18,140,22],[176,20,140,24],[176,24,140,28],[177,8,141,12,"writable"],[177,16,141,20],[177,18,141,22],[177,23,141,27],[178,8,142,12,"configurable"],[178,20,142,24],[178,22,142,26],[179,6,143,8],[179,7,143,9],[180,6,144,8,"resetSync"],[180,15,144,17],[180,17,144,19],[181,8,145,12,"value"],[181,13,145,17],[181,15,145,19,"instance"],[181,23,145,27],[181,24,145,28,"resetSync"],[181,33,145,37],[181,34,145,38,"bind"],[181,38,145,42],[181,39,145,43,"instance"],[181,47,145,51],[181,48,145,52],[182,8,146,12,"enumerable"],[182,18,146,22],[182,20,146,24],[182,24,146,28],[183,8,147,12,"writable"],[183,16,147,20],[183,18,147,22],[183,23,147,27],[184,8,148,12,"configurable"],[184,20,148,24],[184,22,148,26],[185,6,149,8],[186,4,150,4],[186,5,150,5],[186,6,150,6],[187,4,151,4],[187,11,151,11,"generator"],[187,20,151,20],[188,2,152,0],[189,2,153,0],[189,8,153,6,"SQLiteExecuteAsyncResultImpl"],[189,36,153,34],[189,37,153,35],[190,4,158,4,"columnNames"],[190,15,158,15],[190,18,158,18],[190,22,158,22],[191,4,159,4,"isStepCalled"],[191,16,159,16],[191,19,159,19],[191,24,159,24],[192,4,160,4,"constructor"],[192,15,160,15,"constructor"],[192,16,160,16,"database"],[192,24,160,24],[192,26,160,26,"statement"],[192,35,160,35],[192,37,160,37,"firstRowValues"],[192,51,160,51],[192,53,160,53,"options"],[192,60,160,60],[192,62,160,62],[193,6,161,8],[193,10,161,12],[193,11,161,13,"database"],[193,19,161,21],[193,22,161,24,"database"],[193,30,161,32],[194,6,162,8],[194,10,162,12],[194,11,162,13,"statement"],[194,20,162,22],[194,23,162,25,"statement"],[194,32,162,34],[195,6,163,8],[195,10,163,12],[195,11,163,13,"firstRowValues"],[195,25,163,27],[195,28,163,30,"firstRowValues"],[195,42,163,44],[196,6,164,8],[196,10,164,12],[196,11,164,13,"options"],[196,18,164,20],[196,21,164,23,"options"],[196,28,164,30],[197,4,165,4],[198,4,166,4],[198,10,166,10,"getFirstAsync"],[198,23,166,23,"getFirstAsync"],[198,24,166,23],[198,26,166,26],[199,6,167,8],[199,10,167,12],[199,14,167,16],[199,15,167,17,"isStepCalled"],[199,27,167,29],[199,29,167,31],[200,8,168,12],[200,14,168,18],[200,18,168,22,"Error"],[200,23,168,27],[200,24,168,28],[200,208,168,212],[200,209,168,213],[201,6,169,8],[202,6,170,8],[202,10,170,12],[202,11,170,13,"isStepCalled"],[202,23,170,25],[202,26,170,28],[202,30,170,32],[203,6,171,8],[203,12,171,14,"columnNames"],[203,23,171,25],[203,26,171,28],[203,32,171,34],[203,36,171,38],[203,37,171,39,"getColumnNamesAsync"],[203,56,171,58],[203,57,171,59],[203,58,171,60],[204,6,172,8],[204,12,172,14,"firstRowValues"],[204,26,172,28],[204,29,172,31],[204,33,172,35],[204,34,172,36,"popFirstRowValues"],[204,51,172,53],[204,52,172,54],[204,53,172,55],[205,6,173,8],[205,10,173,12,"firstRowValues"],[205,24,173,26],[205,28,173,30],[205,32,173,34],[205,34,173,36],[206,8,174,12],[206,15,174,19,"composeRowIfNeeded"],[206,33,174,37],[206,34,174,38],[206,38,174,42],[206,39,174,43,"options"],[206,46,174,50],[206,47,174,51,"rawResult"],[206,56,174,60],[206,58,174,62,"columnNames"],[206,69,174,73],[206,71,174,75,"firstRowValues"],[206,85,174,89],[206,86,174,90],[207,6,175,8],[208,6,176,8],[208,12,176,14,"firstRow"],[208,20,176,22],[208,23,176,25],[208,29,176,31],[208,33,176,35],[208,34,176,36,"statement"],[208,43,176,45],[208,44,176,46,"stepAsync"],[208,53,176,55],[208,54,176,56],[208,58,176,60],[208,59,176,61,"database"],[208,67,176,69],[208,68,176,70],[209,6,177,8],[209,13,177,15,"firstRow"],[209,21,177,23],[209,25,177,27],[209,29,177,31],[209,32,178,14,"composeRowIfNeeded"],[209,50,178,32],[209,51,178,33],[209,55,178,37],[209,56,178,38,"options"],[209,63,178,45],[209,64,178,46,"rawResult"],[209,73,178,55],[209,75,178,57,"columnNames"],[209,86,178,68],[209,88,178,70,"firstRow"],[209,96,178,78],[209,97,178,79],[209,100,179,14],[209,104,179,18],[210,4,180,4],[211,4,181,4],[211,10,181,10,"getAllAsync"],[211,21,181,21,"getAllAsync"],[211,22,181,21],[211,24,181,24],[212,6,182,8],[212,10,182,12],[212,14,182,16],[212,15,182,17,"isStepCalled"],[212,27,182,29],[212,29,182,31],[213,8,183,12],[213,14,183,18],[213,18,183,22,"Error"],[213,23,183,27],[213,24,183,28],[213,198,183,202],[213,199,183,203],[214,6,184,8],[215,6,185,8],[215,10,185,12],[215,11,185,13,"isStepCalled"],[215,23,185,25],[215,26,185,28],[215,30,185,32],[216,6,186,8],[216,12,186,14,"firstRowValues"],[216,26,186,28],[216,29,186,31],[216,33,186,35],[216,34,186,36,"popFirstRowValues"],[216,51,186,53],[216,52,186,54],[216,53,186,55],[217,6,187,8],[217,10,187,12,"firstRowValues"],[217,24,187,26],[217,28,187,30],[217,32,187,34],[217,34,187,36],[218,8,188,12],[219,8,189,12],[219,15,189,19],[219,17,189,21],[220,6,190,8],[221,6,191,8],[221,12,191,14,"columnNames"],[221,23,191,25],[221,26,191,28],[221,32,191,34],[221,36,191,38],[221,37,191,39,"getColumnNamesAsync"],[221,56,191,58],[221,57,191,59],[221,58,191,60],[222,6,192,8],[222,12,192,14,"allRows"],[222,19,192,21],[222,22,192,24],[222,28,192,30],[222,32,192,34],[222,33,192,35,"statement"],[222,42,192,44],[222,43,192,45,"getAllAsync"],[222,54,192,56],[222,55,192,57],[222,59,192,61],[222,60,192,62,"database"],[222,68,192,70],[222,69,192,71],[223,6,193,8],[223,10,193,12,"firstRowValues"],[223,24,193,26],[223,28,193,30],[223,32,193,34],[223,36,193,38,"firstRowValues"],[223,50,193,52],[223,51,193,53,"length"],[223,57,193,59],[223,60,193,62],[223,61,193,63],[223,63,193,65],[224,8,194,12],[224,15,194,19,"composeRowsIfNeeded"],[224,34,194,38],[224,35,194,39],[224,39,194,43],[224,40,194,44,"options"],[224,47,194,51],[224,48,194,52,"rawResult"],[224,57,194,61],[224,59,194,63,"columnNames"],[224,70,194,74],[224,72,194,76],[224,73,195,16,"firstRowValues"],[224,87,195,30],[224,89,196,16],[224,92,196,19,"allRows"],[224,99,196,26],[224,100,197,13],[224,101,197,14],[225,6,198,8],[226,6,199,8],[226,13,199,15,"composeRowsIfNeeded"],[226,32,199,34],[226,33,199,35],[226,37,199,39],[226,38,199,40,"options"],[226,45,199,47],[226,46,199,48,"rawResult"],[226,55,199,57],[226,57,199,59,"columnNames"],[226,68,199,70],[226,70,199,72,"allRows"],[226,77,199,79],[226,78,199,80],[227,4,200,4],[228,4,201,4],[228,11,201,11,"generatorAsync"],[228,25,201,25,"generatorAsync"],[228,26,201,25],[228,28,201,28],[229,6,202,8],[229,10,202,12],[229,11,202,13,"isStepCalled"],[229,23,202,25],[229,26,202,28],[229,30,202,32],[230,6,203,8],[230,12,203,14,"columnNames"],[230,23,203,25],[230,26,203,28],[230,32,203,34],[230,36,203,38],[230,37,203,39,"getColumnNamesAsync"],[230,56,203,58],[230,57,203,59],[230,58,203,60],[231,6,204,8],[231,12,204,14,"firstRowValues"],[231,26,204,28],[231,29,204,31],[231,33,204,35],[231,34,204,36,"popFirstRowValues"],[231,51,204,53],[231,52,204,54],[231,53,204,55],[232,6,205,8],[232,10,205,12,"firstRowValues"],[232,24,205,26],[232,28,205,30],[232,32,205,34],[232,34,205,36],[233,8,206,12],[233,14,206,18,"composeRowIfNeeded"],[233,32,206,36],[233,33,206,37],[233,37,206,41],[233,38,206,42,"options"],[233,45,206,49],[233,46,206,50,"rawResult"],[233,55,206,59],[233,57,206,61,"columnNames"],[233,68,206,72],[233,70,206,74,"firstRowValues"],[233,84,206,88],[233,85,206,89],[234,6,207,8],[235,6,208,8],[235,10,208,12,"result"],[235,16,208,18],[236,6,209,8],[236,9,209,11],[237,8,210,12,"result"],[237,14,210,18],[237,17,210,21],[237,23,210,27],[237,27,210,31],[237,28,210,32,"statement"],[237,37,210,41],[237,38,210,42,"stepAsync"],[237,47,210,51],[237,48,210,52],[237,52,210,56],[237,53,210,57,"database"],[237,61,210,65],[237,62,210,66],[238,8,211,12],[238,12,211,16,"result"],[238,18,211,22],[238,22,211,26],[238,26,211,30],[238,28,211,32],[239,10,212,16],[239,16,212,22,"composeRowIfNeeded"],[239,34,212,40],[239,35,212,41],[239,39,212,45],[239,40,212,46,"options"],[239,47,212,53],[239,48,212,54,"rawResult"],[239,57,212,63],[239,59,212,65,"columnNames"],[239,70,212,76],[239,72,212,78,"result"],[239,78,212,84],[239,79,212,85],[240,8,213,12],[241,6,214,8],[241,7,214,9],[241,15,214,17,"result"],[241,21,214,23],[241,25,214,27],[241,29,214,31],[242,4,215,4],[243,4,216,4,"resetAsync"],[243,14,216,14,"resetAsync"],[243,15,216,14],[243,17,216,17],[244,6,217,8],[244,12,217,14,"result"],[244,18,217,20],[244,21,217,23],[244,25,217,27],[244,26,217,28,"statement"],[244,35,217,37],[244,36,217,38,"resetAsync"],[244,46,217,48],[244,47,217,49],[244,51,217,53],[244,52,217,54,"database"],[244,60,217,62],[244,61,217,63],[245,6,218,8],[245,10,218,12],[245,11,218,13,"isStepCalled"],[245,23,218,25],[245,26,218,28],[245,31,218,33],[246,6,219,8],[246,13,219,15,"result"],[246,19,219,21],[247,4,220,4],[248,4,221,4,"popFirstRowValues"],[248,21,221,21,"popFirstRowValues"],[248,22,221,21],[248,24,221,24],[249,6,222,8],[249,10,222,12],[249,14,222,16],[249,15,222,17,"firstRowValues"],[249,29,222,31],[249,33,222,35],[249,37,222,39],[249,39,222,41],[250,8,223,12],[250,14,223,18,"firstRowValues"],[250,28,223,32],[250,31,223,35],[250,35,223,39],[250,36,223,40,"firstRowValues"],[250,50,223,54],[251,8,224,12],[251,12,224,16],[251,13,224,17,"firstRowValues"],[251,27,224,31],[251,30,224,34],[251,34,224,38],[252,8,225,12],[252,15,225,19,"firstRowValues"],[252,29,225,33],[252,30,225,34,"length"],[252,36,225,40],[252,39,225,43],[252,40,225,44],[252,43,225,47,"firstRowValues"],[252,57,225,61],[252,60,225,64],[252,64,225,68],[253,6,226,8],[254,6,227,8],[254,13,227,15],[254,17,227,19],[255,4,228,4],[256,4,229,4],[256,10,229,10,"getColumnNamesAsync"],[256,29,229,29,"getColumnNamesAsync"],[256,30,229,29],[256,32,229,32],[257,6,230,8],[257,10,230,12],[257,14,230,16],[257,15,230,17,"columnNames"],[257,26,230,28],[257,30,230,32],[257,34,230,36],[257,36,230,38],[258,8,231,12],[258,12,231,16],[258,13,231,17,"columnNames"],[258,24,231,28],[258,27,231,31],[258,33,231,37],[258,37,231,41],[258,38,231,42,"statement"],[258,47,231,51],[258,48,231,52,"getColumnNamesAsync"],[258,67,231,71],[258,68,231,72],[258,69,231,73],[259,6,232,8],[260,6,233,8],[260,13,233,15],[260,17,233,19],[260,18,233,20,"columnNames"],[260,29,233,31],[261,4,234,4],[262,2,235,0],[263,2,236,0],[263,8,236,6,"SQLiteExecuteSyncResultImpl"],[263,35,236,33],[263,36,236,34],[264,4,241,4,"columnNames"],[264,15,241,15],[264,18,241,18],[264,22,241,22],[265,4,242,4,"isStepCalled"],[265,16,242,16],[265,19,242,19],[265,24,242,24],[266,4,243,4,"constructor"],[266,15,243,15,"constructor"],[266,16,243,16,"database"],[266,24,243,24],[266,26,243,26,"statement"],[266,35,243,35],[266,37,243,37,"firstRowValues"],[266,51,243,51],[266,53,243,53,"options"],[266,60,243,60],[266,62,243,62],[267,6,244,8],[267,10,244,12],[267,11,244,13,"database"],[267,19,244,21],[267,22,244,24,"database"],[267,30,244,32],[268,6,245,8],[268,10,245,12],[268,11,245,13,"statement"],[268,20,245,22],[268,23,245,25,"statement"],[268,32,245,34],[269,6,246,8],[269,10,246,12],[269,11,246,13,"firstRowValues"],[269,25,246,27],[269,28,246,30,"firstRowValues"],[269,42,246,44],[270,6,247,8],[270,10,247,12],[270,11,247,13,"options"],[270,18,247,20],[270,21,247,23,"options"],[270,28,247,30],[271,4,248,4],[272,4,249,4,"getFirstSync"],[272,16,249,16,"getFirstSync"],[272,17,249,16],[272,19,249,19],[273,6,250,8],[273,10,250,12],[273,14,250,16],[273,15,250,17,"isStepCalled"],[273,27,250,29],[273,29,250,31],[274,8,251,12],[274,14,251,18],[274,18,251,22,"Error"],[274,23,251,27],[274,24,251,28],[274,207,251,211],[274,208,251,212],[275,6,252,8],[276,6,253,8],[276,12,253,14,"columnNames"],[276,23,253,25],[276,26,253,28],[276,30,253,32],[276,31,253,33,"getColumnNamesSync"],[276,49,253,51],[276,50,253,52],[276,51,253,53],[277,6,254,8],[277,12,254,14,"firstRowValues"],[277,26,254,28],[277,29,254,31],[277,33,254,35],[277,34,254,36,"popFirstRowValues"],[277,51,254,53],[277,52,254,54],[277,53,254,55],[278,6,255,8],[278,10,255,12,"firstRowValues"],[278,24,255,26],[278,28,255,30],[278,32,255,34],[278,34,255,36],[279,8,256,12],[279,15,256,19,"composeRowIfNeeded"],[279,33,256,37],[279,34,256,38],[279,38,256,42],[279,39,256,43,"options"],[279,46,256,50],[279,47,256,51,"rawResult"],[279,56,256,60],[279,58,256,62,"columnNames"],[279,69,256,73],[279,71,256,75,"firstRowValues"],[279,85,256,89],[279,86,256,90],[280,6,257,8],[281,6,258,8],[281,12,258,14,"firstRow"],[281,20,258,22],[281,23,258,25],[281,27,258,29],[281,28,258,30,"statement"],[281,37,258,39],[281,38,258,40,"stepSync"],[281,46,258,48],[281,47,258,49],[281,51,258,53],[281,52,258,54,"database"],[281,60,258,62],[281,61,258,63],[282,6,259,8],[282,13,259,15,"firstRow"],[282,21,259,23],[282,25,259,27],[282,29,259,31],[282,32,260,14,"composeRowIfNeeded"],[282,50,260,32],[282,51,260,33],[282,55,260,37],[282,56,260,38,"options"],[282,63,260,45],[282,64,260,46,"rawResult"],[282,73,260,55],[282,75,260,57,"columnNames"],[282,86,260,68],[282,88,260,70,"firstRow"],[282,96,260,78],[282,97,260,79],[282,100,261,14],[282,104,261,18],[283,4,262,4],[284,4,263,4,"getAllSync"],[284,14,263,14,"getAllSync"],[284,15,263,14],[284,17,263,17],[285,6,264,8],[285,10,264,12],[285,14,264,16],[285,15,264,17,"isStepCalled"],[285,27,264,29],[285,29,264,31],[286,8,265,12],[286,14,265,18],[286,18,265,22,"Error"],[286,23,265,27],[286,24,265,28],[286,197,265,201],[286,198,265,202],[287,6,266,8],[288,6,267,8],[288,12,267,14,"firstRowValues"],[288,26,267,28],[288,29,267,31],[288,33,267,35],[288,34,267,36,"popFirstRowValues"],[288,51,267,53],[288,52,267,54],[288,53,267,55],[289,6,268,8],[289,10,268,12,"firstRowValues"],[289,24,268,26],[289,28,268,30],[289,32,268,34],[289,34,268,36],[290,8,269,12],[291,8,270,12],[291,15,270,19],[291,17,270,21],[292,6,271,8],[293,6,272,8],[293,12,272,14,"columnNames"],[293,23,272,25],[293,26,272,28],[293,30,272,32],[293,31,272,33,"getColumnNamesSync"],[293,49,272,51],[293,50,272,52],[293,51,272,53],[294,6,273,8],[294,12,273,14,"allRows"],[294,19,273,21],[294,22,273,24],[294,26,273,28],[294,27,273,29,"statement"],[294,36,273,38],[294,37,273,39,"getAllSync"],[294,47,273,49],[294,48,273,50],[294,52,273,54],[294,53,273,55,"database"],[294,61,273,63],[294,62,273,64],[295,6,274,8],[295,10,274,12,"firstRowValues"],[295,24,274,26],[295,28,274,30],[295,32,274,34],[295,36,274,38,"firstRowValues"],[295,50,274,52],[295,51,274,53,"length"],[295,57,274,59],[295,60,274,62],[295,61,274,63],[295,63,274,65],[296,8,275,12],[296,15,275,19,"composeRowsIfNeeded"],[296,34,275,38],[296,35,275,39],[296,39,275,43],[296,40,275,44,"options"],[296,47,275,51],[296,48,275,52,"rawResult"],[296,57,275,61],[296,59,275,63,"columnNames"],[296,70,275,74],[296,72,275,76],[296,73,276,16,"firstRowValues"],[296,87,276,30],[296,89,277,16],[296,92,277,19,"allRows"],[296,99,277,26],[296,100,278,13],[296,101,278,14],[297,6,279,8],[298,6,280,8],[298,13,280,15,"composeRowsIfNeeded"],[298,32,280,34],[298,33,280,35],[298,37,280,39],[298,38,280,40,"options"],[298,45,280,47],[298,46,280,48,"rawResult"],[298,55,280,57],[298,57,280,59,"columnNames"],[298,68,280,70],[298,70,280,72,"allRows"],[298,77,280,79],[298,78,280,80],[299,4,281,4],[300,4,282,4],[300,5,282,5,"generatorSync"],[300,18,282,18,"generatorSync"],[300,19,282,18],[300,21,282,21],[301,6,283,8],[301,12,283,14,"columnNames"],[301,23,283,25],[301,26,283,28],[301,30,283,32],[301,31,283,33,"getColumnNamesSync"],[301,49,283,51],[301,50,283,52],[301,51,283,53],[302,6,284,8],[302,12,284,14,"firstRowValues"],[302,26,284,28],[302,29,284,31],[302,33,284,35],[302,34,284,36,"popFirstRowValues"],[302,51,284,53],[302,52,284,54],[302,53,284,55],[303,6,285,8],[303,10,285,12,"firstRowValues"],[303,24,285,26],[303,28,285,30],[303,32,285,34],[303,34,285,36],[304,8,286,12],[304,14,286,18,"composeRowIfNeeded"],[304,32,286,36],[304,33,286,37],[304,37,286,41],[304,38,286,42,"options"],[304,45,286,49],[304,46,286,50,"rawResult"],[304,55,286,59],[304,57,286,61,"columnNames"],[304,68,286,72],[304,70,286,74,"firstRowValues"],[304,84,286,88],[304,85,286,89],[305,6,287,8],[306,6,288,8],[306,10,288,12,"result"],[306,16,288,18],[307,6,289,8],[307,9,289,11],[308,8,290,12,"result"],[308,14,290,18],[308,17,290,21],[308,21,290,25],[308,22,290,26,"statement"],[308,31,290,35],[308,32,290,36,"stepSync"],[308,40,290,44],[308,41,290,45],[308,45,290,49],[308,46,290,50,"database"],[308,54,290,58],[308,55,290,59],[309,8,291,12],[309,12,291,16,"result"],[309,18,291,22],[309,22,291,26],[309,26,291,30],[309,28,291,32],[310,10,292,16],[310,16,292,22,"composeRowIfNeeded"],[310,34,292,40],[310,35,292,41],[310,39,292,45],[310,40,292,46,"options"],[310,47,292,53],[310,48,292,54,"rawResult"],[310,57,292,63],[310,59,292,65,"columnNames"],[310,70,292,76],[310,72,292,78,"result"],[310,78,292,84],[310,79,292,85],[311,8,293,12],[312,6,294,8],[312,7,294,9],[312,15,294,17,"result"],[312,21,294,23],[312,25,294,27],[312,29,294,31],[313,4,295,4],[314,4,296,4,"resetSync"],[314,13,296,13,"resetSync"],[314,14,296,13],[314,16,296,16],[315,6,297,8],[315,12,297,14,"result"],[315,18,297,20],[315,21,297,23],[315,25,297,27],[315,26,297,28,"statement"],[315,35,297,37],[315,36,297,38,"resetSync"],[315,45,297,47],[315,46,297,48],[315,50,297,52],[315,51,297,53,"database"],[315,59,297,61],[315,60,297,62],[316,6,298,8],[316,10,298,12],[316,11,298,13,"isStepCalled"],[316,23,298,25],[316,26,298,28],[316,31,298,33],[317,6,299,8],[317,13,299,15,"result"],[317,19,299,21],[318,4,300,4],[319,4,301,4,"popFirstRowValues"],[319,21,301,21,"popFirstRowValues"],[319,22,301,21],[319,24,301,24],[320,6,302,8],[320,10,302,12],[320,14,302,16],[320,15,302,17,"firstRowValues"],[320,29,302,31],[320,33,302,35],[320,37,302,39],[320,39,302,41],[321,8,303,12],[321,14,303,18,"firstRowValues"],[321,28,303,32],[321,31,303,35],[321,35,303,39],[321,36,303,40,"firstRowValues"],[321,50,303,54],[322,8,304,12],[322,12,304,16],[322,13,304,17,"firstRowValues"],[322,27,304,31],[322,30,304,34],[322,34,304,38],[323,8,305,12],[323,15,305,19,"firstRowValues"],[323,29,305,33],[323,30,305,34,"length"],[323,36,305,40],[323,39,305,43],[323,40,305,44],[323,43,305,47,"firstRowValues"],[323,57,305,61],[323,60,305,64],[323,64,305,68],[324,6,306,8],[325,6,307,8],[325,13,307,15],[325,17,307,19],[326,4,308,4],[327,4,309,4,"getColumnNamesSync"],[327,22,309,22,"getColumnNamesSync"],[327,23,309,22],[327,25,309,25],[328,6,310,8],[328,10,310,12],[328,14,310,16],[328,15,310,17,"columnNames"],[328,26,310,28],[328,30,310,32],[328,34,310,36],[328,36,310,38],[329,8,311,12],[329,12,311,16],[329,13,311,17,"columnNames"],[329,24,311,28],[329,27,311,31],[329,31,311,35],[329,32,311,36,"statement"],[329,41,311,45],[329,42,311,46,"getColumnNamesSync"],[329,60,311,64],[329,61,311,65],[329,62,311,66],[330,6,312,8],[331,6,313,8],[331,13,313,15],[331,17,313,19],[331,18,313,20,"columnNames"],[331,29,313,31],[332,4,314,4],[333,2,315,0],[334,2,316,0],[334,11,316,9,"composeRowIfNeeded"],[334,29,316,27,"composeRowIfNeeded"],[334,30,316,28,"rawResult"],[334,39,316,37],[334,41,316,39,"columnNames"],[334,52,316,50],[334,54,316,52,"columnValues"],[334,66,316,64],[334,68,316,66],[335,4,317,4],[335,11,317,11,"rawResult"],[335,20,317,20],[335,23,318,10,"columnValues"],[335,35,318,22],[335,36,318,23],[336,4,318,23],[336,6,319,10],[336,10,319,10,"composeRow"],[336,21,319,20],[336,22,319,20,"composeRow"],[336,32,319,20],[336,34,319,21,"columnNames"],[336,45,319,32],[336,47,319,34,"columnValues"],[336,59,319,46],[336,60,319,47],[337,2,320,0],[338,2,321,0],[338,11,321,9,"composeRowsIfNeeded"],[338,30,321,28,"composeRowsIfNeeded"],[338,31,321,29,"rawResult"],[338,40,321,38],[338,42,321,40,"columnNames"],[338,53,321,51],[338,55,321,53,"columnValuesList"],[338,71,321,69],[338,73,321,71],[339,4,322,4],[339,11,322,11,"rawResult"],[339,20,322,20],[339,23,323,10,"columnValuesList"],[339,39,323,26],[339,40,323,27],[340,4,323,27],[340,6,324,10],[340,10,324,10,"composeRows"],[340,21,324,21],[340,22,324,21,"composeRows"],[340,33,324,21],[340,35,324,22,"columnNames"],[340,46,324,33],[340,48,324,35,"columnValuesList"],[340,64,324,51],[340,65,324,52],[341,2,325,0],[342,2,326,0],[343,0,326,0],[343,3]],"functionMap":{"names":["<global>","SQLiteStatement","constructor","executeAsync","executeForRawResultAsync","getColumnNamesAsync","finalizeAsync","executeSync","executeForRawResultSync","getColumnNamesSync","finalizeSync","createSQLiteExecuteAsyncResult","createSQLiteExecuteSyncResult","SQLiteExecuteAsyncResultImpl","SQLiteExecuteAsyncResultImpl#constructor","SQLiteExecuteAsyncResultImpl#getFirstAsync","SQLiteExecuteAsyncResultImpl#getAllAsync","SQLiteExecuteAsyncResultImpl#generatorAsync","SQLiteExecuteAsyncResultImpl#resetAsync","SQLiteExecuteAsyncResultImpl#popFirstRowValues","SQLiteExecuteAsyncResultImpl#getColumnNamesAsync","SQLiteExecuteSyncResultImpl","SQLiteExecuteSyncResultImpl#constructor","SQLiteExecuteSyncResultImpl#getFirstSync","SQLiteExecuteSyncResultImpl#getAllSync","SQLiteExecuteSyncResultImpl#generatorSync","SQLiteExecuteSyncResultImpl#resetSync","SQLiteExecuteSyncResultImpl#popFirstRowValues","SQLiteExecuteSyncResultImpl#getColumnNamesSync","composeRowIfNeeded","composeRowsIfNeeded"],"mappings":"AAA;OCI;ICG;KDG;IEC;KFO;IGC;KHO;III;KJE;IKS;KLE;IMC;KNO;IOC;KPO;IQI;KRE;ISU;KTE;CDC;AWO;CX+B;AYI;CZ+B;AaC;ICO;KDK;IEC;KFc;IGC;KHmB;IIC;KJc;IKC;KLI;IMC;KNO;IOC;KPK;CbC;AqBC;ICO;KDK;IEC;KFa;IGC;KHkB;IIC;KJa;IKC;KLI;IMC;KNO;IOC;KPK;CrBC;A6BC;C7BI;A8BC;C9BI"},"hasCjsExports":false},"type":"js/module"}]}