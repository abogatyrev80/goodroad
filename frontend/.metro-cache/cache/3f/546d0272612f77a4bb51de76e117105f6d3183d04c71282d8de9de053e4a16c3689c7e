{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":59,"index":93}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"react-native-mmkv","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":94},"end":{"line":3,"column":41,"index":135}}],"key":"4pHPstqrxqLLkXUtCAhQDTZHuZw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"storage\", {\n    enumerable: true,\n    get: function () {\n      return storage;\n    }\n  });\n  Object.defineProperty(exports, \"fastDistance\", {\n    enumerable: true,\n    get: function () {\n      return fastDistance;\n    }\n  });\n  Object.defineProperty(exports, \"useAppStore\", {\n    enumerable: true,\n    get: function () {\n      return useAppStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  var _reactNativeMmkv = require(_dependencyMap[2], \"react-native-mmkv\");\n  // Fast storage using MMKV (30x faster than AsyncStorage)\n  const storage = new _reactNativeMmkv.MMKV({\n    id: 'good-road-storage',\n    encryptionKey: 'good-road-encryption-key'\n  });\n\n  // Default hazard types with optimized configuration\n  const defaultHazardTypes = [{\n    id: 'pothole',\n    name: 'Ямы',\n    icon: 'alert-circle',\n    enabled: true,\n    criticalDistance: 50\n  }, {\n    id: 'speed_bump',\n    name: 'Лежачие полицейские',\n    icon: 'triangle',\n    enabled: true,\n    criticalDistance: 30\n  }, {\n    id: 'road_defect',\n    name: 'Дефекты покрытия',\n    icon: 'warning',\n    enabled: true,\n    criticalDistance: 40\n  }, {\n    id: 'pedestrian_crossing',\n    name: 'Пешеходные переходы',\n    icon: 'walk',\n    enabled: true,\n    criticalDistance: 60\n  }, {\n    id: 'railway_crossing',\n    name: 'ЖД переезды',\n    icon: 'train',\n    enabled: true,\n    criticalDistance: 100\n  }, {\n    id: 'unpaved_road',\n    name: 'Грунтовое покрытие',\n    icon: 'trail-sign',\n    enabled: true,\n    criticalDistance: 70\n  }, {\n    id: 'construction',\n    name: 'Дорожные работы',\n    icon: 'construct',\n    enabled: true,\n    criticalDistance: 80\n  }];\n  const defaultSettings = {\n    audioWarnings: true,\n    vibrationWarnings: true,\n    warningVolume: 0.8,\n    speedThreshold: 15,\n    minWarningDistance: 30,\n    maxWarningDistance: 200,\n    warningCooldown: 5,\n    hazardTypes: defaultHazardTypes\n  };\n\n  // Location and tracking data interface\n\n  // Optimized store interface\n\n  // Memoized calculation functions\n  const calculateRoadCondition = locationHistory => {\n    if (locationHistory.length < 5) return 75;\n    const recentData = locationHistory.slice(-20);\n    const speedVariations = recentData.map((loc, i) => i > 0 ? Math.abs(loc.speed - recentData[i - 1].speed) : 0);\n    const avgSpeedVariation = speedVariations.reduce((a, b) => a + b, 0) / speedVariations.length;\n    const score = Math.max(0, Math.min(100, 100 - avgSpeedVariation * 10));\n    return score;\n  };\n\n  // Optimized distance calculation using fast approximation for nearby points\n  const fastDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371000; // Earth radius in meters\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const lat = (lat1 + lat2) / 2 * Math.PI / 180;\n    const dx = dLon * R * Math.cos(lat);\n    const dy = dLat * R;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  // Create optimized store with persistence\n  const useAppStore = (0, _zustand.create)()((0, _zustandMiddleware.subscribeWithSelector)((set, get) => ({\n    // Settings\n    settings: defaultSettings,\n    loadSettings: () => {\n      try {\n        const stored = storage.getString('app_settings');\n        if (stored) {\n          const parsed = JSON.parse(stored);\n          set({\n            settings: {\n              ...defaultSettings,\n              ...parsed\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n        // Fallback to defaults\n        set({\n          settings: defaultSettings\n        });\n      }\n    },\n    updateSettings: newSettings => {\n      const updatedSettings = {\n        ...get().settings,\n        ...newSettings\n      };\n      set({\n        settings: updatedSettings\n      });\n      try {\n        storage.set('app_settings', JSON.stringify(updatedSettings));\n      } catch (error) {\n        console.error('Error saving settings:', error);\n      }\n    },\n    resetSettings: () => {\n      set({\n        settings: defaultSettings\n      });\n      storage.delete('app_settings');\n    },\n    // Tracking state\n    isTracking: false,\n    setTracking: tracking => set({\n      isTracking: tracking\n    }),\n    // Location data with optimized updates\n    currentLocation: null,\n    locationHistory: [],\n    updateLocation: location => {\n      const {\n        locationHistory,\n        settings\n      } = get();\n\n      // Limit history size for performance (keep last 100 points)\n      const newHistory = [...locationHistory.slice(-99), location];\n\n      // Calculate road condition only when needed\n      const newScore = calculateRoadCondition(newHistory);\n      set({\n        currentLocation: location,\n        locationHistory: newHistory,\n        roadConditionScore: newScore\n      });\n    },\n    clearLocationHistory: () => set({\n      locationHistory: []\n    }),\n    // Road conditions\n    roadConditionScore: 75,\n    updateRoadScore: score => set({\n      roadConditionScore: score\n    }),\n    // Hazards with optimized management\n    activeHazards: [],\n    warningHistory: [],\n    lastWarningTime: 0,\n    addHazard: hazard => {\n      const {\n        activeHazards,\n        settings\n      } = get();\n      const now = Date.now();\n\n      // Check if similar hazard already exists nearby\n      const existingSimilar = activeHazards.find(h => h.type === hazard.type && fastDistance(h.latitude, h.longitude, hazard.latitude, hazard.longitude) < 100);\n      if (!existingSimilar) {\n        const newHazards = [...activeHazards, hazard];\n        set({\n          activeHazards: newHazards,\n          warningHistory: [...get().warningHistory, {\n            hazard,\n            timestamp: now\n          }].slice(-50),\n          // Keep last 50\n          lastWarningTime: now\n        });\n      }\n    },\n    removeHazard: hazardId => {\n      set({\n        activeHazards: get().activeHazards.filter(h => h.id !== hazardId)\n      });\n    },\n    clearHazards: () => set({\n      activeHazards: [],\n      warningHistory: []\n    }),\n    // Performance stats\n    dataProcessingStats: {\n      totalDataPoints: 0,\n      lastSyncTime: 0,\n      syncErrors: 0\n    },\n    updateStats: stats => {\n      set({\n        dataProcessingStats: {\n          ...get().dataProcessingStats,\n          ...stats\n        }\n      });\n    }\n  })));\n\n  // Auto-persist critical data\n  useAppStore.subscribe(state => state.settings, settings => {\n    try {\n      storage.set('app_settings', JSON.stringify(settings));\n    } catch (error) {\n      console.error('Error persisting settings:', error);\n    }\n  }, {\n    equalityFn: (a, b) => JSON.stringify(a) === JSON.stringify(b)\n  });\n\n  // Performance monitoring\n  useAppStore.subscribe(state => state.dataProcessingStats, stats => {\n    // Log performance metrics for debugging\n    if (__DEV__) {\n      console.log('Performance stats:', stats);\n    }\n  });\n  var _default = useAppStore;\n});","lineCount":267,"map":[[7,2,259,0,"Object"],[7,8,259,0],[7,9,259,0,"defineProperty"],[7,23,259,0],[7,24,259,0,"exports"],[7,31,259,0],[8,4,259,0,"enumerable"],[8,14,259,0],[9,4,259,0,"get"],[9,7,259,0],[9,18,259,0,"get"],[9,19,259,0],[10,6,259,0],[10,13,259,0,"_default"],[10,21,259,0],[11,4,259,0],[12,2,259,0],[13,2,7,0,"Object"],[13,8,7,0],[13,9,7,0,"defineProperty"],[13,23,7,0],[13,24,7,0,"exports"],[13,31,7,0],[14,4,7,0,"enumerable"],[14,14,7,0],[15,4,7,0,"get"],[15,7,7,0],[15,18,7,0,"get"],[15,19,7,0],[16,6,7,0],[16,13,7,0,"storage"],[16,20,7,0],[17,4,7,0],[18,2,7,0],[19,2,109,0,"Object"],[19,8,109,0],[19,9,109,0,"defineProperty"],[19,23,109,0],[19,24,109,0,"exports"],[19,31,109,0],[20,4,109,0,"enumerable"],[20,14,109,0],[21,4,109,0,"get"],[21,7,109,0],[21,18,109,0,"get"],[21,19,109,0],[22,6,109,0],[22,13,109,0,"fastDistance"],[22,25,109,0],[23,4,109,0],[24,2,109,0],[25,2,122,0,"Object"],[25,8,122,0],[25,9,122,0,"defineProperty"],[25,23,122,0],[25,24,122,0,"exports"],[25,31,122,0],[26,4,122,0,"enumerable"],[26,14,122,0],[27,4,122,0,"get"],[27,7,122,0],[27,18,122,0,"get"],[27,19,122,0],[28,6,122,0],[28,13,122,0,"useAppStore"],[28,24,122,0],[29,4,122,0],[30,2,122,0],[31,2,1,0],[31,6,1,0,"_zustand"],[31,14,1,0],[31,17,1,0,"require"],[31,24,1,0],[31,25,1,0,"_dependencyMap"],[31,39,1,0],[32,2,2,0],[32,6,2,0,"_zustandMiddleware"],[32,24,2,0],[32,27,2,0,"require"],[32,34,2,0],[32,35,2,0,"_dependencyMap"],[32,49,2,0],[33,2,3,0],[33,6,3,0,"_reactNativeMmkv"],[33,22,3,0],[33,25,3,0,"require"],[33,32,3,0],[33,33,3,0,"_dependencyMap"],[33,47,3,0],[34,2,6,0],[35,2,7,7],[35,8,7,13,"storage"],[35,15,7,20],[35,18,7,23],[35,22,7,27,"MMKV"],[35,38,7,31],[35,39,7,31,"MMKV"],[35,43,7,31],[35,44,7,32],[36,4,8,2,"id"],[36,6,8,4],[36,8,8,6],[36,27,8,25],[37,4,9,2,"encryptionKey"],[37,17,9,15],[37,19,9,17],[38,2,10,0],[38,3,10,1],[38,4,10,2],[40,2,12,0],[41,2,13,0],[41,8,13,6,"defaultHazardTypes"],[41,26,13,38],[41,29,13,41],[41,30,14,2],[42,4,14,4,"id"],[42,6,14,6],[42,8,14,8],[42,17,14,17],[43,4,14,19,"name"],[43,8,14,23],[43,10,14,25],[43,15,14,30],[44,4,14,32,"icon"],[44,8,14,36],[44,10,14,38],[44,24,14,52],[45,4,14,54,"enabled"],[45,11,14,61],[45,13,14,63],[45,17,14,67],[46,4,14,69,"criticalDistance"],[46,20,14,85],[46,22,14,87],[47,2,14,90],[47,3,14,91],[47,5,15,2],[48,4,15,4,"id"],[48,6,15,6],[48,8,15,8],[48,20,15,20],[49,4,15,22,"name"],[49,8,15,26],[49,10,15,28],[49,31,15,49],[50,4,15,51,"icon"],[50,8,15,55],[50,10,15,57],[50,20,15,67],[51,4,15,69,"enabled"],[51,11,15,76],[51,13,15,78],[51,17,15,82],[52,4,15,84,"criticalDistance"],[52,20,15,100],[52,22,15,102],[53,2,15,105],[53,3,15,106],[53,5,16,2],[54,4,16,4,"id"],[54,6,16,6],[54,8,16,8],[54,21,16,21],[55,4,16,23,"name"],[55,8,16,27],[55,10,16,29],[55,28,16,47],[56,4,16,49,"icon"],[56,8,16,53],[56,10,16,55],[56,19,16,64],[57,4,16,66,"enabled"],[57,11,16,73],[57,13,16,75],[57,17,16,79],[58,4,16,81,"criticalDistance"],[58,20,16,97],[58,22,16,99],[59,2,16,102],[59,3,16,103],[59,5,17,2],[60,4,17,4,"id"],[60,6,17,6],[60,8,17,8],[60,29,17,29],[61,4,17,31,"name"],[61,8,17,35],[61,10,17,37],[61,31,17,58],[62,4,17,60,"icon"],[62,8,17,64],[62,10,17,66],[62,16,17,72],[63,4,17,74,"enabled"],[63,11,17,81],[63,13,17,83],[63,17,17,87],[64,4,17,89,"criticalDistance"],[64,20,17,105],[64,22,17,107],[65,2,17,110],[65,3,17,111],[65,5,18,2],[66,4,18,4,"id"],[66,6,18,6],[66,8,18,8],[66,26,18,26],[67,4,18,28,"name"],[67,8,18,32],[67,10,18,34],[67,23,18,47],[68,4,18,49,"icon"],[68,8,18,53],[68,10,18,55],[68,17,18,62],[69,4,18,64,"enabled"],[69,11,18,71],[69,13,18,73],[69,17,18,77],[70,4,18,79,"criticalDistance"],[70,20,18,95],[70,22,18,97],[71,2,18,101],[71,3,18,102],[71,5,19,2],[72,4,19,4,"id"],[72,6,19,6],[72,8,19,8],[72,22,19,22],[73,4,19,24,"name"],[73,8,19,28],[73,10,19,30],[73,30,19,50],[74,4,19,52,"icon"],[74,8,19,56],[74,10,19,58],[74,22,19,70],[75,4,19,72,"enabled"],[75,11,19,79],[75,13,19,81],[75,17,19,85],[76,4,19,87,"criticalDistance"],[76,20,19,103],[76,22,19,105],[77,2,19,108],[77,3,19,109],[77,5,20,2],[78,4,20,4,"id"],[78,6,20,6],[78,8,20,8],[78,22,20,22],[79,4,20,24,"name"],[79,8,20,28],[79,10,20,30],[79,27,20,47],[80,4,20,49,"icon"],[80,8,20,53],[80,10,20,55],[80,21,20,66],[81,4,20,68,"enabled"],[81,11,20,75],[81,13,20,77],[81,17,20,81],[82,4,20,83,"criticalDistance"],[82,20,20,99],[82,22,20,101],[83,2,20,104],[83,3,20,105],[83,4,21,1],[84,2,23,0],[84,8,23,6,"defaultSettings"],[84,23,23,34],[84,26,23,37],[85,4,24,2,"audioWarnings"],[85,17,24,15],[85,19,24,17],[85,23,24,21],[86,4,25,2,"vibrationWarnings"],[86,21,25,19],[86,23,25,21],[86,27,25,25],[87,4,26,2,"warningVolume"],[87,17,26,15],[87,19,26,17],[87,22,26,20],[88,4,27,2,"speedThreshold"],[88,18,27,16],[88,20,27,18],[88,22,27,20],[89,4,28,2,"minWarningDistance"],[89,22,28,20],[89,24,28,22],[89,26,28,24],[90,4,29,2,"maxWarningDistance"],[90,22,29,20],[90,24,29,22],[90,27,29,25],[91,4,30,2,"warningCooldown"],[91,19,30,17],[91,21,30,19],[91,22,30,20],[92,4,31,2,"hazardTypes"],[92,15,31,13],[92,17,31,15,"defaultHazardTypes"],[93,2,32,0],[93,3,32,1],[95,2,34,0],[97,2,54,0],[99,2,93,0],[100,2,94,0],[100,8,94,6,"calculateRoadCondition"],[100,30,94,28],[100,33,94,32,"locationHistory"],[100,48,94,63],[100,52,94,76],[101,4,95,2],[101,8,95,6,"locationHistory"],[101,23,95,21],[101,24,95,22,"length"],[101,30,95,28],[101,33,95,31],[101,34,95,32],[101,36,95,34],[101,43,95,41],[101,45,95,43],[102,4,97,2],[102,10,97,8,"recentData"],[102,20,97,18],[102,23,97,21,"locationHistory"],[102,38,97,36],[102,39,97,37,"slice"],[102,44,97,42],[102,45,97,43],[102,46,97,44],[102,48,97,46],[102,49,97,47],[103,4,98,2],[103,10,98,8,"speedVariations"],[103,25,98,23],[103,28,98,26,"recentData"],[103,38,98,36],[103,39,98,37,"map"],[103,42,98,40],[103,43,98,41],[103,44,98,42,"loc"],[103,47,98,45],[103,49,98,47,"i"],[103,50,98,48],[103,55,99,4,"i"],[103,56,99,5],[103,59,99,8],[103,60,99,9],[103,63,99,12,"Math"],[103,67,99,16],[103,68,99,17,"abs"],[103,71,99,20],[103,72,99,21,"loc"],[103,75,99,24],[103,76,99,25,"speed"],[103,81,99,30],[103,84,99,33,"recentData"],[103,94,99,43],[103,95,99,44,"i"],[103,96,99,45],[103,99,99,48],[103,100,99,49],[103,101,99,50],[103,102,99,51,"speed"],[103,107,99,56],[103,108,99,57],[103,111,99,60],[103,112,100,2],[103,113,100,3],[104,4,102,2],[104,10,102,8,"avgSpeedVariation"],[104,27,102,25],[104,30,102,28,"speedVariations"],[104,45,102,43],[104,46,102,44,"reduce"],[104,52,102,50],[104,53,102,51],[104,54,102,52,"a"],[104,55,102,53],[104,57,102,55,"b"],[104,58,102,56],[104,63,102,61,"a"],[104,64,102,62],[104,67,102,65,"b"],[104,68,102,66],[104,70,102,68],[104,71,102,69],[104,72,102,70],[104,75,102,73,"speedVariations"],[104,90,102,88],[104,91,102,89,"length"],[104,97,102,95],[105,4,103,2],[105,10,103,8,"score"],[105,15,103,13],[105,18,103,16,"Math"],[105,22,103,20],[105,23,103,21,"max"],[105,26,103,24],[105,27,103,25],[105,28,103,26],[105,30,103,28,"Math"],[105,34,103,32],[105,35,103,33,"min"],[105,38,103,36],[105,39,103,37],[105,42,103,40],[105,44,103,42],[105,47,103,45],[105,50,103,49,"avgSpeedVariation"],[105,67,103,66],[105,70,103,69],[105,72,103,72],[105,73,103,73],[105,74,103,74],[106,4,105,2],[106,11,105,9,"score"],[106,16,105,14],[107,2,106,0],[107,3,106,1],[109,2,108,0],[110,2,109,7],[110,8,109,13,"fastDistance"],[110,20,109,25],[110,23,109,28,"fastDistance"],[110,24,109,29,"lat1"],[110,28,109,41],[110,30,109,43,"lon1"],[110,34,109,55],[110,36,109,57,"lat2"],[110,40,109,69],[110,42,109,71,"lon2"],[110,46,109,83],[110,51,109,96],[111,4,110,2],[111,10,110,8,"R"],[111,11,110,9],[111,14,110,12],[111,21,110,19],[111,22,110,20],[111,23,110,21],[112,4,111,2],[112,10,111,8,"dLat"],[112,14,111,12],[112,17,111,15],[112,18,111,16,"lat2"],[112,22,111,20],[112,25,111,23,"lat1"],[112,29,111,27],[112,33,111,31,"Math"],[112,37,111,35],[112,38,111,36,"PI"],[112,40,111,38],[112,43,111,41],[112,46,111,44],[113,4,112,2],[113,10,112,8,"dLon"],[113,14,112,12],[113,17,112,15],[113,18,112,16,"lon2"],[113,22,112,20],[113,25,112,23,"lon1"],[113,29,112,27],[113,33,112,31,"Math"],[113,37,112,35],[113,38,112,36,"PI"],[113,40,112,38],[113,43,112,41],[113,46,112,44],[114,4,113,2],[114,10,113,8,"lat"],[114,13,113,11],[114,16,113,14],[114,17,113,15,"lat1"],[114,21,113,19],[114,24,113,22,"lat2"],[114,28,113,26],[114,32,113,30],[114,33,113,31],[114,36,113,34,"Math"],[114,40,113,38],[114,41,113,39,"PI"],[114,43,113,41],[114,46,113,44],[114,49,113,47],[115,4,115,2],[115,10,115,8,"dx"],[115,12,115,10],[115,15,115,13,"dLon"],[115,19,115,17],[115,22,115,20,"R"],[115,23,115,21],[115,26,115,24,"Math"],[115,30,115,28],[115,31,115,29,"cos"],[115,34,115,32],[115,35,115,33,"lat"],[115,38,115,36],[115,39,115,37],[116,4,116,2],[116,10,116,8,"dy"],[116,12,116,10],[116,15,116,13,"dLat"],[116,19,116,17],[116,22,116,20,"R"],[116,23,116,21],[117,4,118,2],[117,11,118,9,"Math"],[117,15,118,13],[117,16,118,14,"sqrt"],[117,20,118,18],[117,21,118,19,"dx"],[117,23,118,21],[117,26,118,24,"dx"],[117,28,118,26],[117,31,118,29,"dy"],[117,33,118,31],[117,36,118,34,"dy"],[117,38,118,36],[117,39,118,37],[118,2,119,0],[118,3,119,1],[120,2,121,0],[121,2,122,7],[121,8,122,13,"useAppStore"],[121,19,122,24],[121,22,122,27],[121,26,122,27,"create"],[121,34,122,33],[121,35,122,33,"create"],[121,41,122,33],[121,43,122,44],[121,44,122,45],[121,45,123,2],[121,49,123,2,"subscribeWithSelector"],[121,67,123,23],[121,68,123,23,"subscribeWithSelector"],[121,89,123,23],[121,91,123,24],[121,92,123,25,"set"],[121,95,123,28],[121,97,123,30,"get"],[121,100,123,33],[121,106,123,39],[122,4,124,4],[123,4,125,4,"settings"],[123,12,125,12],[123,14,125,14,"defaultSettings"],[123,29,125,29],[124,4,127,4,"loadSettings"],[124,16,127,16],[124,18,127,18,"loadSettings"],[124,19,127,18],[124,24,127,24],[125,6,128,6],[125,10,128,10],[126,8,129,8],[126,14,129,14,"stored"],[126,20,129,20],[126,23,129,23,"storage"],[126,30,129,30],[126,31,129,31,"getString"],[126,40,129,40],[126,41,129,41],[126,55,129,55],[126,56,129,56],[127,8,130,8],[127,12,130,12,"stored"],[127,18,130,18],[127,20,130,20],[128,10,131,10],[128,16,131,16,"parsed"],[128,22,131,22],[128,25,131,25,"JSON"],[128,29,131,29],[128,30,131,30,"parse"],[128,35,131,35],[128,36,131,36,"stored"],[128,42,131,42],[128,43,131,43],[129,10,132,10,"set"],[129,13,132,13],[129,14,132,14],[130,12,132,16,"settings"],[130,20,132,24],[130,22,132,26],[131,14,132,28],[131,17,132,31,"defaultSettings"],[131,32,132,46],[132,14,132,48],[132,17,132,51,"parsed"],[133,12,132,58],[134,10,132,60],[134,11,132,61],[134,12,132,62],[135,8,133,8],[136,6,134,6],[136,7,134,7],[136,8,134,8],[136,15,134,15,"error"],[136,20,134,20],[136,22,134,22],[137,8,135,8,"console"],[137,15,135,15],[137,16,135,16,"error"],[137,21,135,21],[137,22,135,22],[137,47,135,47],[137,49,135,49,"error"],[137,54,135,54],[137,55,135,55],[138,8,136,8],[139,8,137,8,"set"],[139,11,137,11],[139,12,137,12],[140,10,137,14,"settings"],[140,18,137,22],[140,20,137,24,"defaultSettings"],[141,8,137,40],[141,9,137,41],[141,10,137,42],[142,6,138,6],[143,4,139,4],[143,5,139,5],[144,4,141,4,"updateSettings"],[144,18,141,18],[144,20,141,21,"newSettings"],[144,31,141,32],[144,35,141,37],[145,6,142,6],[145,12,142,12,"updatedSettings"],[145,27,142,27],[145,30,142,30],[146,8,142,32],[146,11,142,35,"get"],[146,14,142,38],[146,15,142,39],[146,16,142,40],[146,17,142,41,"settings"],[146,25,142,49],[147,8,142,51],[147,11,142,54,"newSettings"],[148,6,142,66],[148,7,142,67],[149,6,143,6,"set"],[149,9,143,9],[149,10,143,10],[150,8,143,12,"settings"],[150,16,143,20],[150,18,143,22,"updatedSettings"],[151,6,143,38],[151,7,143,39],[151,8,143,40],[152,6,145,6],[152,10,145,10],[153,8,146,8,"storage"],[153,15,146,15],[153,16,146,16,"set"],[153,19,146,19],[153,20,146,20],[153,34,146,34],[153,36,146,36,"JSON"],[153,40,146,40],[153,41,146,41,"stringify"],[153,50,146,50],[153,51,146,51,"updatedSettings"],[153,66,146,66],[153,67,146,67],[153,68,146,68],[154,6,147,6],[154,7,147,7],[154,8,147,8],[154,15,147,15,"error"],[154,20,147,20],[154,22,147,22],[155,8,148,8,"console"],[155,15,148,15],[155,16,148,16,"error"],[155,21,148,21],[155,22,148,22],[155,46,148,46],[155,48,148,48,"error"],[155,53,148,53],[155,54,148,54],[156,6,149,6],[157,4,150,4],[157,5,150,5],[158,4,152,4,"resetSettings"],[158,17,152,17],[158,19,152,19,"resetSettings"],[158,20,152,19],[158,25,152,25],[159,6,153,6,"set"],[159,9,153,9],[159,10,153,10],[160,8,153,12,"settings"],[160,16,153,20],[160,18,153,22,"defaultSettings"],[161,6,153,38],[161,7,153,39],[161,8,153,40],[162,6,154,6,"storage"],[162,13,154,13],[162,14,154,14,"delete"],[162,20,154,20],[162,21,154,21],[162,35,154,35],[162,36,154,36],[163,4,155,4],[163,5,155,5],[164,4,157,4],[165,4,158,4,"isTracking"],[165,14,158,14],[165,16,158,16],[165,21,158,21],[166,4,159,4,"setTracking"],[166,15,159,15],[166,17,159,18,"tracking"],[166,25,159,26],[166,29,159,31,"set"],[166,32,159,34],[166,33,159,35],[167,6,159,37,"isTracking"],[167,16,159,47],[167,18,159,49,"tracking"],[168,4,159,58],[168,5,159,59],[168,6,159,60],[169,4,161,4],[170,4,162,4,"currentLocation"],[170,19,162,19],[170,21,162,21],[170,25,162,25],[171,4,163,4,"locationHistory"],[171,19,163,19],[171,21,163,21],[171,23,163,23],[172,4,165,4,"updateLocation"],[172,18,165,18],[172,20,165,21,"location"],[172,28,165,29],[172,32,165,34],[173,6,166,6],[173,12,166,12],[174,8,166,14,"locationHistory"],[174,23,166,29],[175,8,166,31,"settings"],[176,6,166,40],[176,7,166,41],[176,10,166,44,"get"],[176,13,166,47],[176,14,166,48],[176,15,166,49],[178,6,168,6],[179,6,169,6],[179,12,169,12,"newHistory"],[179,22,169,22],[179,25,169,25],[179,26,169,26],[179,29,169,29,"locationHistory"],[179,44,169,44],[179,45,169,45,"slice"],[179,50,169,50],[179,51,169,51],[179,52,169,52],[179,54,169,54],[179,55,169,55],[179,57,169,57,"location"],[179,65,169,65],[179,66,169,66],[181,6,171,6],[182,6,172,6],[182,12,172,12,"newScore"],[182,20,172,20],[182,23,172,23,"calculateRoadCondition"],[182,45,172,45],[182,46,172,46,"newHistory"],[182,56,172,56],[182,57,172,57],[183,6,174,6,"set"],[183,9,174,9],[183,10,174,10],[184,8,175,8,"currentLocation"],[184,23,175,23],[184,25,175,25,"location"],[184,33,175,33],[185,8,176,8,"locationHistory"],[185,23,176,23],[185,25,176,25,"newHistory"],[185,35,176,35],[186,8,177,8,"roadConditionScore"],[186,26,177,26],[186,28,177,28,"newScore"],[187,6,178,6],[187,7,178,7],[187,8,178,8],[188,4,179,4],[188,5,179,5],[189,4,181,4,"clearLocationHistory"],[189,24,181,24],[189,26,181,26,"clearLocationHistory"],[189,27,181,26],[189,32,181,32,"set"],[189,35,181,35],[189,36,181,36],[190,6,181,38,"locationHistory"],[190,21,181,53],[190,23,181,55],[191,4,181,58],[191,5,181,59],[191,6,181,60],[192,4,183,4],[193,4,184,4,"roadConditionScore"],[193,22,184,22],[193,24,184,24],[193,26,184,26],[194,4,185,4,"updateRoadScore"],[194,19,185,19],[194,21,185,22,"score"],[194,26,185,27],[194,30,185,32,"set"],[194,33,185,35],[194,34,185,36],[195,6,185,38,"roadConditionScore"],[195,24,185,56],[195,26,185,58,"score"],[196,4,185,64],[196,5,185,65],[196,6,185,66],[197,4,187,4],[198,4,188,4,"activeHazards"],[198,17,188,17],[198,19,188,19],[198,21,188,21],[199,4,189,4,"warningHistory"],[199,18,189,18],[199,20,189,20],[199,22,189,22],[200,4,190,4,"lastWarningTime"],[200,19,190,19],[200,21,190,21],[200,22,190,22],[201,4,192,4,"addHazard"],[201,13,192,13],[201,15,192,16,"hazard"],[201,21,192,22],[201,25,192,27],[202,6,193,6],[202,12,193,12],[203,8,193,14,"activeHazards"],[203,21,193,27],[204,8,193,29,"settings"],[205,6,193,38],[205,7,193,39],[205,10,193,42,"get"],[205,13,193,45],[205,14,193,46],[205,15,193,47],[206,6,194,6],[206,12,194,12,"now"],[206,15,194,15],[206,18,194,18,"Date"],[206,22,194,22],[206,23,194,23,"now"],[206,26,194,26],[206,27,194,27],[206,28,194,28],[208,6,196,6],[209,6,197,6],[209,12,197,12,"existingSimilar"],[209,27,197,27],[209,30,197,30,"activeHazards"],[209,43,197,43],[209,44,197,44,"find"],[209,48,197,48],[209,49,197,49,"h"],[209,50,197,50],[209,54,198,8,"h"],[209,55,198,9],[209,56,198,10,"type"],[209,60,198,14],[209,65,198,19,"hazard"],[209,71,198,25],[209,72,198,26,"type"],[209,76,198,30],[209,80,199,8,"fastDistance"],[209,92,199,20],[209,93,199,21,"h"],[209,94,199,22],[209,95,199,23,"latitude"],[209,103,199,31],[209,105,199,33,"h"],[209,106,199,34],[209,107,199,35,"longitude"],[209,116,199,44],[209,118,199,46,"hazard"],[209,124,199,52],[209,125,199,53,"latitude"],[209,133,199,61],[209,135,199,63,"hazard"],[209,141,199,69],[209,142,199,70,"longitude"],[209,151,199,79],[209,152,199,80],[209,155,199,83],[209,158,200,6],[209,159,200,7],[210,6,202,6],[210,10,202,10],[210,11,202,11,"existingSimilar"],[210,26,202,26],[210,28,202,28],[211,8,203,8],[211,14,203,14,"newHazards"],[211,24,203,24],[211,27,203,27],[211,28,203,28],[211,31,203,31,"activeHazards"],[211,44,203,44],[211,46,203,46,"hazard"],[211,52,203,52],[211,53,203,53],[212,8,204,8,"set"],[212,11,204,11],[212,12,204,12],[213,10,205,10,"activeHazards"],[213,23,205,23],[213,25,205,25,"newHazards"],[213,35,205,35],[214,10,206,10,"warningHistory"],[214,24,206,24],[214,26,206,26],[214,27,206,27],[214,30,206,30,"get"],[214,33,206,33],[214,34,206,34],[214,35,206,35],[214,36,206,36,"warningHistory"],[214,50,206,50],[214,52,206,52],[215,12,206,54,"hazard"],[215,18,206,60],[216,12,206,62,"timestamp"],[216,21,206,71],[216,23,206,73,"now"],[217,10,206,77],[217,11,206,78],[217,12,206,79],[217,13,206,80,"slice"],[217,18,206,85],[217,19,206,86],[217,20,206,87],[217,22,206,89],[217,23,206,90],[218,10,206,92],[219,10,207,10,"lastWarningTime"],[219,25,207,25],[219,27,207,27,"now"],[220,8,208,8],[220,9,208,9],[220,10,208,10],[221,6,209,6],[222,4,210,4],[222,5,210,5],[223,4,212,4,"removeHazard"],[223,16,212,16],[223,18,212,19,"hazardId"],[223,26,212,27],[223,30,212,32],[224,6,213,6,"set"],[224,9,213,9],[224,10,213,10],[225,8,214,8,"activeHazards"],[225,21,214,21],[225,23,214,23,"get"],[225,26,214,26],[225,27,214,27],[225,28,214,28],[225,29,214,29,"activeHazards"],[225,42,214,42],[225,43,214,43,"filter"],[225,49,214,49],[225,50,214,50,"h"],[225,51,214,51],[225,55,214,55,"h"],[225,56,214,56],[225,57,214,57,"id"],[225,59,214,59],[225,64,214,64,"hazardId"],[225,72,214,72],[226,6,215,6],[226,7,215,7],[226,8,215,8],[227,4,216,4],[227,5,216,5],[228,4,218,4,"clearHazards"],[228,16,218,16],[228,18,218,18,"clearHazards"],[228,19,218,18],[228,24,218,24,"set"],[228,27,218,27],[228,28,218,28],[229,6,218,30,"activeHazards"],[229,19,218,43],[229,21,218,45],[229,23,218,47],[230,6,218,49,"warningHistory"],[230,20,218,63],[230,22,218,65],[231,4,218,68],[231,5,218,69],[231,6,218,70],[232,4,220,4],[233,4,221,4,"dataProcessingStats"],[233,23,221,23],[233,25,221,25],[234,6,222,6,"totalDataPoints"],[234,21,222,21],[234,23,222,23],[234,24,222,24],[235,6,223,6,"lastSyncTime"],[235,18,223,18],[235,20,223,20],[235,21,223,21],[236,6,224,6,"syncErrors"],[236,16,224,16],[236,18,224,18],[237,4,225,4],[237,5,225,5],[238,4,227,4,"updateStats"],[238,15,227,15],[238,17,227,18,"stats"],[238,22,227,23],[238,26,227,28],[239,6,228,6,"set"],[239,9,228,9],[239,10,228,10],[240,8,229,8,"dataProcessingStats"],[240,27,229,27],[240,29,229,29],[241,10,229,31],[241,13,229,34,"get"],[241,16,229,37],[241,17,229,38],[241,18,229,39],[241,19,229,40,"dataProcessingStats"],[241,38,229,59],[242,10,229,61],[242,13,229,64,"stats"],[243,8,229,70],[244,6,230,6],[244,7,230,7],[244,8,230,8],[245,4,231,4],[246,2,232,2],[246,3,232,3],[246,4,232,4],[246,5,233,0],[246,6,233,1],[248,2,235,0],[249,2,236,0,"useAppStore"],[249,13,236,11],[249,14,236,12,"subscribe"],[249,23,236,21],[249,24,237,3,"state"],[249,29,237,8],[249,33,237,13,"state"],[249,38,237,18],[249,39,237,19,"settings"],[249,47,237,27],[249,49,238,3,"settings"],[249,57,238,11],[249,61,238,16],[250,4,239,4],[250,8,239,8],[251,6,240,6,"storage"],[251,13,240,13],[251,14,240,14,"set"],[251,17,240,17],[251,18,240,18],[251,32,240,32],[251,34,240,34,"JSON"],[251,38,240,38],[251,39,240,39,"stringify"],[251,48,240,48],[251,49,240,49,"settings"],[251,57,240,57],[251,58,240,58],[251,59,240,59],[252,4,241,4],[252,5,241,5],[252,6,241,6],[252,13,241,13,"error"],[252,18,241,18],[252,20,241,20],[253,6,242,6,"console"],[253,13,242,13],[253,14,242,14,"error"],[253,19,242,19],[253,20,242,20],[253,48,242,48],[253,50,242,50,"error"],[253,55,242,55],[253,56,242,56],[254,4,243,4],[255,2,244,2],[255,3,244,3],[255,5,245,2],[256,4,245,4,"equalityFn"],[256,14,245,14],[256,16,245,16,"equalityFn"],[256,17,245,17,"a"],[256,18,245,18],[256,20,245,20,"b"],[256,21,245,21],[256,26,245,26,"JSON"],[256,30,245,30],[256,31,245,31,"stringify"],[256,40,245,40],[256,41,245,41,"a"],[256,42,245,42],[256,43,245,43],[256,48,245,48,"JSON"],[256,52,245,52],[256,53,245,53,"stringify"],[256,62,245,62],[256,63,245,63,"b"],[256,64,245,64],[257,2,245,66],[257,3,246,0],[257,4,246,1],[259,2,248,0],[260,2,249,0,"useAppStore"],[260,13,249,11],[260,14,249,12,"subscribe"],[260,23,249,21],[260,24,250,3,"state"],[260,29,250,8],[260,33,250,13,"state"],[260,38,250,18],[260,39,250,19,"dataProcessingStats"],[260,58,250,38],[260,60,251,3,"stats"],[260,65,251,8],[260,69,251,13],[261,4,252,4],[262,4,253,4],[262,8,253,8,"__DEV__"],[262,15,253,15],[262,17,253,17],[263,6,254,6,"console"],[263,13,254,13],[263,14,254,14,"log"],[263,17,254,17],[263,18,254,18],[263,38,254,38],[263,40,254,40,"stats"],[263,45,254,45],[263,46,254,46],[264,4,255,4],[265,2,256,2],[265,3,257,0],[265,4,257,1],[266,2,259,0],[266,6,259,0,"_default"],[266,14,259,0],[266,17,259,15,"useAppStore"],[266,28,259,26],[267,0,259,27],[267,3]],"functionMap":{"names":["<global>","calculateRoadCondition","recentData.map$argument_0","speedVariations.reduce$argument_0","fastDistance","subscribeWithSelector$argument_0","loadSettings","updateSettings","resetSettings","setTracking","updateLocation","clearLocationHistory","updateRoadScore","addHazard","activeHazards.find$argument_0","removeHazard","get.activeHazards.filter$argument_0","clearHazards","updateStats","subscribe$argument_0","subscribe$argument_1","subscribe$argument_2.equalityFn"],"mappings":"AAA;+BC6F;yCCI;6DDC;mDEG,eF;CDI;4BIG;CJU;wBKI;kBCI;KDY;oBEE;KFS;mBGE;KHG;iBII,2CJ;oBKM;KLc;0BME,kCN;qBOI,6CP;eQO;iDCK;sFDE;KRW;kBUE;kDCE,sBD;KVE;kBYE,oDZ;iBaS;KbI;ILC;EmBK,yBnB;EoBC;GpBM;gBqBC,iDrB;EmBK,oCnB;EoBC;GpBK"},"hasCjsExports":false},"type":"js/module"}]}