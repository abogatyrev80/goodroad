{"dependencies":[{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/awaitAsyncGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"WZI4BLbsoFmfGv92jc0fZy7RWkQ=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/wrapAsyncGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"NV7M0GAEWUGvIKMnZy5Y7CrLwN8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncIterator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"iAa+RToycgxigMSWyQzterF69/I=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./ExpoSQLite","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":38,"index":79}}],"key":"JMBEHx75IUhcsES+gMYZ/XuZotE=","exportNames":["*"],"imports":1}},{"name":"./NativeDatabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":80},"end":{"line":3,"column":54,"index":134}}],"key":"cM0sXe7PyO1BLW+8jY5orQ/nPI0=","exportNames":["*"],"imports":1}},{"name":"./SQLiteSession","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":135},"end":{"line":4,"column":48,"index":183}}],"key":"LHU/jU2mw3wJWz9JoArZGEKMT60=","exportNames":["*"],"imports":1}},{"name":"./SQLiteStatement","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":53,"index":237}}],"key":"Fg1l45pGInPML8KcGatczgkTJMI=","exportNames":["*"],"imports":1}},{"name":"./pathUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":238},"end":{"line":6,"column":49,"index":287}}],"key":"4lTDvlWpJWrPvRfoXTh5A5Zgngw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"SQLiteDatabase\", {\n    enumerable: true,\n    get: function () {\n      return SQLiteDatabase;\n    }\n  });\n  Object.defineProperty(exports, \"defaultDatabaseDirectory\", {\n    enumerable: true,\n    get: function () {\n      return defaultDatabaseDirectory;\n    }\n  });\n  Object.defineProperty(exports, \"bundledExtensions\", {\n    enumerable: true,\n    get: function () {\n      return bundledExtensions;\n    }\n  });\n  exports.openDatabaseAsync = openDatabaseAsync;\n  exports.openDatabaseSync = openDatabaseSync;\n  exports.deserializeDatabaseAsync = deserializeDatabaseAsync;\n  exports.deserializeDatabaseSync = deserializeDatabaseSync;\n  exports.deleteDatabaseAsync = deleteDatabaseAsync;\n  exports.deleteDatabaseSync = deleteDatabaseSync;\n  exports.backupDatabaseAsync = backupDatabaseAsync;\n  exports.backupDatabaseSync = backupDatabaseSync;\n  exports.addDatabaseChangeListener = addDatabaseChangeListener;\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[0], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[1], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersAwaitAsyncGenerator = require(_dependencyMap[5], \"@babel/runtime/helpers/awaitAsyncGenerator\");\n  var _awaitAsyncGenerator = _interopDefault(_babelRuntimeHelpersAwaitAsyncGenerator);\n  var _babelRuntimeHelpersWrapAsyncGenerator = require(_dependencyMap[6], \"@babel/runtime/helpers/wrapAsyncGenerator\");\n  var _wrapAsyncGenerator = _interopDefault(_babelRuntimeHelpersWrapAsyncGenerator);\n  var _babelRuntimeHelpersAsyncIterator = require(_dependencyMap[7], \"@babel/runtime/helpers/asyncIterator\");\n  var _asyncIterator = _interopDefault(_babelRuntimeHelpersAsyncIterator);\n  var _reactNative = require(_dependencyMap[8], \"react-native\");\n  var _ExpoSQLite = require(_dependencyMap[9], \"./ExpoSQLite\");\n  var ExpoSQLite = _interopDefault(_ExpoSQLite);\n  var _NativeDatabase = require(_dependencyMap[10], \"./NativeDatabase\");\n  var _SQLiteSession = require(_dependencyMap[11], \"./SQLiteSession\");\n  var _SQLiteStatement = require(_dependencyMap[12], \"./SQLiteStatement\");\n  var _pathUtils = require(_dependencyMap[13], \"./pathUtils\");\n  /**\n   * A SQLite database.\n   */\n  var SQLiteDatabase = /*#__PURE__*/function () {\n    function SQLiteDatabase(databasePath, options, nativeDatabase) {\n      (0, _classCallCheck.default)(this, SQLiteDatabase);\n      this.databasePath = databasePath;\n      this.options = options;\n      this.nativeDatabase = nativeDatabase;\n    }\n    /**\n     * Asynchronous call to return whether the database is currently in a transaction.\n     */\n    return (0, _createClass.default)(SQLiteDatabase, [{\n      key: \"isInTransactionAsync\",\n      value: function isInTransactionAsync() {\n        return this.nativeDatabase.isInTransactionAsync();\n      }\n      /**\n       * Close the database.\n       */\n    }, {\n      key: \"closeAsync\",\n      value: function closeAsync() {\n        return this.nativeDatabase.closeAsync();\n      }\n      /**\n       * Execute all SQL queries in the supplied string.\n       * > Note: The queries are not escaped for you! Be careful when constructing your queries.\n       *\n       * @param source A string containing all the SQL queries.\n       */\n    }, {\n      key: \"execAsync\",\n      value: function execAsync(source) {\n        return this.nativeDatabase.execAsync(source);\n      }\n      /**\n       * [Serialize the database](https://sqlite.org/c3ref/serialize.html) as `Uint8Array`.\n       *\n       * @param databaseName The name of the current attached databases. The default value is `main` which is the default database name.\n       */\n    }, {\n      key: \"serializeAsync\",\n      value: function serializeAsync() {\n        var databaseName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n        return this.nativeDatabase.serializeAsync(databaseName);\n      }\n      /**\n       * Create a [prepared SQLite statement](https://www.sqlite.org/c3ref/prepare.html).\n       *\n       * @param source A string containing the SQL query.\n       */\n    }, {\n      key: \"prepareAsync\",\n      value: (function () {\n        var _prepareAsync = (0, _asyncToGenerator.default)(function* (source) {\n          var nativeStatement = new ExpoSQLite.default.NativeStatement();\n          yield this.nativeDatabase.prepareAsync(nativeStatement, source);\n          return new _SQLiteStatement.SQLiteStatement(this.nativeDatabase, nativeStatement);\n        });\n        function prepareAsync(_x) {\n          return _prepareAsync.apply(this, arguments);\n        }\n        return prepareAsync;\n      }()\n      /**\n       * Create a new session for the database.\n       * @see [`sqlite3session_create`](https://www.sqlite.org/session/sqlite3session_create.html)\n       * @param dbName The name of the database to create a session for. The default value is `main`.\n       */\n      )\n    }, {\n      key: \"createSessionAsync\",\n      value: (function () {\n        var _createSessionAsync = (0, _asyncToGenerator.default)(function* () {\n          var dbName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n          var nativeSession = new ExpoSQLite.default.NativeSession();\n          yield this.nativeDatabase.createSessionAsync(nativeSession, dbName);\n          return new _SQLiteSession.SQLiteSession(this.nativeDatabase, nativeSession);\n        });\n        function createSessionAsync() {\n          return _createSessionAsync.apply(this, arguments);\n        }\n        return createSessionAsync;\n      }()\n      /**\n       * Load a SQLite extension.\n       * @param libPath The path to the extension library file.\n       * @param entryPoint The entry point of the extension. If not provided, the default entry point is inferred by [`sqlite3_load_extension`](https://www.sqlite.org/c3ref/load_extension.html).\n       *\n       * @platform android\n       * @platform ios\n       * @platform macos\n       * @platform tvos\n       *\n       * @example\n       * ```ts\n       * // Load `sqlite-vec` from `bundledExtensions`. You need to enable `withSQLiteVecExtension` to include `sqlite-vec`.\n       * const extension = SQLite.bundledExtensions['sqlite-vec'];\n       * await db.loadExtensionAsync(extension.libPath, extension.entryPoint);\n       *\n       * // You can also load a custom extension.\n       * await db.loadExtensionAsync('/path/to/extension');\n       * ```\n       */\n      )\n    }, {\n      key: \"loadExtensionAsync\",\n      value: function loadExtensionAsync(libPath, entryPoint) {\n        return this.nativeDatabase.loadExtensionAsync(libPath, entryPoint);\n      }\n      /**\n       * Execute a transaction and automatically commit/rollback based on the `task` result.\n       *\n       * > **Note:** This transaction is not exclusive and can be interrupted by other async queries.\n       *\n       * @example\n       * ```ts\n       * db.withTransactionAsync(async () => {\n       *   await db.execAsync('UPDATE test SET name = \"aaa\"');\n       *\n       *   //\n       *   // We cannot control the order of async/await order, so order of execution is not guaranteed.\n       *   // The following UPDATE query out of transaction may be executed here and break the expectation.\n       *   //\n       *\n       *   const result = await db.getFirstAsync<{ name: string }>('SELECT name FROM Users');\n       *   expect(result?.name).toBe('aaa');\n       * });\n       * db.execAsync('UPDATE test SET name = \"bbb\"');\n       * ```\n       * If you worry about the order of execution, use `withExclusiveTransactionAsync` instead.\n       *\n       * @param task An async function to execute within a transaction.\n       */\n    }, {\n      key: \"withTransactionAsync\",\n      value: (function () {\n        var _withTransactionAsync = (0, _asyncToGenerator.default)(function* (task) {\n          try {\n            yield this.execAsync('BEGIN');\n            yield task();\n            yield this.execAsync('COMMIT');\n          } catch (e) {\n            yield this.execAsync('ROLLBACK');\n            throw e;\n          }\n        });\n        function withTransactionAsync(_x2) {\n          return _withTransactionAsync.apply(this, arguments);\n        }\n        return withTransactionAsync;\n      }()\n      /**\n       * Execute a transaction and automatically commit/rollback based on the `task` result.\n       *\n       * The transaction may be exclusive.\n       * As long as the transaction is converted into a write transaction,\n       * the other async write queries will abort with `database is locked` error.\n       *\n       * > **Note:** This function is not supported on web.\n       *\n       * @param task An async function to execute within a transaction. Any queries inside the transaction must be executed on the `txn` object.\n       * The `txn` object has the same interfaces as the [`SQLiteDatabase`](#sqlitedatabase) object. You can use `txn` like a [`SQLiteDatabase`](#sqlitedatabase) object.\n       *\n       * @platform android\n       * @platform ios\n       * @platform macos\n       * @platform tvos\n       *\n       * @example\n       * ```ts\n       * db.withExclusiveTransactionAsync(async (txn) => {\n       *   await txn.execAsync('UPDATE test SET name = \"aaa\"');\n       * });\n       * ```\n       */\n      )\n    }, {\n      key: \"withExclusiveTransactionAsync\",\n      value: (function () {\n        var _withExclusiveTransactionAsync = (0, _asyncToGenerator.default)(function* (task) {\n          if (_reactNative.Platform.OS === 'web') {\n            throw new Error('withExclusiveTransactionAsync is not supported on web');\n          }\n          var transaction = yield Transaction.createAsync(this);\n          var error;\n          try {\n            yield transaction.execAsync('BEGIN');\n            yield task(transaction);\n            yield transaction.execAsync('COMMIT');\n          } catch (e) {\n            yield transaction.execAsync('ROLLBACK');\n            error = e;\n          } finally {\n            yield transaction.closeAsync();\n          }\n          if (error) {\n            throw error;\n          }\n        });\n        function withExclusiveTransactionAsync(_x3) {\n          return _withExclusiveTransactionAsync.apply(this, arguments);\n        }\n        return withExclusiveTransactionAsync;\n      }()\n      /**\n       * Synchronous call to return whether the database is currently in a transaction.\n       */\n      )\n    }, {\n      key: \"isInTransactionSync\",\n      value: function isInTransactionSync() {\n        return this.nativeDatabase.isInTransactionSync();\n      }\n      /**\n       * Close the database.\n       */\n    }, {\n      key: \"closeSync\",\n      value: function closeSync() {\n        return this.nativeDatabase.closeSync();\n      }\n      /**\n       * Execute all SQL queries in the supplied string.\n       *\n       * > **Note:** The queries are not escaped for you! Be careful when constructing your queries.\n       *\n       * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n       *\n       * @param source A string containing all the SQL queries.\n       */\n    }, {\n      key: \"execSync\",\n      value: function execSync(source) {\n        return this.nativeDatabase.execSync(source);\n      }\n      /**\n       * [Serialize the database](https://sqlite.org/c3ref/serialize.html) as `Uint8Array`.\n       *\n       * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n       *\n       * @param databaseName The name of the current attached databases. The default value is `main` which is the default database name.\n       */\n    }, {\n      key: \"serializeSync\",\n      value: function serializeSync() {\n        var databaseName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n        return this.nativeDatabase.serializeSync(databaseName);\n      }\n      /**\n       * Create a [prepared SQLite statement](https://www.sqlite.org/c3ref/prepare.html).\n       *\n       * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n       *\n       * @param source A string containing the SQL query.\n       */\n    }, {\n      key: \"prepareSync\",\n      value: function prepareSync(source) {\n        var nativeStatement = new ExpoSQLite.default.NativeStatement();\n        this.nativeDatabase.prepareSync(nativeStatement, source);\n        return new _SQLiteStatement.SQLiteStatement(this.nativeDatabase, nativeStatement);\n      }\n      /**\n       * Create a new session for the database.\n       *\n       * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n       *\n       * @see [`sqlite3session_create`](https://www.sqlite.org/session/sqlite3session_create.html)\n       * @param dbName The name of the database to create a session for. The default value is `main`.\n       */\n    }, {\n      key: \"createSessionSync\",\n      value: function createSessionSync() {\n        var dbName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n        var nativeSession = new ExpoSQLite.default.NativeSession();\n        this.nativeDatabase.createSessionSync(nativeSession, dbName);\n        return new _SQLiteSession.SQLiteSession(this.nativeDatabase, nativeSession);\n      }\n      /**\n       * Load a SQLite extension.\n       * @param libPath The path to the extension library file.\n       * @param entryPoint The entry point of the extension. If not provided, the default entry point is inferred by [`sqlite3_load_extension`](https://www.sqlite.org/c3ref/load_extension.html).\n       *\n       * @platform android\n       * @platform ios\n       * @platform macos\n       * @platform tvos\n       *\n       * @example\n       * ```ts\n       * // Load `sqlite-vec` from `bundledExtensions`. You need to enable `withSQLiteVecExtension` to include `sqlite-vec`.\n       * const extension = SQLite.bundledExtensions['sqlite-vec'];\n       * db.loadExtensionSync(extension.libPath, extension.entryPoint);\n       *\n       * // You can also load a custom extension.\n       * db.loadExtensionSync('/path/to/extension');\n       * ```\n          */\n    }, {\n      key: \"loadExtensionSync\",\n      value: function loadExtensionSync(libPath, entryPoint) {\n        this.nativeDatabase.loadExtensionSync(libPath, entryPoint);\n      }\n      /**\n       * Execute a transaction and automatically commit/rollback based on the `task` result.\n       *\n       * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n       *\n       * @param task An async function to execute within a transaction.\n       */\n    }, {\n      key: \"withTransactionSync\",\n      value: function withTransactionSync(task) {\n        try {\n          this.execSync('BEGIN');\n          task();\n          this.execSync('COMMIT');\n        } catch (e) {\n          this.execSync('ROLLBACK');\n          throw e;\n        }\n      }\n    }, {\n      key: \"runAsync\",\n      value: function () {\n        var _runAsync = (0, _asyncToGenerator.default)(function* (source) {\n          var statement = yield this.prepareAsync(source);\n          var result;\n          try {\n            for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              params[_key - 1] = arguments[_key];\n            }\n            result = yield statement.executeAsync(...params);\n          } finally {\n            yield statement.finalizeAsync();\n          }\n          return result;\n        });\n        function runAsync(_x4) {\n          return _runAsync.apply(this, arguments);\n        }\n        return runAsync;\n      }()\n    }, {\n      key: \"getFirstAsync\",\n      value: function () {\n        var _getFirstAsync = (0, _asyncToGenerator.default)(function* (source) {\n          var statement = yield this.prepareAsync(source);\n          var firstRow;\n          try {\n            for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              params[_key2 - 1] = arguments[_key2];\n            }\n            var result = yield statement.executeAsync(...params);\n            firstRow = yield result.getFirstAsync();\n          } finally {\n            yield statement.finalizeAsync();\n          }\n          return firstRow;\n        });\n        function getFirstAsync(_x5) {\n          return _getFirstAsync.apply(this, arguments);\n        }\n        return getFirstAsync;\n      }()\n    }, {\n      key: \"getEachAsync\",\n      value: function getEachAsync(source) {\n        var _this = this;\n        for (var _len3 = arguments.length, params = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          params[_key3 - 1] = arguments[_key3];\n        }\n        return (0, _wrapAsyncGenerator.default)(function* () {\n          var statement = yield (0, _awaitAsyncGenerator.default)(_this.prepareAsync(source));\n          try {\n            var result = yield (0, _awaitAsyncGenerator.default)(statement.executeAsync(...params));\n            var _iteratorAbruptCompletion = false;\n            var _didIteratorError = false;\n            var _iteratorError;\n            try {\n              for (var _iterator = (0, _asyncIterator.default)(result), _step; _iteratorAbruptCompletion = !(_step = yield (0, _awaitAsyncGenerator.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n                var row = _step.value;\n                {\n                  yield row;\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (_iteratorAbruptCompletion && _iterator.return != null) {\n                  yield (0, _awaitAsyncGenerator.default)(_iterator.return());\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n          } finally {\n            yield (0, _awaitAsyncGenerator.default)(statement.finalizeAsync());\n          }\n        })();\n      }\n    }, {\n      key: \"getAllAsync\",\n      value: function () {\n        var _getAllAsync = (0, _asyncToGenerator.default)(function* (source) {\n          var statement = yield this.prepareAsync(source);\n          var allRows;\n          try {\n            for (var _len4 = arguments.length, params = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n              params[_key4 - 1] = arguments[_key4];\n            }\n            var result = yield statement.executeAsync(...params);\n            allRows = yield result.getAllAsync();\n          } finally {\n            yield statement.finalizeAsync();\n          }\n          return allRows;\n        });\n        function getAllAsync(_x6) {\n          return _getAllAsync.apply(this, arguments);\n        }\n        return getAllAsync;\n      }()\n    }, {\n      key: \"runSync\",\n      value: function runSync(source) {\n        var statement = this.prepareSync(source);\n        var result;\n        try {\n          for (var _len5 = arguments.length, params = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n            params[_key5 - 1] = arguments[_key5];\n          }\n          result = statement.executeSync(...params);\n        } finally {\n          statement.finalizeSync();\n        }\n        return result;\n      }\n    }, {\n      key: \"getFirstSync\",\n      value: function getFirstSync(source) {\n        var statement = this.prepareSync(source);\n        var firstRow;\n        try {\n          for (var _len6 = arguments.length, params = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n            params[_key6 - 1] = arguments[_key6];\n          }\n          var result = statement.executeSync(...params);\n          firstRow = result.getFirstSync();\n        } finally {\n          statement.finalizeSync();\n        }\n        return firstRow;\n      }\n    }, {\n      key: \"getEachSync\",\n      value: function* getEachSync(source) {\n        var statement = this.prepareSync(source);\n        try {\n          for (var _len7 = arguments.length, params = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n            params[_key7 - 1] = arguments[_key7];\n          }\n          var result = statement.executeSync(...params);\n          for (var row of result) {\n            yield row;\n          }\n        } finally {\n          statement.finalizeSync();\n        }\n      }\n    }, {\n      key: \"getAllSync\",\n      value: function getAllSync(source) {\n        var statement = this.prepareSync(source);\n        var allRows;\n        try {\n          for (var _len8 = arguments.length, params = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n            params[_key8 - 1] = arguments[_key8];\n          }\n          var result = statement.executeSync(...params);\n          allRows = result.getAllSync();\n        } finally {\n          statement.finalizeSync();\n        }\n        return allRows;\n      }\n      /**\n       * Synchronize the local database with the remote libSQL server.\n       * This method is only available from libSQL integration.\n       */\n    }, {\n      key: \"syncLibSQL\",\n      value: function syncLibSQL() {\n        if (typeof this.nativeDatabase.syncLibSQL !== 'function') {\n          throw new Error('syncLibSQL is not supported in the current environment');\n        }\n        return this.nativeDatabase.syncLibSQL();\n      }\n    }]);\n  }();\n  /**\n   * The default directory for SQLite databases.\n   */\n  var defaultDatabaseDirectory = ExpoSQLite.default.defaultDatabaseDirectory;\n  /**\n   * The pre-bundled SQLite extensions.\n   */\n  var bundledExtensions = ExpoSQLite.default.bundledExtensions;\n  /**\n   * Open a database.\n   *\n   * @param databaseName The name of the database file to open.\n   * @param options Open options.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`. This parameter is not supported on web.\n   */\n  function openDatabaseAsync(_x7, _x8, _x9) {\n    return _openDatabaseAsync.apply(this, arguments);\n  }\n  /**\n   * Open a database.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param databaseName The name of the database file to open.\n   * @param options Open options.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`. This parameter is not supported on web.\n   */\n  function _openDatabaseAsync() {\n    _openDatabaseAsync = (0, _asyncToGenerator.default)(function* (databaseName, options, directory) {\n      var openOptions = options ?? {};\n      var databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n      yield ExpoSQLite.default.ensureDatabasePathExistsAsync(databasePath);\n      var nativeDatabase = new ExpoSQLite.default.NativeDatabase(databasePath, (0, _NativeDatabase.flattenOpenOptions)(openOptions));\n      yield nativeDatabase.initAsync();\n      return new SQLiteDatabase(databasePath, openOptions, nativeDatabase);\n    });\n    return _openDatabaseAsync.apply(this, arguments);\n  }\n  function openDatabaseSync(databaseName, options, directory) {\n    var openOptions = options ?? {};\n    var databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    ExpoSQLite.default.ensureDatabasePathExistsSync(databasePath);\n    var nativeDatabase = new ExpoSQLite.default.NativeDatabase(databasePath, (0, _NativeDatabase.flattenOpenOptions)(openOptions));\n    nativeDatabase.initSync();\n    return new SQLiteDatabase(databasePath, openOptions, nativeDatabase);\n  }\n  /**\n   * Given a `Uint8Array` data and [deserialize to memory database](https://sqlite.org/c3ref/deserialize.html).\n   *\n   * @param serializedData The binary array to deserialize from [`SQLiteDatabase.serializeAsync()`](#serializeasyncdatabasename).\n   * @param options Open options.\n   */\n  function deserializeDatabaseAsync(_x0, _x1) {\n    return _deserializeDatabaseAsync.apply(this, arguments);\n  }\n  /**\n   * Given a `Uint8Array` data and [deserialize to memory database](https://sqlite.org/c3ref/deserialize.html).\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param serializedData The binary array to deserialize from [`SQLiteDatabase.serializeSync()`](#serializesyncdatabasename)\n   * @param options Open options.\n   */\n  function _deserializeDatabaseAsync() {\n    _deserializeDatabaseAsync = (0, _asyncToGenerator.default)(function* (serializedData, options) {\n      var openOptions = options ?? {};\n      var nativeDatabase = new ExpoSQLite.default.NativeDatabase(':memory:', (0, _NativeDatabase.flattenOpenOptions)(openOptions), serializedData);\n      yield nativeDatabase.initAsync();\n      return new SQLiteDatabase(':memory:', openOptions, nativeDatabase);\n    });\n    return _deserializeDatabaseAsync.apply(this, arguments);\n  }\n  function deserializeDatabaseSync(serializedData, options) {\n    var openOptions = options ?? {};\n    var nativeDatabase = new ExpoSQLite.default.NativeDatabase(':memory:', (0, _NativeDatabase.flattenOpenOptions)(openOptions), serializedData);\n    nativeDatabase.initSync();\n    return new SQLiteDatabase(':memory:', openOptions, nativeDatabase);\n  }\n  /**\n   * Delete a database file.\n   *\n   * @param databaseName The name of the database file to delete.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`.\n   */\n  function deleteDatabaseAsync(_x10, _x11) {\n    return _deleteDatabaseAsync.apply(this, arguments);\n  }\n  /**\n   * Delete a database file.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @param databaseName The name of the database file to delete.\n   * @param directory The directory where the database file is located. The default value is `defaultDatabaseDirectory`.\n   */\n  function _deleteDatabaseAsync() {\n    _deleteDatabaseAsync = (0, _asyncToGenerator.default)(function* (databaseName, directory) {\n      var databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n      return yield ExpoSQLite.default.deleteDatabaseAsync(databasePath);\n    });\n    return _deleteDatabaseAsync.apply(this, arguments);\n  }\n  function deleteDatabaseSync(databaseName, directory) {\n    var databasePath = (0, _pathUtils.createDatabasePath)(databaseName, directory);\n    return ExpoSQLite.default.deleteDatabaseSync(databasePath);\n  }\n  /**\n   * Backup a database to another database.\n   *\n   * @see https://www.sqlite.org/c3ref/backup_finish.html\n   *\n   * @param options - The backup options\n   * @param options.sourceDatabase - The source database to backup from\n   * @param options.sourceDatabaseName - The name of the source database. The default value is `main`\n   * @param options.destDatabase - The destination database to backup to\n   * @param options.destDatabaseName - The name of the destination database. The default value is `m\n   */\n  function backupDatabaseAsync(_ref) {\n    var sourceDatabase = _ref.sourceDatabase,\n      sourceDatabaseName = _ref.sourceDatabaseName,\n      destDatabase = _ref.destDatabase,\n      destDatabaseName = _ref.destDatabaseName;\n    return ExpoSQLite.default.backupDatabaseAsync(destDatabase.nativeDatabase, destDatabaseName ?? 'main', sourceDatabase.nativeDatabase, sourceDatabaseName ?? 'main');\n  }\n  /**\n   * Backup a database to another database.\n   *\n   * > **Note:** Running heavy tasks with this function can block the JavaScript thread and affect performance.\n   *\n   * @see https://www.sqlite.org/c3ref/backup_finish.html\n   *\n   * @param options - The backup options\n   * @param options.sourceDatabase - The source database to backup from\n   * @param options.sourceDatabaseName - The name of the source database. The default value is `main`\n   * @param options.destDatabase - The destination database to backup to\n   * @param options.destDatabaseName - The name of the destination database. The default value is `m\n   */\n  function backupDatabaseSync(_ref2) {\n    var sourceDatabase = _ref2.sourceDatabase,\n      sourceDatabaseName = _ref2.sourceDatabaseName,\n      destDatabase = _ref2.destDatabase,\n      destDatabaseName = _ref2.destDatabaseName;\n    return ExpoSQLite.default.backupDatabaseSync(destDatabase.nativeDatabase, destDatabaseName ?? 'main', sourceDatabase.nativeDatabase, sourceDatabaseName ?? 'main');\n  }\n  /**\n   * Add a listener for database changes.\n   * > Note: to enable this feature, you must set [`enableChangeListener` to `true`](#sqliteopenoptions) when opening the database.\n   *\n   * @param listener A function that receives the `databaseName`, `databaseFilePath`, `tableName` and `rowId` of the modified data.\n   * @returns A `Subscription` object that you can call `remove()` on when you would like to unsubscribe the listener.\n   */\n  function addDatabaseChangeListener(listener) {\n    return ExpoSQLite.default.addListener('onDatabaseChange', listener);\n  }\n  /**\n   * A new connection specific used for [`withExclusiveTransactionAsync`](#withexclusivetransactionasynctask).\n   * @hidden not going to pull all the database methods to the document.\n   */\n  var Transaction = /*#__PURE__*/function (_SQLiteDatabase) {\n    function Transaction() {\n      (0, _classCallCheck.default)(this, Transaction);\n      return (0, _callSuper.default)(this, Transaction, arguments);\n    }\n    (0, _inherits.default)(Transaction, _SQLiteDatabase);\n    return (0, _createClass.default)(Transaction, null, [{\n      key: \"createAsync\",\n      value: function () {\n        var _createAsync = (0, _asyncToGenerator.default)(function* (db) {\n          var options = {\n            ...db.options,\n            useNewConnection: true\n          };\n          var nativeDatabase = new ExpoSQLite.default.NativeDatabase(db.databasePath, (0, _NativeDatabase.flattenOpenOptions)(options));\n          yield nativeDatabase.initAsync();\n          return new Transaction(db.databasePath, options, nativeDatabase);\n        });\n        function createAsync(_x12) {\n          return _createAsync.apply(this, arguments);\n        }\n        return createAsync;\n      }()\n    }]);\n  }(SQLiteDatabase);\n});","lineCount":752,"map":[[12,2,10,0,"Object"],[12,8,10,0],[12,9,10,0,"defineProperty"],[12,23,10,0],[12,24,10,0,"exports"],[12,31,10,0],[13,4,10,0,"enumerable"],[13,14,10,0],[14,4,10,0,"get"],[14,7,10,0],[14,18,10,0,"get"],[14,19,10,0],[15,6,10,0],[15,13,10,0,"SQLiteDatabase"],[15,27,10,0],[16,4,10,0],[17,2,10,0],[18,2,381,0,"Object"],[18,8,381,0],[18,9,381,0,"defineProperty"],[18,23,381,0],[18,24,381,0,"exports"],[18,31,381,0],[19,4,381,0,"enumerable"],[19,14,381,0],[20,4,381,0,"get"],[20,7,381,0],[20,18,381,0,"get"],[20,19,381,0],[21,6,381,0],[21,13,381,0,"defaultDatabaseDirectory"],[21,37,381,0],[22,4,381,0],[23,2,381,0],[24,2,385,0,"Object"],[24,8,385,0],[24,9,385,0,"defineProperty"],[24,23,385,0],[24,24,385,0,"exports"],[24,31,385,0],[25,4,385,0,"enumerable"],[25,14,385,0],[26,4,385,0,"get"],[26,7,385,0],[26,18,385,0,"get"],[26,19,385,0],[27,6,385,0],[27,13,385,0,"bundledExtensions"],[27,30,385,0],[28,4,385,0],[29,2,385,0],[30,2,393,0,"exports"],[30,9,393,0],[30,10,393,0,"openDatabaseAsync"],[30,27,393,0],[30,30,393,0,"openDatabaseAsync"],[30,47,393,0],[31,2,410,0,"exports"],[31,9,410,0],[31,10,410,0,"openDatabaseSync"],[31,26,410,0],[31,29,410,0,"openDatabaseSync"],[31,45,410,0],[32,2,424,0,"exports"],[32,9,424,0],[32,10,424,0,"deserializeDatabaseAsync"],[32,34,424,0],[32,37,424,0,"deserializeDatabaseAsync"],[32,61,424,0],[33,2,438,0,"exports"],[33,9,438,0],[33,10,438,0,"deserializeDatabaseSync"],[33,33,438,0],[33,36,438,0,"deserializeDatabaseSync"],[33,59,438,0],[34,2,450,0,"exports"],[34,9,450,0],[34,10,450,0,"deleteDatabaseAsync"],[34,29,450,0],[34,32,450,0,"deleteDatabaseAsync"],[34,51,450,0],[35,2,462,0,"exports"],[35,9,462,0],[35,10,462,0,"deleteDatabaseSync"],[35,28,462,0],[35,31,462,0,"deleteDatabaseSync"],[35,49,462,0],[36,2,477,0,"exports"],[36,9,477,0],[36,10,477,0,"backupDatabaseAsync"],[36,29,477,0],[36,32,477,0,"backupDatabaseAsync"],[36,51,477,0],[37,2,493,0,"exports"],[37,9,493,0],[37,10,493,0,"backupDatabaseSync"],[37,28,493,0],[37,31,493,0,"backupDatabaseSync"],[37,49,493,0],[38,2,503,0,"exports"],[38,9,503,0],[38,10,503,0,"addDatabaseChangeListener"],[38,35,503,0],[38,38,503,0,"addDatabaseChangeListener"],[38,63,503,0],[39,2,505,1],[39,6,505,1,"_babelRuntimeHelpersCallSuper"],[39,35,505,1],[39,38,505,1,"require"],[39,45,505,1],[39,46,505,1,"_dependencyMap"],[39,60,505,1],[40,2,505,1],[40,6,505,1,"_callSuper"],[40,16,505,1],[40,19,505,1,"_interopDefault"],[40,34,505,1],[40,35,505,1,"_babelRuntimeHelpersCallSuper"],[40,64,505,1],[41,2,505,1],[41,6,505,1,"_babelRuntimeHelpersInherits"],[41,34,505,1],[41,37,505,1,"require"],[41,44,505,1],[41,45,505,1,"_dependencyMap"],[41,59,505,1],[42,2,505,1],[42,6,505,1,"_inherits"],[42,15,505,1],[42,18,505,1,"_interopDefault"],[42,33,505,1],[42,34,505,1,"_babelRuntimeHelpersInherits"],[42,62,505,1],[43,2,505,1],[43,6,505,1,"_babelRuntimeHelpersAsyncToGenerator"],[43,42,505,1],[43,45,505,1,"require"],[43,52,505,1],[43,53,505,1,"_dependencyMap"],[43,67,505,1],[44,2,505,1],[44,6,505,1,"_asyncToGenerator"],[44,23,505,1],[44,26,505,1,"_interopDefault"],[44,41,505,1],[44,42,505,1,"_babelRuntimeHelpersAsyncToGenerator"],[44,78,505,1],[45,2,505,1],[45,6,505,1,"_babelRuntimeHelpersClassCallCheck"],[45,40,505,1],[45,43,505,1,"require"],[45,50,505,1],[45,51,505,1,"_dependencyMap"],[45,65,505,1],[46,2,505,1],[46,6,505,1,"_classCallCheck"],[46,21,505,1],[46,24,505,1,"_interopDefault"],[46,39,505,1],[46,40,505,1,"_babelRuntimeHelpersClassCallCheck"],[46,74,505,1],[47,2,505,1],[47,6,505,1,"_babelRuntimeHelpersCreateClass"],[47,37,505,1],[47,40,505,1,"require"],[47,47,505,1],[47,48,505,1,"_dependencyMap"],[47,62,505,1],[48,2,505,1],[48,6,505,1,"_createClass"],[48,18,505,1],[48,21,505,1,"_interopDefault"],[48,36,505,1],[48,37,505,1,"_babelRuntimeHelpersCreateClass"],[48,68,505,1],[49,2,505,1],[49,6,505,1,"_babelRuntimeHelpersAwaitAsyncGenerator"],[49,45,505,1],[49,48,505,1,"require"],[49,55,505,1],[49,56,505,1,"_dependencyMap"],[49,70,505,1],[50,2,505,1],[50,6,505,1,"_awaitAsyncGenerator"],[50,26,505,1],[50,29,505,1,"_interopDefault"],[50,44,505,1],[50,45,505,1,"_babelRuntimeHelpersAwaitAsyncGenerator"],[50,84,505,1],[51,2,505,1],[51,6,505,1,"_babelRuntimeHelpersWrapAsyncGenerator"],[51,44,505,1],[51,47,505,1,"require"],[51,54,505,1],[51,55,505,1,"_dependencyMap"],[51,69,505,1],[52,2,505,1],[52,6,505,1,"_wrapAsyncGenerator"],[52,25,505,1],[52,28,505,1,"_interopDefault"],[52,43,505,1],[52,44,505,1,"_babelRuntimeHelpersWrapAsyncGenerator"],[52,82,505,1],[53,2,505,1],[53,6,505,1,"_babelRuntimeHelpersAsyncIterator"],[53,39,505,1],[53,42,505,1,"require"],[53,49,505,1],[53,50,505,1,"_dependencyMap"],[53,64,505,1],[54,2,505,1],[54,6,505,1,"_asyncIterator"],[54,20,505,1],[54,23,505,1,"_interopDefault"],[54,38,505,1],[54,39,505,1,"_babelRuntimeHelpersAsyncIterator"],[54,72,505,1],[55,2,1,0],[55,6,1,0,"_reactNative"],[55,18,1,0],[55,21,1,0,"require"],[55,28,1,0],[55,29,1,0,"_dependencyMap"],[55,43,1,0],[56,2,2,0],[56,6,2,0,"_ExpoSQLite"],[56,17,2,0],[56,20,2,0,"require"],[56,27,2,0],[56,28,2,0,"_dependencyMap"],[56,42,2,0],[57,2,2,0],[57,6,2,0,"ExpoSQLite"],[57,16,2,0],[57,19,2,0,"_interopDefault"],[57,34,2,0],[57,35,2,0,"_ExpoSQLite"],[57,46,2,0],[58,2,3,0],[58,6,3,0,"_NativeDatabase"],[58,21,3,0],[58,24,3,0,"require"],[58,31,3,0],[58,32,3,0,"_dependencyMap"],[58,46,3,0],[59,2,4,0],[59,6,4,0,"_SQLiteSession"],[59,20,4,0],[59,23,4,0,"require"],[59,30,4,0],[59,31,4,0,"_dependencyMap"],[59,45,4,0],[60,2,5,0],[60,6,5,0,"_SQLiteStatement"],[60,22,5,0],[60,25,5,0,"require"],[60,32,5,0],[60,33,5,0,"_dependencyMap"],[60,47,5,0],[61,2,6,0],[61,6,6,0,"_pathUtils"],[61,16,6,0],[61,19,6,0,"require"],[61,26,6,0],[61,27,6,0,"_dependencyMap"],[61,41,6,0],[62,2,7,0],[63,0,8,0],[64,0,9,0],[65,2,7,0],[65,6,10,13,"SQLiteDatabase"],[65,20,10,27],[66,4,14,4],[66,13,14,4,"SQLiteDatabase"],[66,28,14,16,"databasePath"],[66,40,14,28],[66,42,14,30,"options"],[66,49,14,37],[66,51,14,39,"nativeDatabase"],[66,65,14,53],[66,67,14,55],[67,6,14,55],[67,10,14,55,"_classCallCheck"],[67,25,14,55],[67,26,14,55,"default"],[67,33,14,55],[67,41,14,55,"SQLiteDatabase"],[67,55,14,55],[68,6,15,8],[68,10,15,12],[68,11,15,13,"databasePath"],[68,23,15,25],[68,26,15,28,"databasePath"],[68,38,15,40],[69,6,16,8],[69,10,16,12],[69,11,16,13,"options"],[69,18,16,20],[69,21,16,23,"options"],[69,28,16,30],[70,6,17,8],[70,10,17,12],[70,11,17,13,"nativeDatabase"],[70,25,17,27],[70,28,17,30,"nativeDatabase"],[70,42,17,44],[71,4,18,4],[72,4,19,4],[73,0,20,0],[74,0,21,0],[75,4,19,4],[75,15,19,4,"_createClass"],[75,27,19,4],[75,28,19,4,"default"],[75,35,19,4],[75,37,19,4,"SQLiteDatabase"],[75,51,19,4],[76,6,19,4,"key"],[76,9,19,4],[77,6,19,4,"value"],[77,11,19,4],[77,13,22,4],[77,22,22,4,"isInTransactionAsync"],[77,42,22,24,"isInTransactionAsync"],[77,43,22,24],[77,45,22,27],[78,8,23,8],[78,15,23,15],[78,19,23,19],[78,20,23,20,"nativeDatabase"],[78,34,23,34],[78,35,23,35,"isInTransactionAsync"],[78,55,23,55],[78,56,23,56],[78,57,23,57],[79,6,24,4],[80,6,25,4],[81,0,26,0],[82,0,27,0],[83,4,25,4],[84,6,25,4,"key"],[84,9,25,4],[85,6,25,4,"value"],[85,11,25,4],[85,13,28,4],[85,22,28,4,"closeAsync"],[85,32,28,14,"closeAsync"],[85,33,28,14],[85,35,28,17],[86,8,29,8],[86,15,29,15],[86,19,29,19],[86,20,29,20,"nativeDatabase"],[86,34,29,34],[86,35,29,35,"closeAsync"],[86,45,29,45],[86,46,29,46],[86,47,29,47],[87,6,30,4],[88,6,31,4],[89,0,32,0],[90,0,33,0],[91,0,34,0],[92,0,35,0],[93,0,36,0],[94,4,31,4],[95,6,31,4,"key"],[95,9,31,4],[96,6,31,4,"value"],[96,11,31,4],[96,13,37,4],[96,22,37,4,"execAsync"],[96,31,37,13,"execAsync"],[96,32,37,14,"source"],[96,38,37,20],[96,40,37,22],[97,8,38,8],[97,15,38,15],[97,19,38,19],[97,20,38,20,"nativeDatabase"],[97,34,38,34],[97,35,38,35,"execAsync"],[97,44,38,44],[97,45,38,45,"source"],[97,51,38,51],[97,52,38,52],[98,6,39,4],[99,6,40,4],[100,0,41,0],[101,0,42,0],[102,0,43,0],[103,0,44,0],[104,4,40,4],[105,6,40,4,"key"],[105,9,40,4],[106,6,40,4,"value"],[106,11,40,4],[106,13,45,4],[106,22,45,4,"serializeAsync"],[106,36,45,18,"serializeAsync"],[106,37,45,18],[106,39,45,42],[107,8,45,42],[107,12,45,19,"databaseName"],[107,24,45,31],[107,27,45,31,"arguments"],[107,36,45,31],[107,37,45,31,"length"],[107,43,45,31],[107,51,45,31,"arguments"],[107,60,45,31],[107,68,45,31,"undefined"],[107,77,45,31],[107,80,45,31,"arguments"],[107,89,45,31],[107,95,45,34],[107,101,45,40],[108,8,46,8],[108,15,46,15],[108,19,46,19],[108,20,46,20,"nativeDatabase"],[108,34,46,34],[108,35,46,35,"serializeAsync"],[108,49,46,49],[108,50,46,50,"databaseName"],[108,62,46,62],[108,63,46,63],[109,6,47,4],[110,6,48,4],[111,0,49,0],[112,0,50,0],[113,0,51,0],[114,0,52,0],[115,4,48,4],[116,6,48,4,"key"],[116,9,48,4],[117,6,48,4,"value"],[117,11,48,4],[118,8,48,4],[118,12,48,4,"_prepareAsync"],[118,25,48,4],[118,32,48,4,"_asyncToGenerator"],[118,49,48,4],[118,50,48,4,"default"],[118,57,48,4],[118,59,53,4],[118,70,53,23,"source"],[118,76,53,29],[118,78,53,31],[119,10,54,8],[119,14,54,14,"nativeStatement"],[119,29,54,29],[119,32,54,32],[119,36,54,36,"ExpoSQLite"],[119,46,54,46],[119,47,54,46,"default"],[119,54,54,46],[119,55,54,47,"NativeStatement"],[119,70,54,62],[119,71,54,63],[119,72,54,64],[120,10,55,8],[120,16,55,14],[120,20,55,18],[120,21,55,19,"nativeDatabase"],[120,35,55,33],[120,36,55,34,"prepareAsync"],[120,48,55,46],[120,49,55,47,"nativeStatement"],[120,64,55,62],[120,66,55,64,"source"],[120,72,55,70],[120,73,55,71],[121,10,56,8],[121,17,56,15],[121,21,56,19,"SQLiteStatement"],[121,37,56,34],[121,38,56,34,"SQLiteStatement"],[121,53,56,34],[121,54,56,35],[121,58,56,39],[121,59,56,40,"nativeDatabase"],[121,73,56,54],[121,75,56,56,"nativeStatement"],[121,90,56,71],[121,91,56,72],[122,8,57,4],[122,9,57,5],[123,8,57,5],[123,17,53,10,"prepareAsync"],[123,29,53,22,"prepareAsync"],[123,30,53,22,"_x"],[123,32,53,22],[124,10,53,22],[124,17,53,22,"_prepareAsync"],[124,30,53,22],[124,31,53,22,"apply"],[124,36,53,22],[124,43,53,22,"arguments"],[124,52,53,22],[125,8,53,22],[126,8,53,22],[126,15,53,10,"prepareAsync"],[126,27,53,22],[127,6,53,22],[128,6,58,4],[129,0,59,0],[130,0,60,0],[131,0,61,0],[132,0,62,0],[133,6,58,4],[134,4,58,4],[135,6,58,4,"key"],[135,9,58,4],[136,6,58,4,"value"],[136,11,58,4],[137,8,58,4],[137,12,58,4,"_createSessionAsync"],[137,31,58,4],[137,38,58,4,"_asyncToGenerator"],[137,55,58,4],[137,56,58,4,"default"],[137,63,58,4],[137,65,63,4],[137,78,63,46],[138,10,63,46],[138,14,63,29,"dbName"],[138,20,63,35],[138,23,63,35,"arguments"],[138,32,63,35],[138,33,63,35,"length"],[138,39,63,35],[138,47,63,35,"arguments"],[138,56,63,35],[138,64,63,35,"undefined"],[138,73,63,35],[138,76,63,35,"arguments"],[138,85,63,35],[138,91,63,38],[138,97,63,44],[139,10,64,8],[139,14,64,14,"nativeSession"],[139,27,64,27],[139,30,64,30],[139,34,64,34,"ExpoSQLite"],[139,44,64,44],[139,45,64,44,"default"],[139,52,64,44],[139,53,64,45,"NativeSession"],[139,66,64,58],[139,67,64,59],[139,68,64,60],[140,10,65,8],[140,16,65,14],[140,20,65,18],[140,21,65,19,"nativeDatabase"],[140,35,65,33],[140,36,65,34,"createSessionAsync"],[140,54,65,52],[140,55,65,53,"nativeSession"],[140,68,65,66],[140,70,65,68,"dbName"],[140,76,65,74],[140,77,65,75],[141,10,66,8],[141,17,66,15],[141,21,66,19,"SQLiteSession"],[141,35,66,32],[141,36,66,32,"SQLiteSession"],[141,49,66,32],[141,50,66,33],[141,54,66,37],[141,55,66,38,"nativeDatabase"],[141,69,66,52],[141,71,66,54,"nativeSession"],[141,84,66,67],[141,85,66,68],[142,8,67,4],[142,9,67,5],[143,8,67,5],[143,17,63,10,"createSessionAsync"],[143,35,63,28,"createSessionAsync"],[143,36,63,28],[144,10,63,28],[144,17,63,28,"_createSessionAsync"],[144,36,63,28],[144,37,63,28,"apply"],[144,42,63,28],[144,49,63,28,"arguments"],[144,58,63,28],[145,8,63,28],[146,8,63,28],[146,15,63,10,"createSessionAsync"],[146,33,63,28],[147,6,63,28],[148,6,68,4],[149,0,69,0],[150,0,70,0],[151,0,71,0],[152,0,72,0],[153,0,73,0],[154,0,74,0],[155,0,75,0],[156,0,76,0],[157,0,77,0],[158,0,78,0],[159,0,79,0],[160,0,80,0],[161,0,81,0],[162,0,82,0],[163,0,83,0],[164,0,84,0],[165,0,85,0],[166,0,86,0],[167,0,87,0],[168,6,68,4],[169,4,68,4],[170,6,68,4,"key"],[170,9,68,4],[171,6,68,4,"value"],[171,11,68,4],[171,13,88,4],[171,22,88,4,"loadExtensionAsync"],[171,40,88,22,"loadExtensionAsync"],[171,41,88,23,"libPath"],[171,48,88,30],[171,50,88,32,"entryPoint"],[171,60,88,42],[171,62,88,44],[172,8,89,8],[172,15,89,15],[172,19,89,19],[172,20,89,20,"nativeDatabase"],[172,34,89,34],[172,35,89,35,"loadExtensionAsync"],[172,53,89,53],[172,54,89,54,"libPath"],[172,61,89,61],[172,63,89,63,"entryPoint"],[172,73,89,73],[172,74,89,74],[173,6,90,4],[174,6,91,4],[175,0,92,0],[176,0,93,0],[177,0,94,0],[178,0,95,0],[179,0,96,0],[180,0,97,0],[181,0,98,0],[182,0,99,0],[183,0,100,0],[184,0,101,0],[185,0,102,0],[186,0,103,0],[187,0,104,0],[188,0,105,0],[189,0,106,0],[190,0,107,0],[191,0,108,0],[192,0,109,0],[193,0,110,0],[194,0,111,0],[195,0,112,0],[196,0,113,0],[197,0,114,0],[198,4,91,4],[199,6,91,4,"key"],[199,9,91,4],[200,6,91,4,"value"],[200,11,91,4],[201,8,91,4],[201,12,91,4,"_withTransactionAsync"],[201,33,91,4],[201,40,91,4,"_asyncToGenerator"],[201,57,91,4],[201,58,91,4,"default"],[201,65,91,4],[201,67,115,4],[201,78,115,31,"task"],[201,82,115,35],[201,84,115,37],[202,10,116,8],[202,14,116,12],[203,12,117,12],[203,18,117,18],[203,22,117,22],[203,23,117,23,"execAsync"],[203,32,117,32],[203,33,117,33],[203,40,117,40],[203,41,117,41],[204,12,118,12],[204,18,118,18,"task"],[204,22,118,22],[204,23,118,23],[204,24,118,24],[205,12,119,12],[205,18,119,18],[205,22,119,22],[205,23,119,23,"execAsync"],[205,32,119,32],[205,33,119,33],[205,41,119,41],[205,42,119,42],[206,10,120,8],[206,11,120,9],[206,12,121,8],[206,19,121,15,"e"],[206,20,121,16],[206,22,121,18],[207,12,122,12],[207,18,122,18],[207,22,122,22],[207,23,122,23,"execAsync"],[207,32,122,32],[207,33,122,33],[207,43,122,43],[207,44,122,44],[208,12,123,12],[208,18,123,18,"e"],[208,19,123,19],[209,10,124,8],[210,8,125,4],[210,9,125,5],[211,8,125,5],[211,17,115,10,"withTransactionAsync"],[211,37,115,30,"withTransactionAsync"],[211,38,115,30,"_x2"],[211,41,115,30],[212,10,115,30],[212,17,115,30,"_withTransactionAsync"],[212,38,115,30],[212,39,115,30,"apply"],[212,44,115,30],[212,51,115,30,"arguments"],[212,60,115,30],[213,8,115,30],[214,8,115,30],[214,15,115,10,"withTransactionAsync"],[214,35,115,30],[215,6,115,30],[216,6,126,4],[217,0,127,0],[218,0,128,0],[219,0,129,0],[220,0,130,0],[221,0,131,0],[222,0,132,0],[223,0,133,0],[224,0,134,0],[225,0,135,0],[226,0,136,0],[227,0,137,0],[228,0,138,0],[229,0,139,0],[230,0,140,0],[231,0,141,0],[232,0,142,0],[233,0,143,0],[234,0,144,0],[235,0,145,0],[236,0,146,0],[237,0,147,0],[238,0,148,0],[239,0,149,0],[240,6,126,4],[241,4,126,4],[242,6,126,4,"key"],[242,9,126,4],[243,6,126,4,"value"],[243,11,126,4],[244,8,126,4],[244,12,126,4,"_withExclusiveTransactionAsync"],[244,42,126,4],[244,49,126,4,"_asyncToGenerator"],[244,66,126,4],[244,67,126,4,"default"],[244,74,126,4],[244,76,150,4],[244,87,150,40,"task"],[244,91,150,44],[244,93,150,46],[245,10,151,8],[245,14,151,12,"Platform"],[245,26,151,20],[245,27,151,20,"Platform"],[245,35,151,20],[245,36,151,21,"OS"],[245,38,151,23],[245,43,151,28],[245,48,151,33],[245,50,151,35],[246,12,152,12],[246,18,152,18],[246,22,152,22,"Error"],[246,27,152,27],[246,28,152,28],[246,83,152,83],[246,84,152,84],[247,10,153,8],[248,10,154,8],[248,14,154,14,"transaction"],[248,25,154,25],[248,34,154,34,"Transaction"],[248,45,154,45],[248,46,154,46,"createAsync"],[248,57,154,57],[248,58,154,58],[248,62,154,62],[248,63,154,63],[249,10,155,8],[249,14,155,12,"error"],[249,19,155,17],[250,10,156,8],[250,14,156,12],[251,12,157,12],[251,18,157,18,"transaction"],[251,29,157,29],[251,30,157,30,"execAsync"],[251,39,157,39],[251,40,157,40],[251,47,157,47],[251,48,157,48],[252,12,158,12],[252,18,158,18,"task"],[252,22,158,22],[252,23,158,23,"transaction"],[252,34,158,34],[252,35,158,35],[253,12,159,12],[253,18,159,18,"transaction"],[253,29,159,29],[253,30,159,30,"execAsync"],[253,39,159,39],[253,40,159,40],[253,48,159,48],[253,49,159,49],[254,10,160,8],[254,11,160,9],[254,12,161,8],[254,19,161,15,"e"],[254,20,161,16],[254,22,161,18],[255,12,162,12],[255,18,162,18,"transaction"],[255,29,162,29],[255,30,162,30,"execAsync"],[255,39,162,39],[255,40,162,40],[255,50,162,50],[255,51,162,51],[256,12,163,12,"error"],[256,17,163,17],[256,20,163,20,"e"],[256,21,163,21],[257,10,164,8],[257,11,164,9],[257,20,165,16],[258,12,166,12],[258,18,166,18,"transaction"],[258,29,166,29],[258,30,166,30,"closeAsync"],[258,40,166,40],[258,41,166,41],[258,42,166,42],[259,10,167,8],[260,10,168,8],[260,14,168,12,"error"],[260,19,168,17],[260,21,168,19],[261,12,169,12],[261,18,169,18,"error"],[261,23,169,23],[262,10,170,8],[263,8,171,4],[263,9,171,5],[264,8,171,5],[264,17,150,10,"withExclusiveTransactionAsync"],[264,46,150,39,"withExclusiveTransactionAsync"],[264,47,150,39,"_x3"],[264,50,150,39],[265,10,150,39],[265,17,150,39,"_withExclusiveTransactionAsync"],[265,47,150,39],[265,48,150,39,"apply"],[265,53,150,39],[265,60,150,39,"arguments"],[265,69,150,39],[266,8,150,39],[267,8,150,39],[267,15,150,10,"withExclusiveTransactionAsync"],[267,44,150,39],[268,6,150,39],[269,6,172,4],[270,0,173,0],[271,0,174,0],[272,6,172,4],[273,4,172,4],[274,6,172,4,"key"],[274,9,172,4],[275,6,172,4,"value"],[275,11,172,4],[275,13,175,4],[275,22,175,4,"isInTransactionSync"],[275,41,175,23,"isInTransactionSync"],[275,42,175,23],[275,44,175,26],[276,8,176,8],[276,15,176,15],[276,19,176,19],[276,20,176,20,"nativeDatabase"],[276,34,176,34],[276,35,176,35,"isInTransactionSync"],[276,54,176,54],[276,55,176,55],[276,56,176,56],[277,6,177,4],[278,6,178,4],[279,0,179,0],[280,0,180,0],[281,4,178,4],[282,6,178,4,"key"],[282,9,178,4],[283,6,178,4,"value"],[283,11,178,4],[283,13,181,4],[283,22,181,4,"closeSync"],[283,31,181,13,"closeSync"],[283,32,181,13],[283,34,181,16],[284,8,182,8],[284,15,182,15],[284,19,182,19],[284,20,182,20,"nativeDatabase"],[284,34,182,34],[284,35,182,35,"closeSync"],[284,44,182,44],[284,45,182,45],[284,46,182,46],[285,6,183,4],[286,6,184,4],[287,0,185,0],[288,0,186,0],[289,0,187,0],[290,0,188,0],[291,0,189,0],[292,0,190,0],[293,0,191,0],[294,0,192,0],[295,4,184,4],[296,6,184,4,"key"],[296,9,184,4],[297,6,184,4,"value"],[297,11,184,4],[297,13,193,4],[297,22,193,4,"execSync"],[297,30,193,12,"execSync"],[297,31,193,13,"source"],[297,37,193,19],[297,39,193,21],[298,8,194,8],[298,15,194,15],[298,19,194,19],[298,20,194,20,"nativeDatabase"],[298,34,194,34],[298,35,194,35,"execSync"],[298,43,194,43],[298,44,194,44,"source"],[298,50,194,50],[298,51,194,51],[299,6,195,4],[300,6,196,4],[301,0,197,0],[302,0,198,0],[303,0,199,0],[304,0,200,0],[305,0,201,0],[306,0,202,0],[307,4,196,4],[308,6,196,4,"key"],[308,9,196,4],[309,6,196,4,"value"],[309,11,196,4],[309,13,203,4],[309,22,203,4,"serializeSync"],[309,35,203,17,"serializeSync"],[309,36,203,17],[309,38,203,41],[310,8,203,41],[310,12,203,18,"databaseName"],[310,24,203,30],[310,27,203,30,"arguments"],[310,36,203,30],[310,37,203,30,"length"],[310,43,203,30],[310,51,203,30,"arguments"],[310,60,203,30],[310,68,203,30,"undefined"],[310,77,203,30],[310,80,203,30,"arguments"],[310,89,203,30],[310,95,203,33],[310,101,203,39],[311,8,204,8],[311,15,204,15],[311,19,204,19],[311,20,204,20,"nativeDatabase"],[311,34,204,34],[311,35,204,35,"serializeSync"],[311,48,204,48],[311,49,204,49,"databaseName"],[311,61,204,61],[311,62,204,62],[312,6,205,4],[313,6,206,4],[314,0,207,0],[315,0,208,0],[316,0,209,0],[317,0,210,0],[318,0,211,0],[319,0,212,0],[320,4,206,4],[321,6,206,4,"key"],[321,9,206,4],[322,6,206,4,"value"],[322,11,206,4],[322,13,213,4],[322,22,213,4,"prepareSync"],[322,33,213,15,"prepareSync"],[322,34,213,16,"source"],[322,40,213,22],[322,42,213,24],[323,8,214,8],[323,12,214,14,"nativeStatement"],[323,27,214,29],[323,30,214,32],[323,34,214,36,"ExpoSQLite"],[323,44,214,46],[323,45,214,46,"default"],[323,52,214,46],[323,53,214,47,"NativeStatement"],[323,68,214,62],[323,69,214,63],[323,70,214,64],[324,8,215,8],[324,12,215,12],[324,13,215,13,"nativeDatabase"],[324,27,215,27],[324,28,215,28,"prepareSync"],[324,39,215,39],[324,40,215,40,"nativeStatement"],[324,55,215,55],[324,57,215,57,"source"],[324,63,215,63],[324,64,215,64],[325,8,216,8],[325,15,216,15],[325,19,216,19,"SQLiteStatement"],[325,35,216,34],[325,36,216,34,"SQLiteStatement"],[325,51,216,34],[325,52,216,35],[325,56,216,39],[325,57,216,40,"nativeDatabase"],[325,71,216,54],[325,73,216,56,"nativeStatement"],[325,88,216,71],[325,89,216,72],[326,6,217,4],[327,6,218,4],[328,0,219,0],[329,0,220,0],[330,0,221,0],[331,0,222,0],[332,0,223,0],[333,0,224,0],[334,0,225,0],[335,4,218,4],[336,6,218,4,"key"],[336,9,218,4],[337,6,218,4,"value"],[337,11,218,4],[337,13,226,4],[337,22,226,4,"createSessionSync"],[337,39,226,21,"createSessionSync"],[337,40,226,21],[337,42,226,39],[338,8,226,39],[338,12,226,22,"dbName"],[338,18,226,28],[338,21,226,28,"arguments"],[338,30,226,28],[338,31,226,28,"length"],[338,37,226,28],[338,45,226,28,"arguments"],[338,54,226,28],[338,62,226,28,"undefined"],[338,71,226,28],[338,74,226,28,"arguments"],[338,83,226,28],[338,89,226,31],[338,95,226,37],[339,8,227,8],[339,12,227,14,"nativeSession"],[339,25,227,27],[339,28,227,30],[339,32,227,34,"ExpoSQLite"],[339,42,227,44],[339,43,227,44,"default"],[339,50,227,44],[339,51,227,45,"NativeSession"],[339,64,227,58],[339,65,227,59],[339,66,227,60],[340,8,228,8],[340,12,228,12],[340,13,228,13,"nativeDatabase"],[340,27,228,27],[340,28,228,28,"createSessionSync"],[340,45,228,45],[340,46,228,46,"nativeSession"],[340,59,228,59],[340,61,228,61,"dbName"],[340,67,228,67],[340,68,228,68],[341,8,229,8],[341,15,229,15],[341,19,229,19,"SQLiteSession"],[341,33,229,32],[341,34,229,32,"SQLiteSession"],[341,47,229,32],[341,48,229,33],[341,52,229,37],[341,53,229,38,"nativeDatabase"],[341,67,229,52],[341,69,229,54,"nativeSession"],[341,82,229,67],[341,83,229,68],[342,6,230,4],[343,6,231,4],[344,0,232,0],[345,0,233,0],[346,0,234,0],[347,0,235,0],[348,0,236,0],[349,0,237,0],[350,0,238,0],[351,0,239,0],[352,0,240,0],[353,0,241,0],[354,0,242,0],[355,0,243,0],[356,0,244,0],[357,0,245,0],[358,0,246,0],[359,0,247,0],[360,0,248,0],[361,0,249,0],[362,0,250,0],[363,4,231,4],[364,6,231,4,"key"],[364,9,231,4],[365,6,231,4,"value"],[365,11,231,4],[365,13,252,4],[365,22,252,4,"loadExtensionSync"],[365,39,252,21,"loadExtensionSync"],[365,40,252,22,"libPath"],[365,47,252,29],[365,49,252,31,"entryPoint"],[365,59,252,41],[365,61,252,43],[366,8,253,8],[366,12,253,12],[366,13,253,13,"nativeDatabase"],[366,27,253,27],[366,28,253,28,"loadExtensionSync"],[366,45,253,45],[366,46,253,46,"libPath"],[366,53,253,53],[366,55,253,55,"entryPoint"],[366,65,253,65],[366,66,253,66],[367,6,254,4],[368,6,255,4],[369,0,256,0],[370,0,257,0],[371,0,258,0],[372,0,259,0],[373,0,260,0],[374,0,261,0],[375,4,255,4],[376,6,255,4,"key"],[376,9,255,4],[377,6,255,4,"value"],[377,11,255,4],[377,13,262,4],[377,22,262,4,"withTransactionSync"],[377,41,262,23,"withTransactionSync"],[377,42,262,24,"task"],[377,46,262,28],[377,48,262,30],[378,8,263,8],[378,12,263,12],[379,10,264,12],[379,14,264,16],[379,15,264,17,"execSync"],[379,23,264,25],[379,24,264,26],[379,31,264,33],[379,32,264,34],[380,10,265,12,"task"],[380,14,265,16],[380,15,265,17],[380,16,265,18],[381,10,266,12],[381,14,266,16],[381,15,266,17,"execSync"],[381,23,266,25],[381,24,266,26],[381,32,266,34],[381,33,266,35],[382,8,267,8],[382,9,267,9],[382,10,268,8],[382,17,268,15,"e"],[382,18,268,16],[382,20,268,18],[383,10,269,12],[383,14,269,16],[383,15,269,17,"execSync"],[383,23,269,25],[383,24,269,26],[383,34,269,36],[383,35,269,37],[384,10,270,12],[384,16,270,18,"e"],[384,17,270,19],[385,8,271,8],[386,6,272,4],[387,4,272,5],[388,6,272,5,"key"],[388,9,272,5],[389,6,272,5,"value"],[389,11,272,5],[390,8,272,5],[390,12,272,5,"_runAsync"],[390,21,272,5],[390,28,272,5,"_asyncToGenerator"],[390,45,272,5],[390,46,272,5,"default"],[390,53,272,5],[390,55,273,4],[390,66,273,19,"source"],[390,72,273,25],[390,74,273,38],[391,10,274,8],[391,14,274,14,"statement"],[391,23,274,23],[391,32,274,32],[391,36,274,36],[391,37,274,37,"prepareAsync"],[391,49,274,49],[391,50,274,50,"source"],[391,56,274,56],[391,57,274,57],[392,10,275,8],[392,14,275,12,"result"],[392,20,275,18],[393,10,276,8],[393,14,276,12],[394,12,276,12],[394,21,276,12,"_len"],[394,25,276,12],[394,28,276,12,"arguments"],[394,37,276,12],[394,38,276,12,"length"],[394,44,276,12],[394,46,273,30,"params"],[394,52,273,36],[394,59,273,36,"Array"],[394,64,273,36],[394,65,273,36,"_len"],[394,69,273,36],[394,76,273,36,"_len"],[394,80,273,36],[394,91,273,36,"_key"],[394,95,273,36],[394,101,273,36,"_key"],[394,105,273,36],[394,108,273,36,"_len"],[394,112,273,36],[394,114,273,36,"_key"],[394,118,273,36],[395,14,273,30,"params"],[395,20,273,36],[395,21,273,36,"_key"],[395,25,273,36],[395,33,273,36,"arguments"],[395,42,273,36],[395,43,273,36,"_key"],[395,47,273,36],[396,12,273,36],[397,12,277,12,"result"],[397,18,277,18],[397,27,277,27,"statement"],[397,36,277,36],[397,37,277,37,"executeAsync"],[397,49,277,49],[397,50,277,50],[397,53,277,53,"params"],[397,59,277,59],[397,60,277,60],[398,10,278,8],[398,11,278,9],[398,20,279,16],[399,12,280,12],[399,18,280,18,"statement"],[399,27,280,27],[399,28,280,28,"finalizeAsync"],[399,41,280,41],[399,42,280,42],[399,43,280,43],[400,10,281,8],[401,10,282,8],[401,17,282,15,"result"],[401,23,282,21],[402,8,283,4],[402,9,283,5],[403,8,283,5],[403,17,273,10,"runAsync"],[403,25,273,18,"runAsync"],[403,26,273,18,"_x4"],[403,29,273,18],[404,10,273,18],[404,17,273,18,"_runAsync"],[404,26,273,18],[404,27,273,18,"apply"],[404,32,273,18],[404,39,273,18,"arguments"],[404,48,273,18],[405,8,273,18],[406,8,273,18],[406,15,273,10,"runAsync"],[406,23,273,18],[407,6,273,18],[408,4,273,18],[409,6,273,18,"key"],[409,9,273,18],[410,6,273,18,"value"],[410,11,273,18],[411,8,273,18],[411,12,273,18,"_getFirstAsync"],[411,26,273,18],[411,33,273,18,"_asyncToGenerator"],[411,50,273,18],[411,51,273,18,"default"],[411,58,273,18],[411,60,284,4],[411,71,284,24,"source"],[411,77,284,30],[411,79,284,43],[412,10,285,8],[412,14,285,14,"statement"],[412,23,285,23],[412,32,285,32],[412,36,285,36],[412,37,285,37,"prepareAsync"],[412,49,285,49],[412,50,285,50,"source"],[412,56,285,56],[412,57,285,57],[413,10,286,8],[413,14,286,12,"firstRow"],[413,22,286,20],[414,10,287,8],[414,14,287,12],[415,12,287,12],[415,21,287,12,"_len2"],[415,26,287,12],[415,29,287,12,"arguments"],[415,38,287,12],[415,39,287,12,"length"],[415,45,287,12],[415,47,284,35,"params"],[415,53,284,41],[415,60,284,41,"Array"],[415,65,284,41],[415,66,284,41,"_len2"],[415,71,284,41],[415,78,284,41,"_len2"],[415,83,284,41],[415,94,284,41,"_key2"],[415,99,284,41],[415,105,284,41,"_key2"],[415,110,284,41],[415,113,284,41,"_len2"],[415,118,284,41],[415,120,284,41,"_key2"],[415,125,284,41],[416,14,284,35,"params"],[416,20,284,41],[416,21,284,41,"_key2"],[416,26,284,41],[416,34,284,41,"arguments"],[416,43,284,41],[416,44,284,41,"_key2"],[416,49,284,41],[417,12,284,41],[418,12,288,12],[418,16,288,18,"result"],[418,22,288,24],[418,31,288,33,"statement"],[418,40,288,42],[418,41,288,43,"executeAsync"],[418,53,288,55],[418,54,288,56],[418,57,288,59,"params"],[418,63,288,65],[418,64,288,66],[419,12,289,12,"firstRow"],[419,20,289,20],[419,29,289,29,"result"],[419,35,289,35],[419,36,289,36,"getFirstAsync"],[419,49,289,49],[419,50,289,50],[419,51,289,51],[420,10,290,8],[420,11,290,9],[420,20,291,16],[421,12,292,12],[421,18,292,18,"statement"],[421,27,292,27],[421,28,292,28,"finalizeAsync"],[421,41,292,41],[421,42,292,42],[421,43,292,43],[422,10,293,8],[423,10,294,8],[423,17,294,15,"firstRow"],[423,25,294,23],[424,8,295,4],[424,9,295,5],[425,8,295,5],[425,17,284,10,"getFirstAsync"],[425,30,284,23,"getFirstAsync"],[425,31,284,23,"_x5"],[425,34,284,23],[426,10,284,23],[426,17,284,23,"_getFirstAsync"],[426,31,284,23],[426,32,284,23,"apply"],[426,37,284,23],[426,44,284,23,"arguments"],[426,53,284,23],[427,8,284,23],[428,8,284,23],[428,15,284,10,"getFirstAsync"],[428,28,284,23],[429,6,284,23],[430,4,284,23],[431,6,284,23,"key"],[431,9,284,23],[432,6,284,23,"value"],[432,11,284,23],[432,13,296,4],[432,22,296,11,"getEachAsync"],[432,34,296,23,"getEachAsync"],[432,35,296,24,"source"],[432,41,296,30],[432,43,296,43],[433,8,296,43],[433,12,296,43,"_this"],[433,17,296,43],[434,8,296,43],[434,17,296,43,"_len3"],[434,22,296,43],[434,25,296,43,"arguments"],[434,34,296,43],[434,35,296,43,"length"],[434,41,296,43],[434,43,296,35,"params"],[434,49,296,41],[434,56,296,41,"Array"],[434,61,296,41],[434,62,296,41,"_len3"],[434,67,296,41],[434,74,296,41,"_len3"],[434,79,296,41],[434,90,296,41,"_key3"],[434,95,296,41],[434,101,296,41,"_key3"],[434,106,296,41],[434,109,296,41,"_len3"],[434,114,296,41],[434,116,296,41,"_key3"],[434,121,296,41],[435,10,296,35,"params"],[435,16,296,41],[435,17,296,41,"_key3"],[435,22,296,41],[435,30,296,41,"arguments"],[435,39,296,41],[435,40,296,41,"_key3"],[435,45,296,41],[436,8,296,41],[437,8,296,41],[437,19,296,41,"_wrapAsyncGenerator"],[437,38,296,41],[437,39,296,41,"default"],[437,46,296,41],[438,10,297,8],[438,14,297,14,"statement"],[438,23,297,23],[438,36,297,23,"_awaitAsyncGenerator"],[438,56,297,23],[438,57,297,23,"default"],[438,64,297,23],[438,66,297,32,"_this"],[438,71,297,36],[438,72,297,37,"prepareAsync"],[438,84,297,49],[438,85,297,50,"source"],[438,91,297,56],[438,92,297,57],[439,10,298,8],[439,14,298,12],[440,12,299,12],[440,16,299,18,"result"],[440,22,299,24],[440,35,299,24,"_awaitAsyncGenerator"],[440,55,299,24],[440,56,299,24,"default"],[440,63,299,24],[440,65,299,33,"statement"],[440,74,299,42],[440,75,299,43,"executeAsync"],[440,87,299,55],[440,88,299,56],[440,91,299,59,"params"],[440,97,299,65],[440,98,299,66],[441,12,299,67],[441,16,299,67,"_iteratorAbruptCompletion"],[441,41,299,67],[442,12,299,67],[442,16,299,67,"_didIteratorError"],[442,33,299,67],[443,12,299,67],[443,16,299,67,"_iteratorError"],[443,30,299,67],[444,12,299,67],[445,14,300,12],[445,23,300,12,"_iterator"],[445,32,300,12],[445,39,300,12,"_asyncIterator"],[445,53,300,12],[445,54,300,12,"default"],[445,61,300,12],[445,63,300,36,"result"],[445,69,300,42],[445,72,300,42,"_step"],[445,77,300,42],[445,79,300,42,"_iteratorAbruptCompletion"],[445,104,300,42],[445,109,300,42,"_step"],[445,114,300,42],[445,127,300,42,"_awaitAsyncGenerator"],[445,147,300,42],[445,148,300,42,"default"],[445,155,300,42],[445,157,300,42,"_iterator"],[445,166,300,42],[445,167,300,42,"next"],[445,171,300,42],[445,176,300,42,"done"],[445,180,300,42],[445,182,300,42,"_iteratorAbruptCompletion"],[445,207,300,42],[445,217,300,44],[446,16,300,44],[446,20,300,29,"row"],[446,23,300,32],[446,26,300,32,"_step"],[446,31,300,32],[446,32,300,32,"value"],[446,37,300,32],[447,16,300,32],[448,18,301,16],[448,24,301,22,"row"],[448,27,301,25],[449,16,301,26],[450,14,302,12],[451,12,302,13],[451,21,302,13,"err"],[451,24,302,13],[452,14,302,13,"_didIteratorError"],[452,31,302,13],[453,14,302,13,"_iteratorError"],[453,28,302,13],[453,31,302,13,"err"],[453,34,302,13],[454,12,302,13],[455,14,302,13],[456,16,302,13],[456,20,302,13,"_iteratorAbruptCompletion"],[456,45,302,13],[456,49,302,13,"_iterator"],[456,58,302,13],[456,59,302,13,"return"],[456,65,302,13],[457,18,302,13],[457,28,302,13,"_awaitAsyncGenerator"],[457,48,302,13],[457,49,302,13,"default"],[457,56,302,13],[457,58,302,13,"_iterator"],[457,67,302,13],[457,68,302,13,"return"],[457,74,302,13],[458,16,302,13],[459,14,302,13],[460,16,302,13],[460,20,302,13,"_didIteratorError"],[460,37,302,13],[461,18,302,13],[461,24,302,13,"_iteratorError"],[461,38,302,13],[462,16,302,13],[463,14,302,13],[464,12,302,13],[465,10,303,8],[465,11,303,9],[465,20,304,16],[466,12,305,12],[466,22,305,12,"_awaitAsyncGenerator"],[466,42,305,12],[466,43,305,12,"default"],[466,50,305,12],[466,52,305,18,"statement"],[466,61,305,27],[466,62,305,28,"finalizeAsync"],[466,75,305,41],[466,76,305,42],[466,77,305,43],[467,10,306,8],[468,8,306,9],[469,6,307,4],[470,4,307,5],[471,6,307,5,"key"],[471,9,307,5],[472,6,307,5,"value"],[472,11,307,5],[473,8,307,5],[473,12,307,5,"_getAllAsync"],[473,24,307,5],[473,31,307,5,"_asyncToGenerator"],[473,48,307,5],[473,49,307,5,"default"],[473,56,307,5],[473,58,308,4],[473,69,308,22,"source"],[473,75,308,28],[473,77,308,41],[474,10,309,8],[474,14,309,14,"statement"],[474,23,309,23],[474,32,309,32],[474,36,309,36],[474,37,309,37,"prepareAsync"],[474,49,309,49],[474,50,309,50,"source"],[474,56,309,56],[474,57,309,57],[475,10,310,8],[475,14,310,12,"allRows"],[475,21,310,19],[476,10,311,8],[476,14,311,12],[477,12,311,12],[477,21,311,12,"_len4"],[477,26,311,12],[477,29,311,12,"arguments"],[477,38,311,12],[477,39,311,12,"length"],[477,45,311,12],[477,47,308,33,"params"],[477,53,308,39],[477,60,308,39,"Array"],[477,65,308,39],[477,66,308,39,"_len4"],[477,71,308,39],[477,78,308,39,"_len4"],[477,83,308,39],[477,94,308,39,"_key4"],[477,99,308,39],[477,105,308,39,"_key4"],[477,110,308,39],[477,113,308,39,"_len4"],[477,118,308,39],[477,120,308,39,"_key4"],[477,125,308,39],[478,14,308,33,"params"],[478,20,308,39],[478,21,308,39,"_key4"],[478,26,308,39],[478,34,308,39,"arguments"],[478,43,308,39],[478,44,308,39,"_key4"],[478,49,308,39],[479,12,308,39],[480,12,312,12],[480,16,312,18,"result"],[480,22,312,24],[480,31,312,33,"statement"],[480,40,312,42],[480,41,312,43,"executeAsync"],[480,53,312,55],[480,54,312,56],[480,57,312,59,"params"],[480,63,312,65],[480,64,312,66],[481,12,313,12,"allRows"],[481,19,313,19],[481,28,313,28,"result"],[481,34,313,34],[481,35,313,35,"getAllAsync"],[481,46,313,46],[481,47,313,47],[481,48,313,48],[482,10,314,8],[482,11,314,9],[482,20,315,16],[483,12,316,12],[483,18,316,18,"statement"],[483,27,316,27],[483,28,316,28,"finalizeAsync"],[483,41,316,41],[483,42,316,42],[483,43,316,43],[484,10,317,8],[485,10,318,8],[485,17,318,15,"allRows"],[485,24,318,22],[486,8,319,4],[486,9,319,5],[487,8,319,5],[487,17,308,10,"getAllAsync"],[487,28,308,21,"getAllAsync"],[487,29,308,21,"_x6"],[487,32,308,21],[488,10,308,21],[488,17,308,21,"_getAllAsync"],[488,29,308,21],[488,30,308,21,"apply"],[488,35,308,21],[488,42,308,21,"arguments"],[488,51,308,21],[489,8,308,21],[490,8,308,21],[490,15,308,10,"getAllAsync"],[490,26,308,21],[491,6,308,21],[492,4,308,21],[493,6,308,21,"key"],[493,9,308,21],[494,6,308,21,"value"],[494,11,308,21],[494,13,320,4],[494,22,320,4,"runSync"],[494,29,320,11,"runSync"],[494,30,320,12,"source"],[494,36,320,18],[494,38,320,31],[495,8,321,8],[495,12,321,14,"statement"],[495,21,321,23],[495,24,321,26],[495,28,321,30],[495,29,321,31,"prepareSync"],[495,40,321,42],[495,41,321,43,"source"],[495,47,321,49],[495,48,321,50],[496,8,322,8],[496,12,322,12,"result"],[496,18,322,18],[497,8,323,8],[497,12,323,12],[498,10,323,12],[498,19,323,12,"_len5"],[498,24,323,12],[498,27,323,12,"arguments"],[498,36,323,12],[498,37,323,12,"length"],[498,43,323,12],[498,45,320,23,"params"],[498,51,320,29],[498,58,320,29,"Array"],[498,63,320,29],[498,64,320,29,"_len5"],[498,69,320,29],[498,76,320,29,"_len5"],[498,81,320,29],[498,92,320,29,"_key5"],[498,97,320,29],[498,103,320,29,"_key5"],[498,108,320,29],[498,111,320,29,"_len5"],[498,116,320,29],[498,118,320,29,"_key5"],[498,123,320,29],[499,12,320,23,"params"],[499,18,320,29],[499,19,320,29,"_key5"],[499,24,320,29],[499,32,320,29,"arguments"],[499,41,320,29],[499,42,320,29,"_key5"],[499,47,320,29],[500,10,320,29],[501,10,324,12,"result"],[501,16,324,18],[501,19,324,21,"statement"],[501,28,324,30],[501,29,324,31,"executeSync"],[501,40,324,42],[501,41,324,43],[501,44,324,46,"params"],[501,50,324,52],[501,51,324,53],[502,8,325,8],[502,9,325,9],[502,18,326,16],[503,10,327,12,"statement"],[503,19,327,21],[503,20,327,22,"finalizeSync"],[503,32,327,34],[503,33,327,35],[503,34,327,36],[504,8,328,8],[505,8,329,8],[505,15,329,15,"result"],[505,21,329,21],[506,6,330,4],[507,4,330,5],[508,6,330,5,"key"],[508,9,330,5],[509,6,330,5,"value"],[509,11,330,5],[509,13,331,4],[509,22,331,4,"getFirstSync"],[509,34,331,16,"getFirstSync"],[509,35,331,17,"source"],[509,41,331,23],[509,43,331,36],[510,8,332,8],[510,12,332,14,"statement"],[510,21,332,23],[510,24,332,26],[510,28,332,30],[510,29,332,31,"prepareSync"],[510,40,332,42],[510,41,332,43,"source"],[510,47,332,49],[510,48,332,50],[511,8,333,8],[511,12,333,12,"firstRow"],[511,20,333,20],[512,8,334,8],[512,12,334,12],[513,10,334,12],[513,19,334,12,"_len6"],[513,24,334,12],[513,27,334,12,"arguments"],[513,36,334,12],[513,37,334,12,"length"],[513,43,334,12],[513,45,331,28,"params"],[513,51,331,34],[513,58,331,34,"Array"],[513,63,331,34],[513,64,331,34,"_len6"],[513,69,331,34],[513,76,331,34,"_len6"],[513,81,331,34],[513,92,331,34,"_key6"],[513,97,331,34],[513,103,331,34,"_key6"],[513,108,331,34],[513,111,331,34,"_len6"],[513,116,331,34],[513,118,331,34,"_key6"],[513,123,331,34],[514,12,331,28,"params"],[514,18,331,34],[514,19,331,34,"_key6"],[514,24,331,34],[514,32,331,34,"arguments"],[514,41,331,34],[514,42,331,34,"_key6"],[514,47,331,34],[515,10,331,34],[516,10,335,12],[516,14,335,18,"result"],[516,20,335,24],[516,23,335,27,"statement"],[516,32,335,36],[516,33,335,37,"executeSync"],[516,44,335,48],[516,45,335,49],[516,48,335,52,"params"],[516,54,335,58],[516,55,335,59],[517,10,336,12,"firstRow"],[517,18,336,20],[517,21,336,23,"result"],[517,27,336,29],[517,28,336,30,"getFirstSync"],[517,40,336,42],[517,41,336,43],[517,42,336,44],[518,8,337,8],[518,9,337,9],[518,18,338,16],[519,10,339,12,"statement"],[519,19,339,21],[519,20,339,22,"finalizeSync"],[519,32,339,34],[519,33,339,35],[519,34,339,36],[520,8,340,8],[521,8,341,8],[521,15,341,15,"firstRow"],[521,23,341,23],[522,6,342,4],[523,4,342,5],[524,6,342,5,"key"],[524,9,342,5],[525,6,342,5,"value"],[525,11,342,5],[525,13,343,4],[525,23,343,5,"getEachSync"],[525,34,343,16,"getEachSync"],[525,35,343,17,"source"],[525,41,343,23],[525,43,343,36],[526,8,344,8],[526,12,344,14,"statement"],[526,21,344,23],[526,24,344,26],[526,28,344,30],[526,29,344,31,"prepareSync"],[526,40,344,42],[526,41,344,43,"source"],[526,47,344,49],[526,48,344,50],[527,8,345,8],[527,12,345,12],[528,10,345,12],[528,19,345,12,"_len7"],[528,24,345,12],[528,27,345,12,"arguments"],[528,36,345,12],[528,37,345,12,"length"],[528,43,345,12],[528,45,343,28,"params"],[528,51,343,34],[528,58,343,34,"Array"],[528,63,343,34],[528,64,343,34,"_len7"],[528,69,343,34],[528,76,343,34,"_len7"],[528,81,343,34],[528,92,343,34,"_key7"],[528,97,343,34],[528,103,343,34,"_key7"],[528,108,343,34],[528,111,343,34,"_len7"],[528,116,343,34],[528,118,343,34,"_key7"],[528,123,343,34],[529,12,343,28,"params"],[529,18,343,34],[529,19,343,34,"_key7"],[529,24,343,34],[529,32,343,34,"arguments"],[529,41,343,34],[529,42,343,34,"_key7"],[529,47,343,34],[530,10,343,34],[531,10,346,12],[531,14,346,18,"result"],[531,20,346,24],[531,23,346,27,"statement"],[531,32,346,36],[531,33,346,37,"executeSync"],[531,44,346,48],[531,45,346,49],[531,48,346,52,"params"],[531,54,346,58],[531,55,346,59],[532,10,347,12],[532,15,347,17],[532,19,347,23,"row"],[532,22,347,26],[532,26,347,30,"result"],[532,32,347,36],[532,34,347,38],[533,12,348,16],[533,18,348,22,"row"],[533,21,348,25],[534,10,349,12],[535,8,350,8],[535,9,350,9],[535,18,351,16],[536,10,352,12,"statement"],[536,19,352,21],[536,20,352,22,"finalizeSync"],[536,32,352,34],[536,33,352,35],[536,34,352,36],[537,8,353,8],[538,6,354,4],[539,4,354,5],[540,6,354,5,"key"],[540,9,354,5],[541,6,354,5,"value"],[541,11,354,5],[541,13,355,4],[541,22,355,4,"getAllSync"],[541,32,355,14,"getAllSync"],[541,33,355,15,"source"],[541,39,355,21],[541,41,355,34],[542,8,356,8],[542,12,356,14,"statement"],[542,21,356,23],[542,24,356,26],[542,28,356,30],[542,29,356,31,"prepareSync"],[542,40,356,42],[542,41,356,43,"source"],[542,47,356,49],[542,48,356,50],[543,8,357,8],[543,12,357,12,"allRows"],[543,19,357,19],[544,8,358,8],[544,12,358,12],[545,10,358,12],[545,19,358,12,"_len8"],[545,24,358,12],[545,27,358,12,"arguments"],[545,36,358,12],[545,37,358,12,"length"],[545,43,358,12],[545,45,355,26,"params"],[545,51,355,32],[545,58,355,32,"Array"],[545,63,355,32],[545,64,355,32,"_len8"],[545,69,355,32],[545,76,355,32,"_len8"],[545,81,355,32],[545,92,355,32,"_key8"],[545,97,355,32],[545,103,355,32,"_key8"],[545,108,355,32],[545,111,355,32,"_len8"],[545,116,355,32],[545,118,355,32,"_key8"],[545,123,355,32],[546,12,355,26,"params"],[546,18,355,32],[546,19,355,32,"_key8"],[546,24,355,32],[546,32,355,32,"arguments"],[546,41,355,32],[546,42,355,32,"_key8"],[546,47,355,32],[547,10,355,32],[548,10,359,12],[548,14,359,18,"result"],[548,20,359,24],[548,23,359,27,"statement"],[548,32,359,36],[548,33,359,37,"executeSync"],[548,44,359,48],[548,45,359,49],[548,48,359,52,"params"],[548,54,359,58],[548,55,359,59],[549,10,360,12,"allRows"],[549,17,360,19],[549,20,360,22,"result"],[549,26,360,28],[549,27,360,29,"getAllSync"],[549,37,360,39],[549,38,360,40],[549,39,360,41],[550,8,361,8],[550,9,361,9],[550,18,362,16],[551,10,363,12,"statement"],[551,19,363,21],[551,20,363,22,"finalizeSync"],[551,32,363,34],[551,33,363,35],[551,34,363,36],[552,8,364,8],[553,8,365,8],[553,15,365,15,"allRows"],[553,22,365,22],[554,6,366,4],[555,6,367,4],[556,0,368,0],[557,0,369,0],[558,0,370,0],[559,4,367,4],[560,6,367,4,"key"],[560,9,367,4],[561,6,367,4,"value"],[561,11,367,4],[561,13,371,4],[561,22,371,4,"syncLibSQL"],[561,32,371,14,"syncLibSQL"],[561,33,371,14],[561,35,371,17],[562,8,372,8],[562,12,372,12],[562,19,372,19],[562,23,372,23],[562,24,372,24,"nativeDatabase"],[562,38,372,38],[562,39,372,39,"syncLibSQL"],[562,49,372,49],[562,54,372,54],[562,64,372,64],[562,66,372,66],[563,10,373,12],[563,16,373,18],[563,20,373,22,"Error"],[563,25,373,27],[563,26,373,28],[563,82,373,84],[563,83,373,85],[564,8,374,8],[565,8,375,8],[565,15,375,15],[565,19,375,19],[565,20,375,20,"nativeDatabase"],[565,34,375,34],[565,35,375,35,"syncLibSQL"],[565,45,375,45],[565,46,375,46],[565,47,375,47],[566,6,376,4],[567,4,376,5],[568,2,376,5],[569,2,378,0],[570,0,379,0],[571,0,380,0],[572,2,381,7],[572,6,381,13,"defaultDatabaseDirectory"],[572,30,381,37],[572,33,381,40,"ExpoSQLite"],[572,43,381,50],[572,44,381,50,"default"],[572,51,381,50],[572,52,381,51,"defaultDatabaseDirectory"],[572,76,381,75],[573,2,382,0],[574,0,383,0],[575,0,384,0],[576,2,385,7],[576,6,385,13,"bundledExtensions"],[576,23,385,30],[576,26,385,33,"ExpoSQLite"],[576,36,385,43],[576,37,385,43,"default"],[576,44,385,43],[576,45,385,44,"bundledExtensions"],[576,62,385,61],[577,2,386,0],[578,0,387,0],[579,0,388,0],[580,0,389,0],[581,0,390,0],[582,0,391,0],[583,0,392,0],[584,2,386,0],[584,11,393,22,"openDatabaseAsync"],[584,28,393,39,"openDatabaseAsync"],[584,29,393,39,"_x7"],[584,32,393,39],[584,34,393,39,"_x8"],[584,37,393,39],[584,39,393,39,"_x9"],[584,42,393,39],[585,4,393,39],[585,11,393,39,"_openDatabaseAsync"],[585,29,393,39],[585,30,393,39,"apply"],[585,35,393,39],[585,42,393,39,"arguments"],[585,51,393,39],[586,2,393,39],[587,2,401,0],[588,0,402,0],[589,0,403,0],[590,0,404,0],[591,0,405,0],[592,0,406,0],[593,0,407,0],[594,0,408,0],[595,0,409,0],[596,2,401,0],[596,11,401,0,"_openDatabaseAsync"],[596,30,401,0],[597,4,401,0,"_openDatabaseAsync"],[597,22,401,0],[597,29,401,0,"_asyncToGenerator"],[597,46,401,0],[597,47,401,0,"default"],[597,54,401,0],[597,56,393,7],[597,67,393,40,"databaseName"],[597,79,393,52],[597,81,393,54,"options"],[597,88,393,61],[597,90,393,63,"directory"],[597,99,393,72],[597,101,393,74],[598,6,394,4],[598,10,394,10,"openOptions"],[598,21,394,21],[598,24,394,24,"options"],[598,31,394,31],[598,35,394,35],[598,36,394,36],[598,37,394,37],[599,6,395,4],[599,10,395,10,"databasePath"],[599,22,395,22],[599,25,395,25],[599,29,395,25,"createDatabasePath"],[599,39,395,43],[599,40,395,43,"createDatabasePath"],[599,58,395,43],[599,60,395,44,"databaseName"],[599,72,395,56],[599,74,395,58,"directory"],[599,83,395,67],[599,84,395,68],[600,6,396,4],[600,12,396,10,"ExpoSQLite"],[600,22,396,20],[600,23,396,20,"default"],[600,30,396,20],[600,31,396,21,"ensureDatabasePathExistsAsync"],[600,60,396,50],[600,61,396,51,"databasePath"],[600,73,396,63],[600,74,396,64],[601,6,397,4],[601,10,397,10,"nativeDatabase"],[601,24,397,24],[601,27,397,27],[601,31,397,31,"ExpoSQLite"],[601,41,397,41],[601,42,397,41,"default"],[601,49,397,41],[601,50,397,42,"NativeDatabase"],[601,64,397,56],[601,65,397,57,"databasePath"],[601,77,397,69],[601,79,397,71],[601,83,397,71,"flattenOpenOptions"],[601,98,397,89],[601,99,397,89,"flattenOpenOptions"],[601,117,397,89],[601,119,397,90,"openOptions"],[601,130,397,101],[601,131,397,102],[601,132,397,103],[602,6,398,4],[602,12,398,10,"nativeDatabase"],[602,26,398,24],[602,27,398,25,"initAsync"],[602,36,398,34],[602,37,398,35],[602,38,398,36],[603,6,399,4],[603,13,399,11],[603,17,399,15,"SQLiteDatabase"],[603,31,399,29],[603,32,399,30,"databasePath"],[603,44,399,42],[603,46,399,44,"openOptions"],[603,57,399,55],[603,59,399,57,"nativeDatabase"],[603,73,399,71],[603,74,399,72],[604,4,400,0],[604,5,400,1],[605,4,400,1],[605,11,400,1,"_openDatabaseAsync"],[605,29,400,1],[605,30,400,1,"apply"],[605,35,400,1],[605,42,400,1,"arguments"],[605,51,400,1],[606,2,400,1],[607,2,410,7],[607,11,410,16,"openDatabaseSync"],[607,27,410,32,"openDatabaseSync"],[607,28,410,33,"databaseName"],[607,40,410,45],[607,42,410,47,"options"],[607,49,410,54],[607,51,410,56,"directory"],[607,60,410,65],[607,62,410,67],[608,4,411,4],[608,8,411,10,"openOptions"],[608,19,411,21],[608,22,411,24,"options"],[608,29,411,31],[608,33,411,35],[608,34,411,36],[608,35,411,37],[609,4,412,4],[609,8,412,10,"databasePath"],[609,20,412,22],[609,23,412,25],[609,27,412,25,"createDatabasePath"],[609,37,412,43],[609,38,412,43,"createDatabasePath"],[609,56,412,43],[609,58,412,44,"databaseName"],[609,70,412,56],[609,72,412,58,"directory"],[609,81,412,67],[609,82,412,68],[610,4,413,4,"ExpoSQLite"],[610,14,413,14],[610,15,413,14,"default"],[610,22,413,14],[610,23,413,15,"ensureDatabasePathExistsSync"],[610,51,413,43],[610,52,413,44,"databasePath"],[610,64,413,56],[610,65,413,57],[611,4,414,4],[611,8,414,10,"nativeDatabase"],[611,22,414,24],[611,25,414,27],[611,29,414,31,"ExpoSQLite"],[611,39,414,41],[611,40,414,41,"default"],[611,47,414,41],[611,48,414,42,"NativeDatabase"],[611,62,414,56],[611,63,414,57,"databasePath"],[611,75,414,69],[611,77,414,71],[611,81,414,71,"flattenOpenOptions"],[611,96,414,89],[611,97,414,89,"flattenOpenOptions"],[611,115,414,89],[611,117,414,90,"openOptions"],[611,128,414,101],[611,129,414,102],[611,130,414,103],[612,4,415,4,"nativeDatabase"],[612,18,415,18],[612,19,415,19,"initSync"],[612,27,415,27],[612,28,415,28],[612,29,415,29],[613,4,416,4],[613,11,416,11],[613,15,416,15,"SQLiteDatabase"],[613,29,416,29],[613,30,416,30,"databasePath"],[613,42,416,42],[613,44,416,44,"openOptions"],[613,55,416,55],[613,57,416,57,"nativeDatabase"],[613,71,416,71],[613,72,416,72],[614,2,417,0],[615,2,418,0],[616,0,419,0],[617,0,420,0],[618,0,421,0],[619,0,422,0],[620,0,423,0],[621,2,418,0],[621,11,424,22,"deserializeDatabaseAsync"],[621,35,424,46,"deserializeDatabaseAsync"],[621,36,424,46,"_x0"],[621,39,424,46],[621,41,424,46,"_x1"],[621,44,424,46],[622,4,424,46],[622,11,424,46,"_deserializeDatabaseAsync"],[622,36,424,46],[622,37,424,46,"apply"],[622,42,424,46],[622,49,424,46,"arguments"],[622,58,424,46],[623,2,424,46],[624,2,430,0],[625,0,431,0],[626,0,432,0],[627,0,433,0],[628,0,434,0],[629,0,435,0],[630,0,436,0],[631,0,437,0],[632,2,430,0],[632,11,430,0,"_deserializeDatabaseAsync"],[632,37,430,0],[633,4,430,0,"_deserializeDatabaseAsync"],[633,29,430,0],[633,36,430,0,"_asyncToGenerator"],[633,53,430,0],[633,54,430,0,"default"],[633,61,430,0],[633,63,424,7],[633,74,424,47,"serializedData"],[633,88,424,61],[633,90,424,63,"options"],[633,97,424,70],[633,99,424,72],[634,6,425,4],[634,10,425,10,"openOptions"],[634,21,425,21],[634,24,425,24,"options"],[634,31,425,31],[634,35,425,35],[634,36,425,36],[634,37,425,37],[635,6,426,4],[635,10,426,10,"nativeDatabase"],[635,24,426,24],[635,27,426,27],[635,31,426,31,"ExpoSQLite"],[635,41,426,41],[635,42,426,41,"default"],[635,49,426,41],[635,50,426,42,"NativeDatabase"],[635,64,426,56],[635,65,426,57],[635,75,426,67],[635,77,426,69],[635,81,426,69,"flattenOpenOptions"],[635,96,426,87],[635,97,426,87,"flattenOpenOptions"],[635,115,426,87],[635,117,426,88,"openOptions"],[635,128,426,99],[635,129,426,100],[635,131,426,102,"serializedData"],[635,145,426,116],[635,146,426,117],[636,6,427,4],[636,12,427,10,"nativeDatabase"],[636,26,427,24],[636,27,427,25,"initAsync"],[636,36,427,34],[636,37,427,35],[636,38,427,36],[637,6,428,4],[637,13,428,11],[637,17,428,15,"SQLiteDatabase"],[637,31,428,29],[637,32,428,30],[637,42,428,40],[637,44,428,42,"openOptions"],[637,55,428,53],[637,57,428,55,"nativeDatabase"],[637,71,428,69],[637,72,428,70],[638,4,429,0],[638,5,429,1],[639,4,429,1],[639,11,429,1,"_deserializeDatabaseAsync"],[639,36,429,1],[639,37,429,1,"apply"],[639,42,429,1],[639,49,429,1,"arguments"],[639,58,429,1],[640,2,429,1],[641,2,438,7],[641,11,438,16,"deserializeDatabaseSync"],[641,34,438,39,"deserializeDatabaseSync"],[641,35,438,40,"serializedData"],[641,49,438,54],[641,51,438,56,"options"],[641,58,438,63],[641,60,438,65],[642,4,439,4],[642,8,439,10,"openOptions"],[642,19,439,21],[642,22,439,24,"options"],[642,29,439,31],[642,33,439,35],[642,34,439,36],[642,35,439,37],[643,4,440,4],[643,8,440,10,"nativeDatabase"],[643,22,440,24],[643,25,440,27],[643,29,440,31,"ExpoSQLite"],[643,39,440,41],[643,40,440,41,"default"],[643,47,440,41],[643,48,440,42,"NativeDatabase"],[643,62,440,56],[643,63,440,57],[643,73,440,67],[643,75,440,69],[643,79,440,69,"flattenOpenOptions"],[643,94,440,87],[643,95,440,87,"flattenOpenOptions"],[643,113,440,87],[643,115,440,88,"openOptions"],[643,126,440,99],[643,127,440,100],[643,129,440,102,"serializedData"],[643,143,440,116],[643,144,440,117],[644,4,441,4,"nativeDatabase"],[644,18,441,18],[644,19,441,19,"initSync"],[644,27,441,27],[644,28,441,28],[644,29,441,29],[645,4,442,4],[645,11,442,11],[645,15,442,15,"SQLiteDatabase"],[645,29,442,29],[645,30,442,30],[645,40,442,40],[645,42,442,42,"openOptions"],[645,53,442,53],[645,55,442,55,"nativeDatabase"],[645,69,442,69],[645,70,442,70],[646,2,443,0],[647,2,444,0],[648,0,445,0],[649,0,446,0],[650,0,447,0],[651,0,448,0],[652,0,449,0],[653,2,444,0],[653,11,450,22,"deleteDatabaseAsync"],[653,30,450,41,"deleteDatabaseAsync"],[653,31,450,41,"_x10"],[653,35,450,41],[653,37,450,41,"_x11"],[653,41,450,41],[654,4,450,41],[654,11,450,41,"_deleteDatabaseAsync"],[654,31,450,41],[654,32,450,41,"apply"],[654,37,450,41],[654,44,450,41,"arguments"],[654,53,450,41],[655,2,450,41],[656,2,454,0],[657,0,455,0],[658,0,456,0],[659,0,457,0],[660,0,458,0],[661,0,459,0],[662,0,460,0],[663,0,461,0],[664,2,454,0],[664,11,454,0,"_deleteDatabaseAsync"],[664,32,454,0],[665,4,454,0,"_deleteDatabaseAsync"],[665,24,454,0],[665,31,454,0,"_asyncToGenerator"],[665,48,454,0],[665,49,454,0,"default"],[665,56,454,0],[665,58,450,7],[665,69,450,42,"databaseName"],[665,81,450,54],[665,83,450,56,"directory"],[665,92,450,65],[665,94,450,67],[666,6,451,4],[666,10,451,10,"databasePath"],[666,22,451,22],[666,25,451,25],[666,29,451,25,"createDatabasePath"],[666,39,451,43],[666,40,451,43,"createDatabasePath"],[666,58,451,43],[666,60,451,44,"databaseName"],[666,72,451,56],[666,74,451,58,"directory"],[666,83,451,67],[666,84,451,68],[667,6,452,4],[667,19,452,17,"ExpoSQLite"],[667,29,452,27],[667,30,452,27,"default"],[667,37,452,27],[667,38,452,28,"deleteDatabaseAsync"],[667,57,452,47],[667,58,452,48,"databasePath"],[667,70,452,60],[667,71,452,61],[668,4,453,0],[668,5,453,1],[669,4,453,1],[669,11,453,1,"_deleteDatabaseAsync"],[669,31,453,1],[669,32,453,1,"apply"],[669,37,453,1],[669,44,453,1,"arguments"],[669,53,453,1],[670,2,453,1],[671,2,462,7],[671,11,462,16,"deleteDatabaseSync"],[671,29,462,34,"deleteDatabaseSync"],[671,30,462,35,"databaseName"],[671,42,462,47],[671,44,462,49,"directory"],[671,53,462,58],[671,55,462,60],[672,4,463,4],[672,8,463,10,"databasePath"],[672,20,463,22],[672,23,463,25],[672,27,463,25,"createDatabasePath"],[672,37,463,43],[672,38,463,43,"createDatabasePath"],[672,56,463,43],[672,58,463,44,"databaseName"],[672,70,463,56],[672,72,463,58,"directory"],[672,81,463,67],[672,82,463,68],[673,4,464,4],[673,11,464,11,"ExpoSQLite"],[673,21,464,21],[673,22,464,21,"default"],[673,29,464,21],[673,30,464,22,"deleteDatabaseSync"],[673,48,464,40],[673,49,464,41,"databasePath"],[673,61,464,53],[673,62,464,54],[674,2,465,0],[675,2,466,0],[676,0,467,0],[677,0,468,0],[678,0,469,0],[679,0,470,0],[680,0,471,0],[681,0,472,0],[682,0,473,0],[683,0,474,0],[684,0,475,0],[685,0,476,0],[686,2,477,7],[686,11,477,16,"backupDatabaseAsync"],[686,30,477,35,"backupDatabaseAsync"],[686,31,477,35,"_ref"],[686,35,477,35],[686,37,477,109],[687,4,477,109],[687,8,477,38,"sourceDatabase"],[687,22,477,52],[687,25,477,52,"_ref"],[687,29,477,52],[687,30,477,38,"sourceDatabase"],[687,44,477,52],[688,6,477,54,"sourceDatabaseName"],[688,24,477,72],[688,27,477,72,"_ref"],[688,31,477,72],[688,32,477,54,"sourceDatabaseName"],[688,50,477,72],[689,6,477,74,"destDatabase"],[689,18,477,86],[689,21,477,86,"_ref"],[689,25,477,86],[689,26,477,74,"destDatabase"],[689,38,477,86],[690,6,477,88,"destDatabaseName"],[690,22,477,104],[690,25,477,104,"_ref"],[690,29,477,104],[690,30,477,88,"destDatabaseName"],[690,46,477,104],[691,4,478,4],[691,11,478,11,"ExpoSQLite"],[691,21,478,21],[691,22,478,21,"default"],[691,29,478,21],[691,30,478,22,"backupDatabaseAsync"],[691,49,478,41],[691,50,478,42,"destDatabase"],[691,62,478,54],[691,63,478,55,"nativeDatabase"],[691,77,478,69],[691,79,478,71,"destDatabaseName"],[691,95,478,87],[691,99,478,91],[691,105,478,97],[691,107,478,99,"sourceDatabase"],[691,121,478,113],[691,122,478,114,"nativeDatabase"],[691,136,478,128],[691,138,478,130,"sourceDatabaseName"],[691,156,478,148],[691,160,478,152],[691,166,478,158],[691,167,478,159],[692,2,479,0],[693,2,480,0],[694,0,481,0],[695,0,482,0],[696,0,483,0],[697,0,484,0],[698,0,485,0],[699,0,486,0],[700,0,487,0],[701,0,488,0],[702,0,489,0],[703,0,490,0],[704,0,491,0],[705,0,492,0],[706,2,493,7],[706,11,493,16,"backupDatabaseSync"],[706,29,493,34,"backupDatabaseSync"],[706,30,493,34,"_ref2"],[706,35,493,34],[706,37,493,108],[707,4,493,108],[707,8,493,37,"sourceDatabase"],[707,22,493,51],[707,25,493,51,"_ref2"],[707,30,493,51],[707,31,493,37,"sourceDatabase"],[707,45,493,51],[708,6,493,53,"sourceDatabaseName"],[708,24,493,71],[708,27,493,71,"_ref2"],[708,32,493,71],[708,33,493,53,"sourceDatabaseName"],[708,51,493,71],[709,6,493,73,"destDatabase"],[709,18,493,85],[709,21,493,85,"_ref2"],[709,26,493,85],[709,27,493,73,"destDatabase"],[709,39,493,85],[710,6,493,87,"destDatabaseName"],[710,22,493,103],[710,25,493,103,"_ref2"],[710,30,493,103],[710,31,493,87,"destDatabaseName"],[710,47,493,103],[711,4,494,4],[711,11,494,11,"ExpoSQLite"],[711,21,494,21],[711,22,494,21,"default"],[711,29,494,21],[711,30,494,22,"backupDatabaseSync"],[711,48,494,40],[711,49,494,41,"destDatabase"],[711,61,494,53],[711,62,494,54,"nativeDatabase"],[711,76,494,68],[711,78,494,70,"destDatabaseName"],[711,94,494,86],[711,98,494,90],[711,104,494,96],[711,106,494,98,"sourceDatabase"],[711,120,494,112],[711,121,494,113,"nativeDatabase"],[711,135,494,127],[711,137,494,129,"sourceDatabaseName"],[711,155,494,147],[711,159,494,151],[711,165,494,157],[711,166,494,158],[712,2,495,0],[713,2,496,0],[714,0,497,0],[715,0,498,0],[716,0,499,0],[717,0,500,0],[718,0,501,0],[719,0,502,0],[720,2,503,7],[720,11,503,16,"addDatabaseChangeListener"],[720,36,503,41,"addDatabaseChangeListener"],[720,37,503,42,"listener"],[720,45,503,50],[720,47,503,52],[721,4,504,4],[721,11,504,11,"ExpoSQLite"],[721,21,504,21],[721,22,504,21,"default"],[721,29,504,21],[721,30,504,22,"addListener"],[721,41,504,33],[721,42,504,34],[721,60,504,52],[721,62,504,54,"listener"],[721,70,504,62],[721,71,504,63],[722,2,505,0],[723,2,506,0],[724,0,507,0],[725,0,508,0],[726,0,509,0],[727,2,506,0],[727,6,510,6,"Transaction"],[727,17,510,17],[727,43,510,17,"_SQLiteDatabase"],[727,58,510,17],[728,4,510,17],[728,13,510,17,"Transaction"],[728,25,510,17],[729,6,510,17],[729,10,510,17,"_classCallCheck"],[729,25,510,17],[729,26,510,17,"default"],[729,33,510,17],[729,41,510,17,"Transaction"],[729,52,510,17],[730,6,510,17],[730,17,510,17,"_callSuper"],[730,27,510,17],[730,28,510,17,"default"],[730,35,510,17],[730,43,510,17,"Transaction"],[730,54,510,17],[730,56,510,17,"arguments"],[730,65,510,17],[731,4,510,17],[732,4,510,17],[732,8,510,17,"_inherits"],[732,17,510,17],[732,18,510,17,"default"],[732,25,510,17],[732,27,510,17,"Transaction"],[732,38,510,17],[732,40,510,17,"_SQLiteDatabase"],[732,55,510,17],[733,4,510,17],[733,15,510,17,"_createClass"],[733,27,510,17],[733,28,510,17,"default"],[733,35,510,17],[733,37,510,17,"Transaction"],[733,48,510,17],[734,6,510,17,"key"],[734,9,510,17],[735,6,510,17,"value"],[735,11,510,17],[736,8,510,17],[736,12,510,17,"_createAsync"],[736,24,510,17],[736,31,510,17,"_asyncToGenerator"],[736,48,510,17],[736,49,510,17,"default"],[736,56,510,17],[736,58,511,4],[736,69,511,29,"db"],[736,71,511,31],[736,73,511,33],[737,10,512,8],[737,14,512,14,"options"],[737,21,512,21],[737,24,512,24],[738,12,512,26],[738,15,512,29,"db"],[738,17,512,31],[738,18,512,32,"options"],[738,25,512,39],[739,12,512,41,"useNewConnection"],[739,28,512,57],[739,30,512,59],[740,10,512,64],[740,11,512,65],[741,10,513,8],[741,14,513,14,"nativeDatabase"],[741,28,513,28],[741,31,513,31],[741,35,513,35,"ExpoSQLite"],[741,45,513,45],[741,46,513,45,"default"],[741,53,513,45],[741,54,513,46,"NativeDatabase"],[741,68,513,60],[741,69,513,61,"db"],[741,71,513,63],[741,72,513,64,"databasePath"],[741,84,513,76],[741,86,513,78],[741,90,513,78,"flattenOpenOptions"],[741,105,513,96],[741,106,513,96,"flattenOpenOptions"],[741,124,513,96],[741,126,513,97,"options"],[741,133,513,104],[741,134,513,105],[741,135,513,106],[742,10,514,8],[742,16,514,14,"nativeDatabase"],[742,30,514,28],[742,31,514,29,"initAsync"],[742,40,514,38],[742,41,514,39],[742,42,514,40],[743,10,515,8],[743,17,515,15],[743,21,515,19,"Transaction"],[743,32,515,30],[743,33,515,31,"db"],[743,35,515,33],[743,36,515,34,"databasePath"],[743,48,515,46],[743,50,515,48,"options"],[743,57,515,55],[743,59,515,57,"nativeDatabase"],[743,73,515,71],[743,74,515,72],[744,8,516,4],[744,9,516,5],[745,8,516,5],[745,17,511,17,"createAsync"],[745,28,511,28,"createAsync"],[745,29,511,28,"_x12"],[745,33,511,28],[746,10,511,28],[746,17,511,28,"_createAsync"],[746,29,511,28],[746,30,511,28,"apply"],[746,35,511,28],[746,42,511,28,"arguments"],[746,51,511,28],[747,8,511,28],[748,8,511,28],[748,15,511,17,"createAsync"],[748,26,511,28],[749,6,511,28],[750,4,511,28],[751,2,511,28],[751,4,510,26,"SQLiteDatabase"],[751,18,510,40],[752,0,510,40],[752,3]],"functionMap":{"names":["<global>","SQLiteDatabase","constructor","isInTransactionAsync","closeAsync","execAsync","serializeAsync","prepareAsync","createSessionAsync","loadExtensionAsync","withTransactionAsync","withExclusiveTransactionAsync","isInTransactionSync","closeSync","execSync","serializeSync","prepareSync","createSessionSync","loadExtensionSync","withTransactionSync","runAsync","getFirstAsync","getEachAsync","getAllAsync","runSync","getFirstSync","getEachSync","getAllSync","syncLibSQL","openDatabaseAsync","openDatabaseSync","deserializeDatabaseAsync","deserializeDatabaseSync","deleteDatabaseAsync","deleteDatabaseSync","backupDatabaseAsync","backupDatabaseSync","addDatabaseChangeListener","Transaction","Transaction.createAsync"],"mappings":"AAA;OCS;ICI;KDI;IEI;KFE;IGI;KHE;IIO;KJE;IKM;KLE;IMM;KNI;IOM;KPI;IQqB;KRE;ISyB;KTU;IUyB;KVqB;IWI;KXE;IYI;KZE;IaU;KbE;IcQ;KdE;IeQ;KfI;IgBS;KhBI;IiBsB;KjBE;IkBQ;KlBU;ImBC;KnBU;IoBC;KpBW;IqBC;KrBW;IsBC;KtBW;IuBC;KvBU;IwBC;KxBW;IyBC;KzBW;I0BC;K1BW;I2BK;K3BK;CDC;O6BgB;C7BO;O8BU;C9BO;O+BO;C/BK;OgCS;ChCK;OiCO;CjCG;OkCS;ClCG;OmCY;CnCE;OoCc;CpCE;OqCQ;CrCE;AsCK;ICC;KDK;CtCC"},"hasCjsExports":false},"type":"js/module"}]}