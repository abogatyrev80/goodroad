{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* Mock MMKV instance for use in tests */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createMockMMKV\", {\n    enumerable: true,\n    get: function () {\n      return createMockMMKV;\n    }\n  });\n  const createMockMMKV = () => {\n    const storage = new Map();\n    return {\n      clearAll: () => storage.clear(),\n      delete: key => storage.delete(key),\n      set: (key, value) => storage.set(key, value),\n      getString: key => {\n        const result = storage.get(key);\n        return typeof result === 'string' ? result : undefined;\n      },\n      getNumber: key => {\n        const result = storage.get(key);\n        return typeof result === 'number' ? result : undefined;\n      },\n      getBoolean: key => {\n        const result = storage.get(key);\n        return typeof result === 'boolean' ? result : undefined;\n      },\n      getBuffer: key => {\n        const result = storage.get(key);\n        return result instanceof ArrayBuffer ? result : undefined;\n      },\n      getAllKeys: () => Array.from(storage.keys()),\n      contains: key => storage.has(key),\n      recrypt: () => {\n        console.warn('Encryption is not supported in mocked MMKV instances!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n});","lineCount":48,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,4,0,"Object"],[8,8,4,0],[8,9,4,0,"defineProperty"],[8,23,4,0],[8,24,4,0,"exports"],[8,31,4,0],[9,4,4,0,"enumerable"],[9,14,4,0],[10,4,4,0,"get"],[10,7,4,0],[10,18,4,0,"get"],[10,19,4,0],[11,6,4,0],[11,13,4,0,"createMockMMKV"],[11,27,4,0],[12,4,4,0],[13,2,4,0],[14,2,4,7],[14,8,4,13,"createMockMMKV"],[14,22,4,27],[14,25,4,30,"createMockMMKV"],[14,26,4,30],[14,31,4,36],[15,4,5,2],[15,10,5,8,"storage"],[15,17,5,15],[15,20,5,18],[15,24,5,22,"Map"],[15,27,5,25],[15,28,5,26],[15,29,5,27],[16,4,6,2],[16,11,6,9],[17,6,7,4,"clearAll"],[17,14,7,12],[17,16,7,14,"clearAll"],[17,17,7,14],[17,22,7,20,"storage"],[17,29,7,27],[17,30,7,28,"clear"],[17,35,7,33],[17,36,7,34],[17,37,7,35],[18,6,8,4,"delete"],[18,12,8,10],[18,14,8,12,"key"],[18,17,8,15],[18,21,8,19,"storage"],[18,28,8,26],[18,29,8,27,"delete"],[18,35,8,33],[18,36,8,34,"key"],[18,39,8,37],[18,40,8,38],[19,6,9,4,"set"],[19,9,9,7],[19,11,9,9,"set"],[19,12,9,10,"key"],[19,15,9,13],[19,17,9,15,"value"],[19,22,9,20],[19,27,9,25,"storage"],[19,34,9,32],[19,35,9,33,"set"],[19,38,9,36],[19,39,9,37,"key"],[19,42,9,40],[19,44,9,42,"value"],[19,49,9,47],[19,50,9,48],[20,6,10,4,"getString"],[20,15,10,13],[20,17,10,15,"key"],[20,20,10,18],[20,24,10,22],[21,8,11,6],[21,14,11,12,"result"],[21,20,11,18],[21,23,11,21,"storage"],[21,30,11,28],[21,31,11,29,"get"],[21,34,11,32],[21,35,11,33,"key"],[21,38,11,36],[21,39,11,37],[22,8,12,6],[22,15,12,13],[22,22,12,20,"result"],[22,28,12,26],[22,33,12,31],[22,41,12,39],[22,44,12,42,"result"],[22,50,12,48],[22,53,12,51,"undefined"],[22,62,12,60],[23,6,13,4],[23,7,13,5],[24,6,14,4,"getNumber"],[24,15,14,13],[24,17,14,15,"key"],[24,20,14,18],[24,24,14,22],[25,8,15,6],[25,14,15,12,"result"],[25,20,15,18],[25,23,15,21,"storage"],[25,30,15,28],[25,31,15,29,"get"],[25,34,15,32],[25,35,15,33,"key"],[25,38,15,36],[25,39,15,37],[26,8,16,6],[26,15,16,13],[26,22,16,20,"result"],[26,28,16,26],[26,33,16,31],[26,41,16,39],[26,44,16,42,"result"],[26,50,16,48],[26,53,16,51,"undefined"],[26,62,16,60],[27,6,17,4],[27,7,17,5],[28,6,18,4,"getBoolean"],[28,16,18,14],[28,18,18,16,"key"],[28,21,18,19],[28,25,18,23],[29,8,19,6],[29,14,19,12,"result"],[29,20,19,18],[29,23,19,21,"storage"],[29,30,19,28],[29,31,19,29,"get"],[29,34,19,32],[29,35,19,33,"key"],[29,38,19,36],[29,39,19,37],[30,8,20,6],[30,15,20,13],[30,22,20,20,"result"],[30,28,20,26],[30,33,20,31],[30,42,20,40],[30,45,20,43,"result"],[30,51,20,49],[30,54,20,52,"undefined"],[30,63,20,61],[31,6,21,4],[31,7,21,5],[32,6,22,4,"getBuffer"],[32,15,22,13],[32,17,22,15,"key"],[32,20,22,18],[32,24,22,22],[33,8,23,6],[33,14,23,12,"result"],[33,20,23,18],[33,23,23,21,"storage"],[33,30,23,28],[33,31,23,29,"get"],[33,34,23,32],[33,35,23,33,"key"],[33,38,23,36],[33,39,23,37],[34,8,24,6],[34,15,24,13,"result"],[34,21,24,19],[34,33,24,31,"ArrayBuffer"],[34,44,24,42],[34,47,24,45,"result"],[34,53,24,51],[34,56,24,54,"undefined"],[34,65,24,63],[35,6,25,4],[35,7,25,5],[36,6,26,4,"getAllKeys"],[36,16,26,14],[36,18,26,16,"getAllKeys"],[36,19,26,16],[36,24,26,22,"Array"],[36,29,26,27],[36,30,26,28,"from"],[36,34,26,32],[36,35,26,33,"storage"],[36,42,26,40],[36,43,26,41,"keys"],[36,47,26,45],[36,48,26,46],[36,49,26,47],[36,50,26,48],[37,6,27,4,"contains"],[37,14,27,12],[37,16,27,14,"key"],[37,19,27,17],[37,23,27,21,"storage"],[37,30,27,28],[37,31,27,29,"has"],[37,34,27,32],[37,35,27,33,"key"],[37,38,27,36],[37,39,27,37],[38,6,28,4,"recrypt"],[38,13,28,11],[38,15,28,13,"recrypt"],[38,16,28,13],[38,21,28,19],[39,8,29,6,"console"],[39,15,29,13],[39,16,29,14,"warn"],[39,20,29,18],[39,21,29,19],[39,76,29,74],[39,77,29,75],[40,6,30,4],[40,7,30,5],[41,6,31,4,"size"],[41,10,31,8],[41,12,31,10],[41,13,31,11],[42,6,32,4,"isReadOnly"],[42,16,32,14],[42,18,32,16],[42,23,32,21],[43,6,33,4,"trim"],[43,10,33,8],[43,12,33,10,"trim"],[43,13,33,10],[43,18,33,16],[44,8,34,6],[45,6,34,6],[46,4,36,2],[46,5,36,3],[47,2,37,0],[47,3,37,1],[48,0,37,2],[48,3]],"functionMap":{"names":["<global>","createMockMMKV","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","contains","recrypt","trim"],"mappings":"AAA;8BCG;cCG,qBD;YEC,0BF;SGC,uCH;eIC;KJG;eKC;KLG;gBMC;KNG;eOC;KPG;gBQC,gCR;cSC,uBT;aUC;KVE;UWG;KXE;CDE"},"hasCjsExports":false},"type":"js/module"}]}