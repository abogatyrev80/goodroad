{"dependencies":[{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"SfRhzMj3Ex6qA89WTFEUm9Lj49A=","exportNames":["*"],"imports":1}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":276},"end":{"line":12,"column":43,"index":319}}],"key":"bGUa+dDG2WEhPiIlobT3urS95UE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function(g,r,_i,a,m,_e,d){\"use strict\";function s(s){return s&&s.__esModule?s:{default:s}}Object.defineProperty(_e,'__esModule',{value:!0}),Object.defineProperty(_e,\"CellRenderMask\",{enumerable:!0,get:function(){return i}});var e=s(r(d[0])),t=s(r(d[1]));class i{constructor(s){(0,t.default)(s>=0,'CellRenderMask must contain a non-negative number os cells'),this._numCells=s,this._regions=0===s?[]:[{first:0,last:s-1,isSpacer:!0}]}enumerateRegions(){return this._regions}addCells(s){if((0,t.default)(s.first>=0&&s.first<this._numCells&&s.last>=-1&&s.last<this._numCells&&s.last>=s.first-1,'CellRenderMask.addCells called with invalid cell range'),!(s.last<s.first)){var i=this._findRegion(s.first),l=i[0],n=i[1],f=this._findRegion(s.last),u=f[0],o=f[1];if(n!==o||l.isSpacer){var _=[],c=[],h=(0,e.default)((0,e.default)({},s),{},{isSpacer:!1});l.first<h.first&&(l.isSpacer?_.push({first:l.first,last:h.first-1,isSpacer:!0}):h.first=l.first),u.last>h.last&&(u.isSpacer?c.push({first:h.last+1,last:u.last,isSpacer:!0}):h.last=u.last);var p=[..._,h,...c],C=o-n+1;this._regions.splice(n,C,...p)}}}numCells(){return this._numCells}equals(s){return this._numCells===s._numCells&&this._regions.length===s._regions.length&&this._regions.every((e,t)=>e.first===s._regions[t].first&&e.last===s._regions[t].last&&e.isSpacer===s._regions[t].isSpacer)}_findRegion(s){for(var e=0,i=this._regions.length-1;e<=i;){var l=Math.floor((e+i)/2),n=this._regions[l];if(s>=n.first&&s<=n.last)return[n,l];s<n.first?i=l-1:s>n.last&&(e=l+1)}(0,t.default)(!1,\"A region was not found containing cellIdx \"+s)}}});","lineCount":1,"map":[[1,144,13,0,"Object"],[1,151,13,0,"defineProperty"],[1,166,13,0,"_e"],[1,169,13,0],[1,187,13,0,"enumerable"],[1,199,13,0],[1,201,13,0,"get"],[1,205,13,0],[1,223,13,0,"CellRenderMask"],[1,224,13,0],[1,228,1,0],[1,232,1,0,"_objectSpread"],[1,234,1,0,"_interopDefault"],[1,236,1,0,"r"],[1,238,1,0,"d"],[1,240,1,0],[1,245,12,0,"invariant"],[1,247,12,0,"_interopDefault"],[1,249,12,0,"r"],[1,251,12,0,"d"],[1,253,12,0],[1,258,13,7],[1,264,13,13,"CellRenderMask"],[1,266,14,2,"constructor"],[1,278,14,14,"numCells"],[1,282,15,4],[1,284,15,4,"invariant"],[1,286,15,13,"default"],[1,295,15,14,"numCells"],[1,298,15,26],[1,300,15,29],[1,362,16,4,"this"],[1,367,16,9,"_numCells"],[1,377,16,21,"numCells"],[1,379,18,6,"this"],[1,384,18,11,"_regions"],[1,393,17,21],[1,397,17,8,"numCells"],[1,399,18,22],[1,402,20,22],[1,403,20,23],[1,404,21,8,"first"],[1,410,21,15],[1,412,22,8,"last"],[1,417,22,14,"numCells"],[1,419,22,25],[1,421,23,8,"isSpacer"],[1,431,23,18],[1,434,26,2],[1,435,27,2,"enumerateRegions"],[1,454,28,4],[1,461,28,11,"this"],[1,466,28,16,"_regions"],[1,474,29,2],[1,475,30,2,"addCells"],[1,484,30,11,"cells"],[1,487,35,4],[1,491,31,4],[1,493,31,4,"invariant"],[1,495,31,13,"default"],[1,504,31,14,"cells"],[1,506,31,20,"first"],[1,513,31,29],[1,516,31,34,"cells"],[1,518,31,40,"first"],[1,524,31,48,"this"],[1,529,31,53,"_numCells"],[1,540,31,66,"cells"],[1,542,31,72,"last"],[1,549,31,76],[1,552,31,86,"cells"],[1,554,31,92,"last"],[1,559,31,99,"this"],[1,564,31,104,"_numCells"],[1,575,31,117,"cells"],[1,577,31,123,"last"],[1,583,31,131,"cells"],[1,585,31,137,"first"],[1,591,31,145],[1,593,31,148],[1,653,35,8,"cells"],[1,655,35,14,"last"],[1,660,35,21,"cells"],[1,662,35,27,"first"],[1,669,35,4],[1,670,38,4],[1,674,38,8,"_this$_findRegion"],[1,676,38,28,"this"],[1,681,38,33,"_findRegion"],[1,693,38,45,"cells"],[1,695,38,51,"first"],[1,702,39,6,"firstIntersect"],[1,704,39,23,"_this$_findRegion"],[1,706,39,41],[1,709,40,6,"firstIntersectIdx"],[1,711,40,26,"_this$_findRegion"],[1,713,40,44],[1,716,41,8,"_this$_findRegion2"],[1,718,41,29,"this"],[1,723,41,34,"_findRegion"],[1,735,41,46,"cells"],[1,737,41,52,"last"],[1,743,42,6,"lastIntersect"],[1,745,42,22,"_this$_findRegion2"],[1,747,42,41],[1,750,43,6,"lastIntersectIdx"],[1,752,43,25,"_this$_findRegion2"],[1,754,43,44],[1,757,47,4],[1,760,47,8,"firstIntersectIdx"],[1,764,47,30,"lastIntersectIdx"],[1,767,47,51,"firstIntersect"],[1,769,47,66,"isSpacer"],[1,778,47,4],[1,779,53,4],[1,783,53,8,"newLeadRegion"],[1,785,53,24],[1,788,54,8,"newTailRegion"],[1,790,54,24],[1,793,55,8,"newMainRegion"],[1,796,55,24],[1,798,55,24,"_objectSpread"],[1,800,55,37,"default"],[1,810,55,38],[1,812,55,38,"_objectSpread"],[1,814,55,51,"default"],[1,823,55,52],[1,824,55,53],[1,826,55,56,"cells"],[1,829,55,64],[1,830,55,65],[1,832,55,68],[1,833,56,6,"isSpacer"],[1,843,56,16],[1,847,58,8,"firstIntersect"],[1,849,58,23,"first"],[1,855,58,31,"newMainRegion"],[1,857,58,45,"first"],[1,865,59,10,"firstIntersect"],[1,867,59,25,"isSpacer"],[1,876,60,8,"newLeadRegion"],[1,878,60,22,"push"],[1,883,60,27],[1,884,61,10,"first"],[1,890,61,17,"firstIntersect"],[1,892,61,32,"first"],[1,898,62,10,"last"],[1,903,62,16,"newMainRegion"],[1,905,62,30,"first"],[1,911,62,38],[1,913,63,10,"isSpacer"],[1,923,63,20],[1,927,66,8,"newMainRegion"],[1,929,66,22,"first"],[1,935,66,30,"firstIntersect"],[1,937,66,45,"first"],[1,944,69,8,"lastIntersect"],[1,946,69,22,"last"],[1,951,69,29,"newMainRegion"],[1,953,69,43,"last"],[1,960,70,10,"lastIntersect"],[1,962,70,24,"isSpacer"],[1,971,71,8,"newTailRegion"],[1,973,71,22,"push"],[1,978,71,27],[1,979,72,10,"first"],[1,985,72,17,"newMainRegion"],[1,987,72,31,"last"],[1,992,72,38],[1,994,73,10,"last"],[1,999,73,16,"lastIntersect"],[1,1001,73,30,"last"],[1,1006,74,10,"isSpacer"],[1,1016,74,20],[1,1020,77,8,"newMainRegion"],[1,1022,77,22,"last"],[1,1027,77,29,"lastIntersect"],[1,1029,77,43,"last"],[1,1035,80,4],[1,1039,80,8,"replacementRegions"],[1,1041,80,29],[1,1045,80,33,"newLeadRegion"],[1,1047,80,48,"newMainRegion"],[1,1052,80,66,"newTailRegion"],[1,1055,81,8,"numRegionsToDelete"],[1,1057,81,29,"lastIntersectIdx"],[1,1059,81,48,"firstIntersectIdx"],[1,1061,81,68],[1,1063,82,4,"this"],[1,1068,82,9,"_regions"],[1,1077,82,18,"splice"],[1,1084,82,25,"firstIntersectIdx"],[1,1086,82,44,"numRegionsToDelete"],[1,1091,82,67,"replacementRegions"],[1,1093,49,4],[1,1094,37,4],[1,1095,83,2],[1,1096,84,2,"numCells"],[1,1107,85,4],[1,1114,85,11,"this"],[1,1119,85,16,"_numCells"],[1,1128,86,2],[1,1129,87,2,"equals"],[1,1136,87,9,"other"],[1,1139,88,4],[1,1146,88,11,"this"],[1,1151,88,16,"_numCells"],[1,1163,88,30,"other"],[1,1165,88,36,"_numCells"],[1,1176,88,49,"this"],[1,1181,88,54,"_regions"],[1,1190,88,63,"length"],[1,1199,88,74,"other"],[1,1201,88,80,"_regions"],[1,1210,88,89,"length"],[1,1218,88,99,"this"],[1,1223,88,104,"_regions"],[1,1232,88,113,"every"],[1,1238,88,119],[1,1239,88,120,"region"],[1,1241,88,128,"i"],[1,1245,88,134,"region"],[1,1247,88,141,"first"],[1,1255,88,151,"other"],[1,1257,88,157,"_regions"],[1,1266,88,166,"i"],[1,1269,88,169,"first"],[1,1276,88,178,"region"],[1,1278,88,185,"last"],[1,1285,88,194,"other"],[1,1287,88,200,"_regions"],[1,1296,88,209,"i"],[1,1299,88,212,"last"],[1,1305,88,220,"region"],[1,1307,88,227,"isSpacer"],[1,1318,88,240,"other"],[1,1320,88,246,"_regions"],[1,1329,88,255,"i"],[1,1332,88,258,"isSpacer"],[1,1341,89,2],[1,1342,90,2,"_findRegion"],[1,1354,90,14,"cellIdx"],[1,1357,93,4],[1,1361,91,4],[1,1365,91,8,"firstIdx"],[1,1367,91,19],[1,1369,92,8,"lastIdx"],[1,1371,92,18,"this"],[1,1376,92,23,"_regions"],[1,1385,92,32,"length"],[1,1392,92,41],[1,1394,93,11,"firstIdx"],[1,1397,93,23,"lastIdx"],[1,1400,93,32],[1,1401,94,6],[1,1405,94,10,"middleIdx"],[1,1407,94,22,"Math"],[1,1412,94,27,"floor"],[1,1419,94,34,"firstIdx"],[1,1421,94,45,"lastIdx"],[1,1424,94,56],[1,1427,95,10,"middleRegion"],[1,1429,95,25,"this"],[1,1434,95,30,"_regions"],[1,1443,95,39,"middleIdx"],[1,1446,96,6],[1,1449,96,10,"cellIdx"],[1,1452,96,21,"middleRegion"],[1,1454,96,34,"first"],[1,1461,96,43,"cellIdx"],[1,1464,96,54,"middleRegion"],[1,1466,96,67,"last"],[1,1471,97,8],[1,1477,97,15],[1,1478,97,16,"middleRegion"],[1,1480,97,30,"middleIdx"],[1,1483,98,17,"cellIdx"],[1,1485,98,27,"middleRegion"],[1,1487,98,40,"first"],[1,1493,99,8,"lastIdx"],[1,1495,99,18,"middleIdx"],[1,1497,99,30],[1,1499,100,17,"cellIdx"],[1,1501,100,27,"middleRegion"],[1,1503,100,40,"last"],[1,1510,101,8,"firstIdx"],[1,1512,101,19,"middleIdx"],[1,1514,101,31],[1,1516,103,4],[1,1518,104,4],[1,1520,104,4,"invariant"],[1,1522,104,13,"default"],[1,1532,104,14],[1,1534,104,21],[1,1579,104,68,"cellIdx"],[1,1581,105,2],[1,1583,106,1],[1,1586]],"functionMap":{"names":["<global>","CellRenderMask","constructor","enumerateRegions","addCells","numCells","equals","_regions.every$argument_0","_findRegion"],"mappings":"AAA;OCY;ECC;GDY;EEC;GFE;EGC;GHqD;EIC;GJE;EKC;uHCC,mJD;GLC;EOC;GPe"},"hasCjsExports":false},"type":"js/module"}]}