{"dependencies":[{"name":"./createTextEncoder","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":42},"end":{"line":5,"column":56,"index":98}}],"key":"mkBd6apmx7z6ANzQK/t5BJ8Lhug=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /* global localStorage */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createMMKV\", {\n    enumerable: true,\n    get: function () {\n      return createMMKV;\n    }\n  });\n  var _createTextEncoder = require(_dependencyMap[0], \"./createTextEncoder\");\n  const canUseDOM = typeof window !== 'undefined' && window.document?.createElement != null;\n  const hasAccessToLocalStorage = () => {\n    try {\n      // throws ACCESS_DENIED error\n      window.localStorage;\n      return true;\n    } catch {\n      return false;\n    }\n  };\n  const KEY_WILDCARD = '\\\\';\n  const inMemoryStorage = new Map();\n  const createMMKV = config => {\n    if (config.encryptionKey != null) {\n      throw new Error(\"MMKV: 'encryptionKey' is not supported on Web!\");\n    }\n    if (config.path != null) {\n      throw new Error(\"MMKV: 'path' is not supported on Web!\");\n    }\n\n    // canUseDOM check prevents spam in Node server environments, such as Next.js server side props.\n    if (!hasAccessToLocalStorage() && canUseDOM) {\n      console.warn('MMKV: LocalStorage has been disabled. Your experience will be limited to in-memory storage!');\n    }\n    const storage = () => {\n      if (!canUseDOM) {\n        throw new Error('Tried to access storage on the server. Did you forget to call this in useEffect?');\n      }\n      if (!hasAccessToLocalStorage()) {\n        return {\n          getItem: key => inMemoryStorage.get(key) ?? null,\n          setItem: (key, value) => inMemoryStorage.set(key, value),\n          removeItem: key => inMemoryStorage.delete(key),\n          clear: () => inMemoryStorage.clear(),\n          length: inMemoryStorage.size,\n          key: index => Object.keys(inMemoryStorage).at(index) ?? null\n        };\n      }\n      const domStorage = global?.localStorage ?? window?.localStorage ?? localStorage;\n      if (domStorage == null) {\n        throw new Error(`Could not find 'localStorage' instance!`);\n      }\n      return domStorage;\n    };\n    const textEncoder = (0, _createTextEncoder.createTextEncoder)();\n    if (config.id.includes(KEY_WILDCARD)) {\n      throw new Error('MMKV: `id` cannot contain the backslash character (`\\\\`)!');\n    }\n    const keyPrefix = `${config.id}${KEY_WILDCARD}`; // mmkv.default\\\\\n    const prefixedKey = key => {\n      if (key.includes('\\\\')) {\n        throw new Error('MMKV: `key` cannot contain the backslash character (`\\\\`)!');\n      }\n      return `${keyPrefix}${key}`;\n    };\n    return {\n      clearAll: () => {\n        const keys = Object.keys(storage());\n        for (const key of keys) {\n          if (key.startsWith(keyPrefix)) {\n            storage().removeItem(key);\n          }\n        }\n      },\n      delete: key => storage().removeItem(prefixedKey(key)),\n      set: (key, value) => {\n        storage().setItem(prefixedKey(key), value.toString());\n      },\n      getString: key => storage().getItem(prefixedKey(key)) ?? undefined,\n      getNumber: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return Number(value);\n      },\n      getBoolean: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return value === 'true';\n      },\n      getBuffer: key => {\n        const value = storage().getItem(prefixedKey(key));\n        if (value == null) return undefined;\n        return textEncoder.encode(value).buffer;\n      },\n      getAllKeys: () => {\n        const keys = Object.keys(storage());\n        return keys.filter(key => key.startsWith(keyPrefix)).map(key => key.slice(keyPrefix.length));\n      },\n      contains: key => storage().getItem(prefixedKey(key)) != null,\n      recrypt: () => {\n        throw new Error('`recrypt(..)` is not supported on Web!');\n      },\n      size: 0,\n      isReadOnly: false,\n      trim: () => {\n        // no-op\n      }\n    };\n  };\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0,"Object"],[5,8,3,0],[5,9,3,0,"defineProperty"],[5,23,3,0],[5,24,3,0,"exports"],[5,31,3,0],[6,4,3,0,"value"],[6,9,3,0],[7,2,3,0],[8,2,18,0,"Object"],[8,8,18,0],[8,9,18,0,"defineProperty"],[8,23,18,0],[8,24,18,0,"exports"],[8,31,18,0],[9,4,18,0,"enumerable"],[9,14,18,0],[10,4,18,0,"get"],[10,7,18,0],[10,18,18,0,"get"],[10,19,18,0],[11,6,18,0],[11,13,18,0,"createMMKV"],[11,23,18,0],[12,4,18,0],[13,2,18,0],[14,2,5,0],[14,6,5,0,"_createTextEncoder"],[14,24,5,0],[14,27,5,0,"require"],[14,34,5,0],[14,35,5,0,"_dependencyMap"],[14,49,5,0],[15,2,6,0],[15,8,6,6,"canUseDOM"],[15,17,6,15],[15,20,6,18],[15,27,6,25,"window"],[15,33,6,31],[15,38,6,36],[15,49,6,47],[15,53,6,51,"window"],[15,59,6,57],[15,60,6,58,"document"],[15,68,6,66],[15,70,6,68,"createElement"],[15,83,6,81],[15,87,6,85],[15,91,6,89],[16,2,7,0],[16,8,7,6,"hasAccessToLocalStorage"],[16,31,7,29],[16,34,7,32,"hasAccessToLocalStorage"],[16,35,7,32],[16,40,7,38],[17,4,8,2],[17,8,8,6],[18,6,9,4],[19,6,10,4,"window"],[19,12,10,10],[19,13,10,11,"localStorage"],[19,25,10,23],[20,6,11,4],[20,13,11,11],[20,17,11,15],[21,4,12,2],[21,5,12,3],[21,6,12,4],[21,12,12,10],[22,6,13,4],[22,13,13,11],[22,18,13,16],[23,4,14,2],[24,2,15,0],[24,3,15,1],[25,2,16,0],[25,8,16,6,"KEY_WILDCARD"],[25,20,16,18],[25,23,16,21],[25,27,16,25],[26,2,17,0],[26,8,17,6,"inMemoryStorage"],[26,23,17,21],[26,26,17,24],[26,30,17,28,"Map"],[26,33,17,31],[26,34,17,32],[26,35,17,33],[27,2,18,7],[27,8,18,13,"createMMKV"],[27,18,18,23],[27,21,18,26,"config"],[27,27,18,32],[27,31,18,36],[28,4,19,2],[28,8,19,6,"config"],[28,14,19,12],[28,15,19,13,"encryptionKey"],[28,28,19,26],[28,32,19,30],[28,36,19,34],[28,38,19,36],[29,6,20,4],[29,12,20,10],[29,16,20,14,"Error"],[29,21,20,19],[29,22,20,20],[29,70,20,68],[29,71,20,69],[30,4,21,2],[31,4,22,2],[31,8,22,6,"config"],[31,14,22,12],[31,15,22,13,"path"],[31,19,22,17],[31,23,22,21],[31,27,22,25],[31,29,22,27],[32,6,23,4],[32,12,23,10],[32,16,23,14,"Error"],[32,21,23,19],[32,22,23,20],[32,61,23,59],[32,62,23,60],[33,4,24,2],[35,4,26,2],[36,4,27,2],[36,8,27,6],[36,9,27,7,"hasAccessToLocalStorage"],[36,32,27,30],[36,33,27,31],[36,34,27,32],[36,38,27,36,"canUseDOM"],[36,47,27,45],[36,49,27,47],[37,6,28,4,"console"],[37,13,28,11],[37,14,28,12,"warn"],[37,18,28,16],[37,19,28,17],[37,112,28,110],[37,113,28,111],[38,4,29,2],[39,4,30,2],[39,10,30,8,"storage"],[39,17,30,15],[39,20,30,18,"storage"],[39,21,30,18],[39,26,30,24],[40,6,31,4],[40,10,31,8],[40,11,31,9,"canUseDOM"],[40,20,31,18],[40,22,31,20],[41,8,32,6],[41,14,32,12],[41,18,32,16,"Error"],[41,23,32,21],[41,24,32,22],[41,106,32,104],[41,107,32,105],[42,6,33,4],[43,6,34,4],[43,10,34,8],[43,11,34,9,"hasAccessToLocalStorage"],[43,34,34,32],[43,35,34,33],[43,36,34,34],[43,38,34,36],[44,8,35,6],[44,15,35,13],[45,10,36,8,"getItem"],[45,17,36,15],[45,19,36,17,"key"],[45,22,36,20],[45,26,36,24,"inMemoryStorage"],[45,41,36,39],[45,42,36,40,"get"],[45,45,36,43],[45,46,36,44,"key"],[45,49,36,47],[45,50,36,48],[45,54,36,52],[45,58,36,56],[46,10,37,8,"setItem"],[46,17,37,15],[46,19,37,17,"setItem"],[46,20,37,18,"key"],[46,23,37,21],[46,25,37,23,"value"],[46,30,37,28],[46,35,37,33,"inMemoryStorage"],[46,50,37,48],[46,51,37,49,"set"],[46,54,37,52],[46,55,37,53,"key"],[46,58,37,56],[46,60,37,58,"value"],[46,65,37,63],[46,66,37,64],[47,10,38,8,"removeItem"],[47,20,38,18],[47,22,38,20,"key"],[47,25,38,23],[47,29,38,27,"inMemoryStorage"],[47,44,38,42],[47,45,38,43,"delete"],[47,51,38,49],[47,52,38,50,"key"],[47,55,38,53],[47,56,38,54],[48,10,39,8,"clear"],[48,15,39,13],[48,17,39,15,"clear"],[48,18,39,15],[48,23,39,21,"inMemoryStorage"],[48,38,39,36],[48,39,39,37,"clear"],[48,44,39,42],[48,45,39,43],[48,46,39,44],[49,10,40,8,"length"],[49,16,40,14],[49,18,40,16,"inMemoryStorage"],[49,33,40,31],[49,34,40,32,"size"],[49,38,40,36],[50,10,41,8,"key"],[50,13,41,11],[50,15,41,13,"index"],[50,20,41,18],[50,24,41,22,"Object"],[50,30,41,28],[50,31,41,29,"keys"],[50,35,41,33],[50,36,41,34,"inMemoryStorage"],[50,51,41,49],[50,52,41,50],[50,53,41,51,"at"],[50,55,41,53],[50,56,41,54,"index"],[50,61,41,59],[50,62,41,60],[50,66,41,64],[51,8,42,6],[51,9,42,7],[52,6,43,4],[53,6,44,4],[53,12,44,10,"domStorage"],[53,22,44,20],[53,25,44,23,"global"],[53,31,44,29],[53,33,44,31,"localStorage"],[53,45,44,43],[53,49,44,47,"window"],[53,55,44,53],[53,57,44,55,"localStorage"],[53,69,44,67],[53,73,44,71,"localStorage"],[53,85,44,83],[54,6,45,4],[54,10,45,8,"domStorage"],[54,20,45,18],[54,24,45,22],[54,28,45,26],[54,30,45,28],[55,8,46,6],[55,14,46,12],[55,18,46,16,"Error"],[55,23,46,21],[55,24,46,22],[55,65,46,63],[55,66,46,64],[56,6,47,4],[57,6,48,4],[57,13,48,11,"domStorage"],[57,23,48,21],[58,4,49,2],[58,5,49,3],[59,4,50,2],[59,10,50,8,"textEncoder"],[59,21,50,19],[59,24,50,22],[59,28,50,22,"createTextEncoder"],[59,46,50,39],[59,47,50,39,"createTextEncoder"],[59,64,50,39],[59,66,50,40],[59,67,50,41],[60,4,51,2],[60,8,51,6,"config"],[60,14,51,12],[60,15,51,13,"id"],[60,17,51,15],[60,18,51,16,"includes"],[60,26,51,24],[60,27,51,25,"KEY_WILDCARD"],[60,39,51,37],[60,40,51,38],[60,42,51,40],[61,6,52,4],[61,12,52,10],[61,16,52,14,"Error"],[61,21,52,19],[61,22,52,20],[61,81,52,79],[61,82,52,80],[62,4,53,2],[63,4,54,2],[63,10,54,8,"keyPrefix"],[63,19,54,17],[63,22,54,20],[63,25,54,23,"config"],[63,31,54,29],[63,32,54,30,"id"],[63,34,54,32],[63,37,54,35,"KEY_WILDCARD"],[63,49,54,47],[63,51,54,49],[63,52,54,50],[63,53,54,51],[64,4,55,2],[64,10,55,8,"prefixedKey"],[64,21,55,19],[64,24,55,22,"key"],[64,27,55,25],[64,31,55,29],[65,6,56,4],[65,10,56,8,"key"],[65,13,56,11],[65,14,56,12,"includes"],[65,22,56,20],[65,23,56,21],[65,27,56,25],[65,28,56,26],[65,30,56,28],[66,8,57,6],[66,14,57,12],[66,18,57,16,"Error"],[66,23,57,21],[66,24,57,22],[66,84,57,82],[66,85,57,83],[67,6,58,4],[68,6,59,4],[68,13,59,11],[68,16,59,14,"keyPrefix"],[68,25,59,23],[68,28,59,26,"key"],[68,31,59,29],[68,33,59,31],[69,4,60,2],[69,5,60,3],[70,4,61,2],[70,11,61,9],[71,6,62,4,"clearAll"],[71,14,62,12],[71,16,62,14,"clearAll"],[71,17,62,14],[71,22,62,20],[72,8,63,6],[72,14,63,12,"keys"],[72,18,63,16],[72,21,63,19,"Object"],[72,27,63,25],[72,28,63,26,"keys"],[72,32,63,30],[72,33,63,31,"storage"],[72,40,63,38],[72,41,63,39],[72,42,63,40],[72,43,63,41],[73,8,64,6],[73,13,64,11],[73,19,64,17,"key"],[73,22,64,20],[73,26,64,24,"keys"],[73,30,64,28],[73,32,64,30],[74,10,65,8],[74,14,65,12,"key"],[74,17,65,15],[74,18,65,16,"startsWith"],[74,28,65,26],[74,29,65,27,"keyPrefix"],[74,38,65,36],[74,39,65,37],[74,41,65,39],[75,12,66,10,"storage"],[75,19,66,17],[75,20,66,18],[75,21,66,19],[75,22,66,20,"removeItem"],[75,32,66,30],[75,33,66,31,"key"],[75,36,66,34],[75,37,66,35],[76,10,67,8],[77,8,68,6],[78,6,69,4],[78,7,69,5],[79,6,70,4,"delete"],[79,12,70,10],[79,14,70,12,"key"],[79,17,70,15],[79,21,70,19,"storage"],[79,28,70,26],[79,29,70,27],[79,30,70,28],[79,31,70,29,"removeItem"],[79,41,70,39],[79,42,70,40,"prefixedKey"],[79,53,70,51],[79,54,70,52,"key"],[79,57,70,55],[79,58,70,56],[79,59,70,57],[80,6,71,4,"set"],[80,9,71,7],[80,11,71,9,"set"],[80,12,71,10,"key"],[80,15,71,13],[80,17,71,15,"value"],[80,22,71,20],[80,27,71,25],[81,8,72,6,"storage"],[81,15,72,13],[81,16,72,14],[81,17,72,15],[81,18,72,16,"setItem"],[81,25,72,23],[81,26,72,24,"prefixedKey"],[81,37,72,35],[81,38,72,36,"key"],[81,41,72,39],[81,42,72,40],[81,44,72,42,"value"],[81,49,72,47],[81,50,72,48,"toString"],[81,58,72,56],[81,59,72,57],[81,60,72,58],[81,61,72,59],[82,6,73,4],[82,7,73,5],[83,6,74,4,"getString"],[83,15,74,13],[83,17,74,15,"key"],[83,20,74,18],[83,24,74,22,"storage"],[83,31,74,29],[83,32,74,30],[83,33,74,31],[83,34,74,32,"getItem"],[83,41,74,39],[83,42,74,40,"prefixedKey"],[83,53,74,51],[83,54,74,52,"key"],[83,57,74,55],[83,58,74,56],[83,59,74,57],[83,63,74,61,"undefined"],[83,72,74,70],[84,6,75,4,"getNumber"],[84,15,75,13],[84,17,75,15,"key"],[84,20,75,18],[84,24,75,22],[85,8,76,6],[85,14,76,12,"value"],[85,19,76,17],[85,22,76,20,"storage"],[85,29,76,27],[85,30,76,28],[85,31,76,29],[85,32,76,30,"getItem"],[85,39,76,37],[85,40,76,38,"prefixedKey"],[85,51,76,49],[85,52,76,50,"key"],[85,55,76,53],[85,56,76,54],[85,57,76,55],[86,8,77,6],[86,12,77,10,"value"],[86,17,77,15],[86,21,77,19],[86,25,77,23],[86,27,77,25],[86,34,77,32,"undefined"],[86,43,77,41],[87,8,78,6],[87,15,78,13,"Number"],[87,21,78,19],[87,22,78,20,"value"],[87,27,78,25],[87,28,78,26],[88,6,79,4],[88,7,79,5],[89,6,80,4,"getBoolean"],[89,16,80,14],[89,18,80,16,"key"],[89,21,80,19],[89,25,80,23],[90,8,81,6],[90,14,81,12,"value"],[90,19,81,17],[90,22,81,20,"storage"],[90,29,81,27],[90,30,81,28],[90,31,81,29],[90,32,81,30,"getItem"],[90,39,81,37],[90,40,81,38,"prefixedKey"],[90,51,81,49],[90,52,81,50,"key"],[90,55,81,53],[90,56,81,54],[90,57,81,55],[91,8,82,6],[91,12,82,10,"value"],[91,17,82,15],[91,21,82,19],[91,25,82,23],[91,27,82,25],[91,34,82,32,"undefined"],[91,43,82,41],[92,8,83,6],[92,15,83,13,"value"],[92,20,83,18],[92,25,83,23],[92,31,83,29],[93,6,84,4],[93,7,84,5],[94,6,85,4,"getBuffer"],[94,15,85,13],[94,17,85,15,"key"],[94,20,85,18],[94,24,85,22],[95,8,86,6],[95,14,86,12,"value"],[95,19,86,17],[95,22,86,20,"storage"],[95,29,86,27],[95,30,86,28],[95,31,86,29],[95,32,86,30,"getItem"],[95,39,86,37],[95,40,86,38,"prefixedKey"],[95,51,86,49],[95,52,86,50,"key"],[95,55,86,53],[95,56,86,54],[95,57,86,55],[96,8,87,6],[96,12,87,10,"value"],[96,17,87,15],[96,21,87,19],[96,25,87,23],[96,27,87,25],[96,34,87,32,"undefined"],[96,43,87,41],[97,8,88,6],[97,15,88,13,"textEncoder"],[97,26,88,24],[97,27,88,25,"encode"],[97,33,88,31],[97,34,88,32,"value"],[97,39,88,37],[97,40,88,38],[97,41,88,39,"buffer"],[97,47,88,45],[98,6,89,4],[98,7,89,5],[99,6,90,4,"getAllKeys"],[99,16,90,14],[99,18,90,16,"getAllKeys"],[99,19,90,16],[99,24,90,22],[100,8,91,6],[100,14,91,12,"keys"],[100,18,91,16],[100,21,91,19,"Object"],[100,27,91,25],[100,28,91,26,"keys"],[100,32,91,30],[100,33,91,31,"storage"],[100,40,91,38],[100,41,91,39],[100,42,91,40],[100,43,91,41],[101,8,92,6],[101,15,92,13,"keys"],[101,19,92,17],[101,20,92,18,"filter"],[101,26,92,24],[101,27,92,25,"key"],[101,30,92,28],[101,34,92,32,"key"],[101,37,92,35],[101,38,92,36,"startsWith"],[101,48,92,46],[101,49,92,47,"keyPrefix"],[101,58,92,56],[101,59,92,57],[101,60,92,58],[101,61,92,59,"map"],[101,64,92,62],[101,65,92,63,"key"],[101,68,92,66],[101,72,92,70,"key"],[101,75,92,73],[101,76,92,74,"slice"],[101,81,92,79],[101,82,92,80,"keyPrefix"],[101,91,92,89],[101,92,92,90,"length"],[101,98,92,96],[101,99,92,97],[101,100,92,98],[102,6,93,4],[102,7,93,5],[103,6,94,4,"contains"],[103,14,94,12],[103,16,94,14,"key"],[103,19,94,17],[103,23,94,21,"storage"],[103,30,94,28],[103,31,94,29],[103,32,94,30],[103,33,94,31,"getItem"],[103,40,94,38],[103,41,94,39,"prefixedKey"],[103,52,94,50],[103,53,94,51,"key"],[103,56,94,54],[103,57,94,55],[103,58,94,56],[103,62,94,60],[103,66,94,64],[104,6,95,4,"recrypt"],[104,13,95,11],[104,15,95,13,"recrypt"],[104,16,95,13],[104,21,95,19],[105,8,96,6],[105,14,96,12],[105,18,96,16,"Error"],[105,23,96,21],[105,24,96,22],[105,64,96,62],[105,65,96,63],[106,6,97,4],[106,7,97,5],[107,6,98,4,"size"],[107,10,98,8],[107,12,98,10],[107,13,98,11],[108,6,99,4,"isReadOnly"],[108,16,99,14],[108,18,99,16],[108,23,99,21],[109,6,100,4,"trim"],[109,10,100,8],[109,12,100,10,"trim"],[109,13,100,10],[109,18,100,16],[110,8,101,6],[111,6,101,6],[112,4,103,2],[112,5,103,3],[113,2,104,0],[113,3,104,1],[114,0,104,2],[114,3]],"functionMap":{"names":["<global>","hasAccessToLocalStorage","createMMKV","storage","getItem","setItem","removeItem","clear","key","prefixedKey","clearAll","_delete","set","getString","getNumber","getBoolean","getBuffer","getAllKeys","keys.filter$argument_0","keys.filter.map$argument_0","contains","recrypt","trim"],"mappings":"AAA;gCCM;CDQ;0BEG;kBCY;iBCM,uCD;iBEC,+CF;oBGC,kCH;eIC,6BJ;aKE,uDL;GDQ;sBOM;GPK;cQE;KRO;YSC,6CT;SUC;KVE;eWC,uDX;eYC;KZI;gBaC;KbI;ecC;KdI;gBeC;yBCE,gCD,ME,kCF;KfC;ckBC,kDlB;amBC;KnBE;UoBG;KpBE;CFE"},"hasCjsExports":false},"type":"js/module"}]}