{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"zustand/middleware","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":59,"index":93}}],"key":"YMP0j6stqbYl0MJAKxYubYnfTz0=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":129},"end":{"line":4,"column":69,"index":198}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  Object.defineProperty(exports, \"storage\", {\n    enumerable: true,\n    get: function () {\n      return storage;\n    }\n  });\n  Object.defineProperty(exports, \"fastDistance\", {\n    enumerable: true,\n    get: function () {\n      return fastDistance;\n    }\n  });\n  Object.defineProperty(exports, \"useAppStore\", {\n    enumerable: true,\n    get: function () {\n      return useAppStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _zustandMiddleware = require(_dependencyMap[1], \"zustand/middleware\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[2], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  // Cross-platform storage solution\n\n  const storage = {\n    getString: async key => {\n      return await AsyncStorage.default.getItem(key);\n    },\n    set: async (key, value) => {\n      return await AsyncStorage.default.setItem(key, value);\n    },\n    delete: async key => {\n      return await AsyncStorage.default.removeItem(key);\n    }\n  };\n\n  // Default hazard types with optimized configuration\n  const defaultHazardTypes = [{\n    id: 'pothole',\n    name: 'Ямы',\n    icon: 'alert-circle',\n    enabled: true,\n    criticalDistance: 50\n  }, {\n    id: 'speed_bump',\n    name: 'Лежачие полицейские',\n    icon: 'triangle',\n    enabled: true,\n    criticalDistance: 30\n  }, {\n    id: 'road_defect',\n    name: 'Дефекты покрытия',\n    icon: 'warning',\n    enabled: true,\n    criticalDistance: 40\n  }, {\n    id: 'pedestrian_crossing',\n    name: 'Пешеходные переходы',\n    icon: 'walk',\n    enabled: true,\n    criticalDistance: 60\n  }, {\n    id: 'railway_crossing',\n    name: 'ЖД переезды',\n    icon: 'train',\n    enabled: true,\n    criticalDistance: 100\n  }, {\n    id: 'unpaved_road',\n    name: 'Грунтовое покрытие',\n    icon: 'trail-sign',\n    enabled: true,\n    criticalDistance: 70\n  }, {\n    id: 'construction',\n    name: 'Дорожные работы',\n    icon: 'construct',\n    enabled: true,\n    criticalDistance: 80\n  }];\n  const defaultSettings = {\n    audioWarnings: true,\n    vibrationWarnings: true,\n    warningVolume: 0.8,\n    speedThreshold: 15,\n    minWarningDistance: 30,\n    maxWarningDistance: 200,\n    warningCooldown: 5,\n    hazardTypes: defaultHazardTypes\n  };\n\n  // Location and tracking data interface\n\n  // Optimized store interface\n\n  // Memoized calculation functions\n  const calculateRoadCondition = locationHistory => {\n    if (locationHistory.length < 5) return 75;\n    const recentData = locationHistory.slice(-20);\n    const speedVariations = recentData.map((loc, i) => i > 0 ? Math.abs(loc.speed - recentData[i - 1].speed) : 0);\n    const avgSpeedVariation = speedVariations.reduce((a, b) => a + b, 0) / speedVariations.length;\n    const score = Math.max(0, Math.min(100, 100 - avgSpeedVariation * 10));\n    return score;\n  };\n\n  // Optimized distance calculation using fast approximation for nearby points\n  const fastDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371000; // Earth radius in meters\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const lat = (lat1 + lat2) / 2 * Math.PI / 180;\n    const dx = dLon * R * Math.cos(lat);\n    const dy = dLat * R;\n    return Math.sqrt(dx * dx + dy * dy);\n  };\n\n  // Create optimized store with persistence\n  const useAppStore = (0, _zustand.create)()((0, _zustandMiddleware.subscribeWithSelector)((set, get) => ({\n    // Settings\n    settings: defaultSettings,\n    loadSettings: async () => {\n      try {\n        const stored = await storage.getString('app_settings');\n        if (stored) {\n          const parsed = JSON.parse(stored);\n          set({\n            settings: {\n              ...defaultSettings,\n              ...parsed\n            }\n          });\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n        // Fallback to defaults\n        set({\n          settings: defaultSettings\n        });\n      }\n    },\n    updateSettings: async newSettings => {\n      const updatedSettings = {\n        ...get().settings,\n        ...newSettings\n      };\n      set({\n        settings: updatedSettings\n      });\n      try {\n        await storage.set('app_settings', JSON.stringify(updatedSettings));\n      } catch (error) {\n        console.error('Error saving settings:', error);\n      }\n    },\n    resetSettings: async () => {\n      set({\n        settings: defaultSettings\n      });\n      await storage.delete('app_settings');\n    },\n    // Tracking state\n    isTracking: false,\n    setTracking: tracking => set({\n      isTracking: tracking\n    }),\n    // Location data with optimized updates\n    currentLocation: null,\n    locationHistory: [],\n    updateLocation: location => {\n      const {\n        locationHistory,\n        settings\n      } = get();\n\n      // Limit history size for performance (keep last 100 points)\n      const newHistory = [...locationHistory.slice(-99), location];\n\n      // Calculate road condition only when needed\n      const newScore = calculateRoadCondition(newHistory);\n      set({\n        currentLocation: location,\n        locationHistory: newHistory,\n        roadConditionScore: newScore\n      });\n    },\n    clearLocationHistory: () => set({\n      locationHistory: []\n    }),\n    // Road conditions\n    roadConditionScore: 75,\n    updateRoadScore: score => set({\n      roadConditionScore: score\n    }),\n    // Hazards with optimized management\n    activeHazards: [],\n    warningHistory: [],\n    lastWarningTime: 0,\n    addHazard: hazard => {\n      const {\n        activeHazards,\n        settings\n      } = get();\n      const now = Date.now();\n\n      // Check if similar hazard already exists nearby\n      const existingSimilar = activeHazards.find(h => h.type === hazard.type && fastDistance(h.latitude, h.longitude, hazard.latitude, hazard.longitude) < 100);\n      if (!existingSimilar) {\n        const newHazards = [...activeHazards, hazard];\n        set({\n          activeHazards: newHazards,\n          warningHistory: [...get().warningHistory, {\n            hazard,\n            timestamp: now\n          }].slice(-50),\n          // Keep last 50\n          lastWarningTime: now\n        });\n      }\n    },\n    removeHazard: hazardId => {\n      set({\n        activeHazards: get().activeHazards.filter(h => h.id !== hazardId)\n      });\n    },\n    clearHazards: () => set({\n      activeHazards: [],\n      warningHistory: []\n    }),\n    // Performance stats\n    dataProcessingStats: {\n      totalDataPoints: 0,\n      lastSyncTime: 0,\n      syncErrors: 0\n    },\n    updateStats: stats => {\n      set({\n        dataProcessingStats: {\n          ...get().dataProcessingStats,\n          ...stats\n        }\n      });\n    }\n  })));\n\n  // Auto-persist critical data\n  useAppStore.subscribe(state => state.settings, async settings => {\n    try {\n      await storage.set('app_settings', JSON.stringify(settings));\n    } catch (error) {\n      console.error('Error persisting settings:', error);\n    }\n  }, {\n    equalityFn: (a, b) => JSON.stringify(a) === JSON.stringify(b)\n  });\n\n  // Performance monitoring\n  useAppStore.subscribe(state => state.dataProcessingStats, stats => {\n    // Log performance metrics for debugging\n    if (__DEV__) {\n      console.log('Performance stats:', stats);\n    }\n  });\n  var _default = useAppStore;\n});","lineCount":281,"map":[[12,2,266,0,"Object"],[12,8,266,0],[12,9,266,0,"defineProperty"],[12,23,266,0],[12,24,266,0,"exports"],[12,31,266,0],[13,4,266,0,"enumerable"],[13,14,266,0],[14,4,266,0,"get"],[14,7,266,0],[14,18,266,0,"get"],[14,19,266,0],[15,6,266,0],[15,13,266,0,"_default"],[15,21,266,0],[16,4,266,0],[17,2,266,0],[18,2,7,0,"Object"],[18,8,7,0],[18,9,7,0,"defineProperty"],[18,23,7,0],[18,24,7,0,"exports"],[18,31,7,0],[19,4,7,0,"enumerable"],[19,14,7,0],[20,4,7,0,"get"],[20,7,7,0],[20,18,7,0,"get"],[20,19,7,0],[21,6,7,0],[21,13,7,0,"storage"],[21,20,7,0],[22,4,7,0],[23,2,7,0],[24,2,116,0,"Object"],[24,8,116,0],[24,9,116,0,"defineProperty"],[24,23,116,0],[24,24,116,0,"exports"],[24,31,116,0],[25,4,116,0,"enumerable"],[25,14,116,0],[26,4,116,0,"get"],[26,7,116,0],[26,18,116,0,"get"],[26,19,116,0],[27,6,116,0],[27,13,116,0,"fastDistance"],[27,25,116,0],[28,4,116,0],[29,2,116,0],[30,2,129,0,"Object"],[30,8,129,0],[30,9,129,0,"defineProperty"],[30,23,129,0],[30,24,129,0,"exports"],[30,31,129,0],[31,4,129,0,"enumerable"],[31,14,129,0],[32,4,129,0,"get"],[32,7,129,0],[32,18,129,0,"get"],[32,19,129,0],[33,6,129,0],[33,13,129,0,"useAppStore"],[33,24,129,0],[34,4,129,0],[35,2,129,0],[36,2,1,0],[36,6,1,0,"_zustand"],[36,14,1,0],[36,17,1,0,"require"],[36,24,1,0],[36,25,1,0,"_dependencyMap"],[36,39,1,0],[37,2,2,0],[37,6,2,0,"_zustandMiddleware"],[37,24,2,0],[37,27,2,0,"require"],[37,34,2,0],[37,35,2,0,"_dependencyMap"],[37,49,2,0],[38,2,4,0],[38,6,4,0,"_reactNativeAsyncStorageAsyncStorage"],[38,42,4,0],[38,45,4,0,"require"],[38,52,4,0],[38,53,4,0,"_dependencyMap"],[38,67,4,0],[39,2,4,0],[39,6,4,0,"AsyncStorage"],[39,18,4,0],[39,21,4,0,"_interopDefault"],[39,36,4,0],[39,37,4,0,"_reactNativeAsyncStorageAsyncStorage"],[39,73,4,0],[40,2,3,0],[42,2,7,7],[42,8,7,13,"storage"],[42,15,7,20],[42,18,7,23],[43,4,8,2,"getString"],[43,13,8,11],[43,15,8,13],[43,21,8,20,"key"],[43,24,8,31],[43,28,8,36],[44,6,9,4],[44,13,9,11],[44,19,9,17,"AsyncStorage"],[44,31,9,29],[44,32,9,29,"default"],[44,39,9,29],[44,40,9,30,"getItem"],[44,47,9,37],[44,48,9,38,"key"],[44,51,9,41],[44,52,9,42],[45,4,10,2],[45,5,10,3],[46,4,11,2,"set"],[46,7,11,5],[46,9,11,7],[46,15,11,7,"set"],[46,16,11,14,"key"],[46,19,11,25],[46,21,11,27,"value"],[46,26,11,40],[46,31,11,45],[47,6,12,4],[47,13,12,11],[47,19,12,17,"AsyncStorage"],[47,31,12,29],[47,32,12,29,"default"],[47,39,12,29],[47,40,12,30,"setItem"],[47,47,12,37],[47,48,12,38,"key"],[47,51,12,41],[47,53,12,43,"value"],[47,58,12,48],[47,59,12,49],[48,4,13,2],[48,5,13,3],[49,4,14,2,"delete"],[49,10,14,8],[49,12,14,10],[49,18,14,17,"key"],[49,21,14,28],[49,25,14,33],[50,6,15,4],[50,13,15,11],[50,19,15,17,"AsyncStorage"],[50,31,15,29],[50,32,15,29,"default"],[50,39,15,29],[50,40,15,30,"removeItem"],[50,50,15,40],[50,51,15,41,"key"],[50,54,15,44],[50,55,15,45],[51,4,16,2],[52,2,17,0],[52,3,17,1],[54,2,19,0],[55,2,20,0],[55,8,20,6,"defaultHazardTypes"],[55,26,20,38],[55,29,20,41],[55,30,21,2],[56,4,21,4,"id"],[56,6,21,6],[56,8,21,8],[56,17,21,17],[57,4,21,19,"name"],[57,8,21,23],[57,10,21,25],[57,15,21,30],[58,4,21,32,"icon"],[58,8,21,36],[58,10,21,38],[58,24,21,52],[59,4,21,54,"enabled"],[59,11,21,61],[59,13,21,63],[59,17,21,67],[60,4,21,69,"criticalDistance"],[60,20,21,85],[60,22,21,87],[61,2,21,90],[61,3,21,91],[61,5,22,2],[62,4,22,4,"id"],[62,6,22,6],[62,8,22,8],[62,20,22,20],[63,4,22,22,"name"],[63,8,22,26],[63,10,22,28],[63,31,22,49],[64,4,22,51,"icon"],[64,8,22,55],[64,10,22,57],[64,20,22,67],[65,4,22,69,"enabled"],[65,11,22,76],[65,13,22,78],[65,17,22,82],[66,4,22,84,"criticalDistance"],[66,20,22,100],[66,22,22,102],[67,2,22,105],[67,3,22,106],[67,5,23,2],[68,4,23,4,"id"],[68,6,23,6],[68,8,23,8],[68,21,23,21],[69,4,23,23,"name"],[69,8,23,27],[69,10,23,29],[69,28,23,47],[70,4,23,49,"icon"],[70,8,23,53],[70,10,23,55],[70,19,23,64],[71,4,23,66,"enabled"],[71,11,23,73],[71,13,23,75],[71,17,23,79],[72,4,23,81,"criticalDistance"],[72,20,23,97],[72,22,23,99],[73,2,23,102],[73,3,23,103],[73,5,24,2],[74,4,24,4,"id"],[74,6,24,6],[74,8,24,8],[74,29,24,29],[75,4,24,31,"name"],[75,8,24,35],[75,10,24,37],[75,31,24,58],[76,4,24,60,"icon"],[76,8,24,64],[76,10,24,66],[76,16,24,72],[77,4,24,74,"enabled"],[77,11,24,81],[77,13,24,83],[77,17,24,87],[78,4,24,89,"criticalDistance"],[78,20,24,105],[78,22,24,107],[79,2,24,110],[79,3,24,111],[79,5,25,2],[80,4,25,4,"id"],[80,6,25,6],[80,8,25,8],[80,26,25,26],[81,4,25,28,"name"],[81,8,25,32],[81,10,25,34],[81,23,25,47],[82,4,25,49,"icon"],[82,8,25,53],[82,10,25,55],[82,17,25,62],[83,4,25,64,"enabled"],[83,11,25,71],[83,13,25,73],[83,17,25,77],[84,4,25,79,"criticalDistance"],[84,20,25,95],[84,22,25,97],[85,2,25,101],[85,3,25,102],[85,5,26,2],[86,4,26,4,"id"],[86,6,26,6],[86,8,26,8],[86,22,26,22],[87,4,26,24,"name"],[87,8,26,28],[87,10,26,30],[87,30,26,50],[88,4,26,52,"icon"],[88,8,26,56],[88,10,26,58],[88,22,26,70],[89,4,26,72,"enabled"],[89,11,26,79],[89,13,26,81],[89,17,26,85],[90,4,26,87,"criticalDistance"],[90,20,26,103],[90,22,26,105],[91,2,26,108],[91,3,26,109],[91,5,27,2],[92,4,27,4,"id"],[92,6,27,6],[92,8,27,8],[92,22,27,22],[93,4,27,24,"name"],[93,8,27,28],[93,10,27,30],[93,27,27,47],[94,4,27,49,"icon"],[94,8,27,53],[94,10,27,55],[94,21,27,66],[95,4,27,68,"enabled"],[95,11,27,75],[95,13,27,77],[95,17,27,81],[96,4,27,83,"criticalDistance"],[96,20,27,99],[96,22,27,101],[97,2,27,104],[97,3,27,105],[97,4,28,1],[98,2,30,0],[98,8,30,6,"defaultSettings"],[98,23,30,34],[98,26,30,37],[99,4,31,2,"audioWarnings"],[99,17,31,15],[99,19,31,17],[99,23,31,21],[100,4,32,2,"vibrationWarnings"],[100,21,32,19],[100,23,32,21],[100,27,32,25],[101,4,33,2,"warningVolume"],[101,17,33,15],[101,19,33,17],[101,22,33,20],[102,4,34,2,"speedThreshold"],[102,18,34,16],[102,20,34,18],[102,22,34,20],[103,4,35,2,"minWarningDistance"],[103,22,35,20],[103,24,35,22],[103,26,35,24],[104,4,36,2,"maxWarningDistance"],[104,22,36,20],[104,24,36,22],[104,27,36,25],[105,4,37,2,"warningCooldown"],[105,19,37,17],[105,21,37,19],[105,22,37,20],[106,4,38,2,"hazardTypes"],[106,15,38,13],[106,17,38,15,"defaultHazardTypes"],[107,2,39,0],[107,3,39,1],[109,2,41,0],[111,2,61,0],[113,2,100,0],[114,2,101,0],[114,8,101,6,"calculateRoadCondition"],[114,30,101,28],[114,33,101,32,"locationHistory"],[114,48,101,63],[114,52,101,76],[115,4,102,2],[115,8,102,6,"locationHistory"],[115,23,102,21],[115,24,102,22,"length"],[115,30,102,28],[115,33,102,31],[115,34,102,32],[115,36,102,34],[115,43,102,41],[115,45,102,43],[116,4,104,2],[116,10,104,8,"recentData"],[116,20,104,18],[116,23,104,21,"locationHistory"],[116,38,104,36],[116,39,104,37,"slice"],[116,44,104,42],[116,45,104,43],[116,46,104,44],[116,48,104,46],[116,49,104,47],[117,4,105,2],[117,10,105,8,"speedVariations"],[117,25,105,23],[117,28,105,26,"recentData"],[117,38,105,36],[117,39,105,37,"map"],[117,42,105,40],[117,43,105,41],[117,44,105,42,"loc"],[117,47,105,45],[117,49,105,47,"i"],[117,50,105,48],[117,55,106,4,"i"],[117,56,106,5],[117,59,106,8],[117,60,106,9],[117,63,106,12,"Math"],[117,67,106,16],[117,68,106,17,"abs"],[117,71,106,20],[117,72,106,21,"loc"],[117,75,106,24],[117,76,106,25,"speed"],[117,81,106,30],[117,84,106,33,"recentData"],[117,94,106,43],[117,95,106,44,"i"],[117,96,106,45],[117,99,106,48],[117,100,106,49],[117,101,106,50],[117,102,106,51,"speed"],[117,107,106,56],[117,108,106,57],[117,111,106,60],[117,112,107,2],[117,113,107,3],[118,4,109,2],[118,10,109,8,"avgSpeedVariation"],[118,27,109,25],[118,30,109,28,"speedVariations"],[118,45,109,43],[118,46,109,44,"reduce"],[118,52,109,50],[118,53,109,51],[118,54,109,52,"a"],[118,55,109,53],[118,57,109,55,"b"],[118,58,109,56],[118,63,109,61,"a"],[118,64,109,62],[118,67,109,65,"b"],[118,68,109,66],[118,70,109,68],[118,71,109,69],[118,72,109,70],[118,75,109,73,"speedVariations"],[118,90,109,88],[118,91,109,89,"length"],[118,97,109,95],[119,4,110,2],[119,10,110,8,"score"],[119,15,110,13],[119,18,110,16,"Math"],[119,22,110,20],[119,23,110,21,"max"],[119,26,110,24],[119,27,110,25],[119,28,110,26],[119,30,110,28,"Math"],[119,34,110,32],[119,35,110,33,"min"],[119,38,110,36],[119,39,110,37],[119,42,110,40],[119,44,110,42],[119,47,110,45],[119,50,110,49,"avgSpeedVariation"],[119,67,110,66],[119,70,110,69],[119,72,110,72],[119,73,110,73],[119,74,110,74],[120,4,112,2],[120,11,112,9,"score"],[120,16,112,14],[121,2,113,0],[121,3,113,1],[123,2,115,0],[124,2,116,7],[124,8,116,13,"fastDistance"],[124,20,116,25],[124,23,116,28,"fastDistance"],[124,24,116,29,"lat1"],[124,28,116,41],[124,30,116,43,"lon1"],[124,34,116,55],[124,36,116,57,"lat2"],[124,40,116,69],[124,42,116,71,"lon2"],[124,46,116,83],[124,51,116,96],[125,4,117,2],[125,10,117,8,"R"],[125,11,117,9],[125,14,117,12],[125,21,117,19],[125,22,117,20],[125,23,117,21],[126,4,118,2],[126,10,118,8,"dLat"],[126,14,118,12],[126,17,118,15],[126,18,118,16,"lat2"],[126,22,118,20],[126,25,118,23,"lat1"],[126,29,118,27],[126,33,118,31,"Math"],[126,37,118,35],[126,38,118,36,"PI"],[126,40,118,38],[126,43,118,41],[126,46,118,44],[127,4,119,2],[127,10,119,8,"dLon"],[127,14,119,12],[127,17,119,15],[127,18,119,16,"lon2"],[127,22,119,20],[127,25,119,23,"lon1"],[127,29,119,27],[127,33,119,31,"Math"],[127,37,119,35],[127,38,119,36,"PI"],[127,40,119,38],[127,43,119,41],[127,46,119,44],[128,4,120,2],[128,10,120,8,"lat"],[128,13,120,11],[128,16,120,14],[128,17,120,15,"lat1"],[128,21,120,19],[128,24,120,22,"lat2"],[128,28,120,26],[128,32,120,30],[128,33,120,31],[128,36,120,34,"Math"],[128,40,120,38],[128,41,120,39,"PI"],[128,43,120,41],[128,46,120,44],[128,49,120,47],[129,4,122,2],[129,10,122,8,"dx"],[129,12,122,10],[129,15,122,13,"dLon"],[129,19,122,17],[129,22,122,20,"R"],[129,23,122,21],[129,26,122,24,"Math"],[129,30,122,28],[129,31,122,29,"cos"],[129,34,122,32],[129,35,122,33,"lat"],[129,38,122,36],[129,39,122,37],[130,4,123,2],[130,10,123,8,"dy"],[130,12,123,10],[130,15,123,13,"dLat"],[130,19,123,17],[130,22,123,20,"R"],[130,23,123,21],[131,4,125,2],[131,11,125,9,"Math"],[131,15,125,13],[131,16,125,14,"sqrt"],[131,20,125,18],[131,21,125,19,"dx"],[131,23,125,21],[131,26,125,24,"dx"],[131,28,125,26],[131,31,125,29,"dy"],[131,33,125,31],[131,36,125,34,"dy"],[131,38,125,36],[131,39,125,37],[132,2,126,0],[132,3,126,1],[134,2,128,0],[135,2,129,7],[135,8,129,13,"useAppStore"],[135,19,129,24],[135,22,129,27],[135,26,129,27,"create"],[135,34,129,33],[135,35,129,33,"create"],[135,41,129,33],[135,43,129,44],[135,44,129,45],[135,45,130,2],[135,49,130,2,"subscribeWithSelector"],[135,67,130,23],[135,68,130,23,"subscribeWithSelector"],[135,89,130,23],[135,91,130,24],[135,92,130,25,"set"],[135,95,130,28],[135,97,130,30,"get"],[135,100,130,33],[135,106,130,39],[136,4,131,4],[137,4,132,4,"settings"],[137,12,132,12],[137,14,132,14,"defaultSettings"],[137,29,132,29],[138,4,134,4,"loadSettings"],[138,16,134,16],[138,18,134,18],[138,24,134,18,"loadSettings"],[138,25,134,18],[138,30,134,30],[139,6,135,6],[139,10,135,10],[140,8,136,8],[140,14,136,14,"stored"],[140,20,136,20],[140,23,136,23],[140,29,136,29,"storage"],[140,36,136,36],[140,37,136,37,"getString"],[140,46,136,46],[140,47,136,47],[140,61,136,61],[140,62,136,62],[141,8,137,8],[141,12,137,12,"stored"],[141,18,137,18],[141,20,137,20],[142,10,138,10],[142,16,138,16,"parsed"],[142,22,138,22],[142,25,138,25,"JSON"],[142,29,138,29],[142,30,138,30,"parse"],[142,35,138,35],[142,36,138,36,"stored"],[142,42,138,42],[142,43,138,43],[143,10,139,10,"set"],[143,13,139,13],[143,14,139,14],[144,12,139,16,"settings"],[144,20,139,24],[144,22,139,26],[145,14,139,28],[145,17,139,31,"defaultSettings"],[145,32,139,46],[146,14,139,48],[146,17,139,51,"parsed"],[147,12,139,58],[148,10,139,60],[148,11,139,61],[148,12,139,62],[149,8,140,8],[150,6,141,6],[150,7,141,7],[150,8,141,8],[150,15,141,15,"error"],[150,20,141,20],[150,22,141,22],[151,8,142,8,"console"],[151,15,142,15],[151,16,142,16,"error"],[151,21,142,21],[151,22,142,22],[151,47,142,47],[151,49,142,49,"error"],[151,54,142,54],[151,55,142,55],[152,8,143,8],[153,8,144,8,"set"],[153,11,144,11],[153,12,144,12],[154,10,144,14,"settings"],[154,18,144,22],[154,20,144,24,"defaultSettings"],[155,8,144,40],[155,9,144,41],[155,10,144,42],[156,6,145,6],[157,4,146,4],[157,5,146,5],[158,4,148,4,"updateSettings"],[158,18,148,18],[158,20,148,20],[158,26,148,27,"newSettings"],[158,37,148,38],[158,41,148,43],[159,6,149,6],[159,12,149,12,"updatedSettings"],[159,27,149,27],[159,30,149,30],[160,8,149,32],[160,11,149,35,"get"],[160,14,149,38],[160,15,149,39],[160,16,149,40],[160,17,149,41,"settings"],[160,25,149,49],[161,8,149,51],[161,11,149,54,"newSettings"],[162,6,149,66],[162,7,149,67],[163,6,150,6,"set"],[163,9,150,9],[163,10,150,10],[164,8,150,12,"settings"],[164,16,150,20],[164,18,150,22,"updatedSettings"],[165,6,150,38],[165,7,150,39],[165,8,150,40],[166,6,152,6],[166,10,152,10],[167,8,153,8],[167,14,153,14,"storage"],[167,21,153,21],[167,22,153,22,"set"],[167,25,153,25],[167,26,153,26],[167,40,153,40],[167,42,153,42,"JSON"],[167,46,153,46],[167,47,153,47,"stringify"],[167,56,153,56],[167,57,153,57,"updatedSettings"],[167,72,153,72],[167,73,153,73],[167,74,153,74],[168,6,154,6],[168,7,154,7],[168,8,154,8],[168,15,154,15,"error"],[168,20,154,20],[168,22,154,22],[169,8,155,8,"console"],[169,15,155,15],[169,16,155,16,"error"],[169,21,155,21],[169,22,155,22],[169,46,155,46],[169,48,155,48,"error"],[169,53,155,53],[169,54,155,54],[170,6,156,6],[171,4,157,4],[171,5,157,5],[172,4,159,4,"resetSettings"],[172,17,159,17],[172,19,159,19],[172,25,159,19,"resetSettings"],[172,26,159,19],[172,31,159,31],[173,6,160,6,"set"],[173,9,160,9],[173,10,160,10],[174,8,160,12,"settings"],[174,16,160,20],[174,18,160,22,"defaultSettings"],[175,6,160,38],[175,7,160,39],[175,8,160,40],[176,6,161,6],[176,12,161,12,"storage"],[176,19,161,19],[176,20,161,20,"delete"],[176,26,161,26],[176,27,161,27],[176,41,161,41],[176,42,161,42],[177,4,162,4],[177,5,162,5],[178,4,164,4],[179,4,165,4,"isTracking"],[179,14,165,14],[179,16,165,16],[179,21,165,21],[180,4,166,4,"setTracking"],[180,15,166,15],[180,17,166,18,"tracking"],[180,25,166,26],[180,29,166,31,"set"],[180,32,166,34],[180,33,166,35],[181,6,166,37,"isTracking"],[181,16,166,47],[181,18,166,49,"tracking"],[182,4,166,58],[182,5,166,59],[182,6,166,60],[183,4,168,4],[184,4,169,4,"currentLocation"],[184,19,169,19],[184,21,169,21],[184,25,169,25],[185,4,170,4,"locationHistory"],[185,19,170,19],[185,21,170,21],[185,23,170,23],[186,4,172,4,"updateLocation"],[186,18,172,18],[186,20,172,21,"location"],[186,28,172,29],[186,32,172,34],[187,6,173,6],[187,12,173,12],[188,8,173,14,"locationHistory"],[188,23,173,29],[189,8,173,31,"settings"],[190,6,173,40],[190,7,173,41],[190,10,173,44,"get"],[190,13,173,47],[190,14,173,48],[190,15,173,49],[192,6,175,6],[193,6,176,6],[193,12,176,12,"newHistory"],[193,22,176,22],[193,25,176,25],[193,26,176,26],[193,29,176,29,"locationHistory"],[193,44,176,44],[193,45,176,45,"slice"],[193,50,176,50],[193,51,176,51],[193,52,176,52],[193,54,176,54],[193,55,176,55],[193,57,176,57,"location"],[193,65,176,65],[193,66,176,66],[195,6,178,6],[196,6,179,6],[196,12,179,12,"newScore"],[196,20,179,20],[196,23,179,23,"calculateRoadCondition"],[196,45,179,45],[196,46,179,46,"newHistory"],[196,56,179,56],[196,57,179,57],[197,6,181,6,"set"],[197,9,181,9],[197,10,181,10],[198,8,182,8,"currentLocation"],[198,23,182,23],[198,25,182,25,"location"],[198,33,182,33],[199,8,183,8,"locationHistory"],[199,23,183,23],[199,25,183,25,"newHistory"],[199,35,183,35],[200,8,184,8,"roadConditionScore"],[200,26,184,26],[200,28,184,28,"newScore"],[201,6,185,6],[201,7,185,7],[201,8,185,8],[202,4,186,4],[202,5,186,5],[203,4,188,4,"clearLocationHistory"],[203,24,188,24],[203,26,188,26,"clearLocationHistory"],[203,27,188,26],[203,32,188,32,"set"],[203,35,188,35],[203,36,188,36],[204,6,188,38,"locationHistory"],[204,21,188,53],[204,23,188,55],[205,4,188,58],[205,5,188,59],[205,6,188,60],[206,4,190,4],[207,4,191,4,"roadConditionScore"],[207,22,191,22],[207,24,191,24],[207,26,191,26],[208,4,192,4,"updateRoadScore"],[208,19,192,19],[208,21,192,22,"score"],[208,26,192,27],[208,30,192,32,"set"],[208,33,192,35],[208,34,192,36],[209,6,192,38,"roadConditionScore"],[209,24,192,56],[209,26,192,58,"score"],[210,4,192,64],[210,5,192,65],[210,6,192,66],[211,4,194,4],[212,4,195,4,"activeHazards"],[212,17,195,17],[212,19,195,19],[212,21,195,21],[213,4,196,4,"warningHistory"],[213,18,196,18],[213,20,196,20],[213,22,196,22],[214,4,197,4,"lastWarningTime"],[214,19,197,19],[214,21,197,21],[214,22,197,22],[215,4,199,4,"addHazard"],[215,13,199,13],[215,15,199,16,"hazard"],[215,21,199,22],[215,25,199,27],[216,6,200,6],[216,12,200,12],[217,8,200,14,"activeHazards"],[217,21,200,27],[218,8,200,29,"settings"],[219,6,200,38],[219,7,200,39],[219,10,200,42,"get"],[219,13,200,45],[219,14,200,46],[219,15,200,47],[220,6,201,6],[220,12,201,12,"now"],[220,15,201,15],[220,18,201,18,"Date"],[220,22,201,22],[220,23,201,23,"now"],[220,26,201,26],[220,27,201,27],[220,28,201,28],[222,6,203,6],[223,6,204,6],[223,12,204,12,"existingSimilar"],[223,27,204,27],[223,30,204,30,"activeHazards"],[223,43,204,43],[223,44,204,44,"find"],[223,48,204,48],[223,49,204,49,"h"],[223,50,204,50],[223,54,205,8,"h"],[223,55,205,9],[223,56,205,10,"type"],[223,60,205,14],[223,65,205,19,"hazard"],[223,71,205,25],[223,72,205,26,"type"],[223,76,205,30],[223,80,206,8,"fastDistance"],[223,92,206,20],[223,93,206,21,"h"],[223,94,206,22],[223,95,206,23,"latitude"],[223,103,206,31],[223,105,206,33,"h"],[223,106,206,34],[223,107,206,35,"longitude"],[223,116,206,44],[223,118,206,46,"hazard"],[223,124,206,52],[223,125,206,53,"latitude"],[223,133,206,61],[223,135,206,63,"hazard"],[223,141,206,69],[223,142,206,70,"longitude"],[223,151,206,79],[223,152,206,80],[223,155,206,83],[223,158,207,6],[223,159,207,7],[224,6,209,6],[224,10,209,10],[224,11,209,11,"existingSimilar"],[224,26,209,26],[224,28,209,28],[225,8,210,8],[225,14,210,14,"newHazards"],[225,24,210,24],[225,27,210,27],[225,28,210,28],[225,31,210,31,"activeHazards"],[225,44,210,44],[225,46,210,46,"hazard"],[225,52,210,52],[225,53,210,53],[226,8,211,8,"set"],[226,11,211,11],[226,12,211,12],[227,10,212,10,"activeHazards"],[227,23,212,23],[227,25,212,25,"newHazards"],[227,35,212,35],[228,10,213,10,"warningHistory"],[228,24,213,24],[228,26,213,26],[228,27,213,27],[228,30,213,30,"get"],[228,33,213,33],[228,34,213,34],[228,35,213,35],[228,36,213,36,"warningHistory"],[228,50,213,50],[228,52,213,52],[229,12,213,54,"hazard"],[229,18,213,60],[230,12,213,62,"timestamp"],[230,21,213,71],[230,23,213,73,"now"],[231,10,213,77],[231,11,213,78],[231,12,213,79],[231,13,213,80,"slice"],[231,18,213,85],[231,19,213,86],[231,20,213,87],[231,22,213,89],[231,23,213,90],[232,10,213,92],[233,10,214,10,"lastWarningTime"],[233,25,214,25],[233,27,214,27,"now"],[234,8,215,8],[234,9,215,9],[234,10,215,10],[235,6,216,6],[236,4,217,4],[236,5,217,5],[237,4,219,4,"removeHazard"],[237,16,219,16],[237,18,219,19,"hazardId"],[237,26,219,27],[237,30,219,32],[238,6,220,6,"set"],[238,9,220,9],[238,10,220,10],[239,8,221,8,"activeHazards"],[239,21,221,21],[239,23,221,23,"get"],[239,26,221,26],[239,27,221,27],[239,28,221,28],[239,29,221,29,"activeHazards"],[239,42,221,42],[239,43,221,43,"filter"],[239,49,221,49],[239,50,221,50,"h"],[239,51,221,51],[239,55,221,55,"h"],[239,56,221,56],[239,57,221,57,"id"],[239,59,221,59],[239,64,221,64,"hazardId"],[239,72,221,72],[240,6,222,6],[240,7,222,7],[240,8,222,8],[241,4,223,4],[241,5,223,5],[242,4,225,4,"clearHazards"],[242,16,225,16],[242,18,225,18,"clearHazards"],[242,19,225,18],[242,24,225,24,"set"],[242,27,225,27],[242,28,225,28],[243,6,225,30,"activeHazards"],[243,19,225,43],[243,21,225,45],[243,23,225,47],[244,6,225,49,"warningHistory"],[244,20,225,63],[244,22,225,65],[245,4,225,68],[245,5,225,69],[245,6,225,70],[246,4,227,4],[247,4,228,4,"dataProcessingStats"],[247,23,228,23],[247,25,228,25],[248,6,229,6,"totalDataPoints"],[248,21,229,21],[248,23,229,23],[248,24,229,24],[249,6,230,6,"lastSyncTime"],[249,18,230,18],[249,20,230,20],[249,21,230,21],[250,6,231,6,"syncErrors"],[250,16,231,16],[250,18,231,18],[251,4,232,4],[251,5,232,5],[252,4,234,4,"updateStats"],[252,15,234,15],[252,17,234,18,"stats"],[252,22,234,23],[252,26,234,28],[253,6,235,6,"set"],[253,9,235,9],[253,10,235,10],[254,8,236,8,"dataProcessingStats"],[254,27,236,27],[254,29,236,29],[255,10,236,31],[255,13,236,34,"get"],[255,16,236,37],[255,17,236,38],[255,18,236,39],[255,19,236,40,"dataProcessingStats"],[255,38,236,59],[256,10,236,61],[256,13,236,64,"stats"],[257,8,236,70],[258,6,237,6],[258,7,237,7],[258,8,237,8],[259,4,238,4],[260,2,239,2],[260,3,239,3],[260,4,239,4],[260,5,240,0],[260,6,240,1],[262,2,242,0],[263,2,243,0,"useAppStore"],[263,13,243,11],[263,14,243,12,"subscribe"],[263,23,243,21],[263,24,244,3,"state"],[263,29,244,8],[263,33,244,13,"state"],[263,38,244,18],[263,39,244,19,"settings"],[263,47,244,27],[263,49,245,2],[263,55,245,9,"settings"],[263,63,245,17],[263,67,245,22],[264,4,246,4],[264,8,246,8],[265,6,247,6],[265,12,247,12,"storage"],[265,19,247,19],[265,20,247,20,"set"],[265,23,247,23],[265,24,247,24],[265,38,247,38],[265,40,247,40,"JSON"],[265,44,247,44],[265,45,247,45,"stringify"],[265,54,247,54],[265,55,247,55,"settings"],[265,63,247,63],[265,64,247,64],[265,65,247,65],[266,4,248,4],[266,5,248,5],[266,6,248,6],[266,13,248,13,"error"],[266,18,248,18],[266,20,248,20],[267,6,249,6,"console"],[267,13,249,13],[267,14,249,14,"error"],[267,19,249,19],[267,20,249,20],[267,48,249,48],[267,50,249,50,"error"],[267,55,249,55],[267,56,249,56],[268,4,250,4],[269,2,251,2],[269,3,251,3],[269,5,252,2],[270,4,252,4,"equalityFn"],[270,14,252,14],[270,16,252,16,"equalityFn"],[270,17,252,17,"a"],[270,18,252,18],[270,20,252,20,"b"],[270,21,252,21],[270,26,252,26,"JSON"],[270,30,252,30],[270,31,252,31,"stringify"],[270,40,252,40],[270,41,252,41,"a"],[270,42,252,42],[270,43,252,43],[270,48,252,48,"JSON"],[270,52,252,52],[270,53,252,53,"stringify"],[270,62,252,62],[270,63,252,63,"b"],[270,64,252,64],[271,2,252,66],[271,3,253,0],[271,4,253,1],[273,2,255,0],[274,2,256,0,"useAppStore"],[274,13,256,11],[274,14,256,12,"subscribe"],[274,23,256,21],[274,24,257,3,"state"],[274,29,257,8],[274,33,257,13,"state"],[274,38,257,18],[274,39,257,19,"dataProcessingStats"],[274,58,257,38],[274,60,258,3,"stats"],[274,65,258,8],[274,69,258,13],[275,4,259,4],[276,4,260,4],[276,8,260,8,"__DEV__"],[276,15,260,15],[276,17,260,17],[277,6,261,6,"console"],[277,13,261,13],[277,14,261,14,"log"],[277,17,261,17],[277,18,261,18],[277,38,261,38],[277,40,261,40,"stats"],[277,45,261,45],[277,46,261,46],[278,4,262,4],[279,2,263,2],[279,3,264,0],[279,4,264,1],[280,2,266,0],[280,6,266,0,"_default"],[280,14,266,0],[280,17,266,15,"useAppStore"],[280,28,266,26],[281,0,266,27],[281,3]],"functionMap":{"names":["<global>","storage.getString","storage.set","storage._delete","calculateRoadCondition","recentData.map$argument_0","speedVariations.reduce$argument_0","fastDistance","subscribeWithSelector$argument_0","loadSettings","updateSettings","resetSettings","setTracking","updateLocation","clearLocationHistory","updateRoadScore","addHazard","activeHazards.find$argument_0","removeHazard","get.activeHazards.filter$argument_0","clearHazards","updateStats","subscribe$argument_0","subscribe$argument_1","subscribe$argument_2.equalityFn"],"mappings":"AAA;aCO;GDE;OEC;GFE;UGC;GHE;+BIqF;yCCI;6DDC;mDEG,eF;CJI;4BOG;CPU;wBQI;kBCI;KDY;oBEE;KFS;mBGE;KHG;iBII,2CJ;oBKM;KLc;0BME,kCN;qBOI,6CP;eQO;iDCK;sFDE;KRW;kBUE;kDCE,sBD;KVE;kBYE,oDZ;iBaS;KbI;IRC;EsBK,yBtB;EuBC;GvBM;gBwBC,iDxB;EsBK,oCtB;EuBC;GvBK"},"hasCjsExports":false},"type":"js/module"}]}